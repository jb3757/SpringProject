{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      userEmail: \"user3@example.com\",\n      value: [100, 500, 1000, 500, 3000, 5000],\n      //룰렛 돌리고 받는 포인트\n      //룰렛 이미지 assets/룰.png보면 0~5 적어놨는데 이 배열임\n      // ex) 3 > value[3];\n      rolLength: 6,\n      //룰렛 보상 배열 길이\n      probabilities: [0.5, 0.15, 0.1, 0.15, 0.07, 0.03],\n      // [0.5, 0.15, 0.1, 0.15, 0.07, 0.03]\n      //룰렛 보상 확률 1 = 100%\n      setNum: null,\n      showModal: false,\n      modalTitle: \"\",\n      // 모달 제목을 동적으로 표시할 변수\n      modalBody: \"\",\n      // 모달 본문을 동적으로 표시할 변수\n\n      selectedValue: null\n    };\n  },\n  methods: {\n    async startRoulette() {\n      const backServer = \"http://localhost:3000/roulette\";\n      try {\n        const response = await axios.get(`${backServer}/checkroul`, {\n          params: {\n            userEmail: this.userEmail\n          }\n        });\n        this.handleRouletteResponse(response);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    handleRouletteResponse(response) {\n      console.log(response.data.message);\n      if (response.data.message === \"참여불가\") {\n        // 이미 참여한 경우 모달 표시\n        this.setNum = null;\n        this.showModal = true;\n        this.modalTitle = \"이미 참여하셨네요!\";\n        this.modalBody = \"내일 다시 참여해주세요.\";\n      } else {\n        // 아직 참여하지 않은 경우 룰렛 돌리기\n        this.setNum = this.rRandom();\n        this.selectedValue = this.value[this.setNum];\n        this.rRotate();\n        const backServer = \"http://localhost:3000/roulette\";\n        axios.post(`${backServer}/addroul`, {\n          userEmail: this.userEmail,\n          selectedValue: this.selectedValue\n        }).then(response => {\n          console.log(response.data.message);\n          // 룰렛 결과에 따른 모달 표시\n\n          this.modalTitle = \"축하합니다!\";\n          this.modalBody = `${this.selectedValue}P 당첨되었습니다!`;\n          setTimeout(() => {\n            this.showModal = true;\n            setTimeout(() => {\n              window.location.reload();\n            }, 10000);\n          }, 8000);\n        }).catch(error => {\n          console.error(error);\n        });\n      }\n    },\n    rRandom() {\n      var rand = Math.random();\n      // 0~1\n      var sum = 0;\n      for (var i = 0; i < this.probabilities.length; i++) {\n        //보상 확률의 길이(6) 만큼 반복\n        sum += this.probabilities[i];\n        //0 + 보상 확률 배열에서 순서대로 플러스\n        if (rand < sum) return i;\n        // 0~1 사이의 랜덤값중에 sum이 더 커지면 보상 확률 배열중 더 커졋을때의 인덱스 값을 리턴\n      }\n\n      return this.probabilities.length - 1;\n      //이건 혹시 모를 에러 처리 부분같음\n    },\n\n    rRotate() {\n      var panel = document.querySelector(\".rouletter-wacu\");\n      //룰렛 돌아가는 판 부분\n      var btn = document.querySelector(\".rouletter-btn\");\n      //룰렛 돌리는 버튼 부분\n\n      var deg = [];\n      for (var i = 1, len = this.rolLength; i <= len; i++) {\n        // len = 6(보상 포인트 배열의 길이) 1~6\n        deg.push(360 / len * i);\n        //룰렛의 각도를 정하는 거임\n        //360도중 보상 선택지가 6개이니까 60도씩 각도 담당 배열에 저장\n        //ex) [60, 120, 180, 240, 300, 360]\n      }\n\n      console.log(deg);\n      var num = 0;\n      this.$el.append(this.$refs.hiddenInput);\n      //   this.setNum = this.$refs.hiddenInput.value = this.rRandom();\n      this.modalMessage = \"\";\n      var ani = setInterval(() => {\n        //0.05초마다 실행\n        num++;\n        panel.style.transform = \"rotate(\" + 360 * num + \"deg)\";\n        //회전시키는 css나 vue 애니메이션같은데 아마?\n        btn.disabled = true;\n        //룰렛버튼 비활성화\n        btn.style.pointerEvents = \"none\";\n        //룰렛버튼 비활성화 2\n\n        if (num === 50) {\n          //존나 돌리다보면\n          clearInterval(ani);\n          //룰렛 애니메이션 중지\n          panel.style.transform = `rotate(${deg[this.setNum]}deg)`;\n          //각도 담당 배열을 이용하여 rRandom()을 실행하여 받은 0~5에 해당하는 각도로 룰렛 고정\n          //일정한 각도로 정지를 하긴하는데 잘 모르겠네..\n\n          // console.log(this.value[this.setNum]);\n\n          this.selectedValue = this.value[this.setNum];\n          setTimeout(() => {\n            this.rLayerPopup(this.setNum);\n            //룰렛 실행시킨지 5.5초후 자동으로 버튼 활성화\n            btn.disabled = false;\n            btn.style.pointerEvents = \"auto\";\n          }, 5500);\n        }\n      }, 50);\n      //0.05초마다 실행\n    },\n\n    rLayerPopup(num) {\n      const prizes = [100, 500, 1000, 500, 3000, 5000];\n      //주기로한 포인트 배열 value랑 같음 굳이 또 선언해야하나?\n\n      this.modalMessage = prizes[num];\n      //모달 메세지에 rRandom()을 실행하여 받은 0~5 에 해당하는 값을 보여줌\n      var modal = this.$el.querySelector(\"#resultModal\");\n      modal.style.display = \"block\";\n      //모달 css\n    },\n\n    hideModal() {\n      var modal = this.$el.querySelector(\"#resultModal\");\n      modal.style.display = \"none\";\n    }\n  }\n};","map":{"version":3,"names":["axios","data","userEmail","value","rolLength","probabilities","setNum","showModal","modalTitle","modalBody","selectedValue","methods","startRoulette","backServer","response","get","params","handleRouletteResponse","error","console","log","message","rRandom","rRotate","post","then","setTimeout","window","location","reload","catch","rand","Math","random","sum","i","length","panel","document","querySelector","btn","deg","len","push","num","$el","append","$refs","hiddenInput","modalMessage","ani","setInterval","style","transform","disabled","pointerEvents","clearInterval","rLayerPopup","prizes","modal","display","hideModal"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\roulette.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <div class=\"rouletter\">\r\n      <div class=\"rouletter-bg\">\r\n        <div class=\"rouletter-wacu\"></div>\r\n      </div>\r\n      <div class=\"rouletter-arrow\"></div>\r\n      <button class=\"rouletter-btn\" @click=\"startRoulette()\">GO!</button>\r\n    </div>\r\n\r\n    <input type=\"hidden\" class=\"hidden-input\" ref=\"hiddenInput\" />\r\n    <div class=\"modal\" id=\"resultModal\" :class=\"{ 'modal-show': showModal }\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-title\" v-if=\"modalTitle\">{{ modalTitle }}</div>\r\n          <div class=\"modal-body\" id=\"modal-body\" v-if=\"modalBody\">\r\n            {{ modalBody }}\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <div class=\"modal-close\" @click=\"hideModal\">&times;</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      userEmail: \"user3@example.com\",\r\n      value: [100, 500, 1000, 500, 3000, 5000],\r\n      //룰렛 돌리고 받는 포인트\r\n      //룰렛 이미지 assets/룰.png보면 0~5 적어놨는데 이 배열임\r\n      // ex) 3 > value[3];\r\n      rolLength: 6,\r\n      //룰렛 보상 배열 길이\r\n      probabilities: [0.5, 0.15, 0.1, 0.15, 0.07, 0.03],\r\n      // [0.5, 0.15, 0.1, 0.15, 0.07, 0.03]\r\n      //룰렛 보상 확률 1 = 100%\r\n      setNum: null,\r\n      showModal: false,\r\n      modalTitle: \"\", // 모달 제목을 동적으로 표시할 변수\r\n      modalBody: \"\", // 모달 본문을 동적으로 표시할 변수\r\n\r\n      selectedValue: null,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async startRoulette() {\r\n      const backServer = \"http://localhost:3000/roulette\";\r\n      try {\r\n        const response = await axios.get(`${backServer}/checkroul`, {\r\n          params: {\r\n            userEmail: this.userEmail,\r\n          },\r\n        });\r\n        this.handleRouletteResponse(response);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    handleRouletteResponse(response) {\r\n      console.log(response.data.message);\r\n      if (response.data.message === \"참여불가\") {\r\n        // 이미 참여한 경우 모달 표시\r\n        this.setNum = null;\r\n        this.showModal = true;\r\n        this.modalTitle = \"이미 참여하셨네요!\";\r\n        this.modalBody = \"내일 다시 참여해주세요.\";\r\n      } else {\r\n        // 아직 참여하지 않은 경우 룰렛 돌리기\r\n        this.setNum = this.rRandom();\r\n        this.selectedValue = this.value[this.setNum];\r\n        this.rRotate();\r\n\r\n        const backServer = \"http://localhost:3000/roulette\";\r\n        axios\r\n          .post(`${backServer}/addroul`, {\r\n            userEmail: this.userEmail,\r\n            selectedValue: this.selectedValue,\r\n          })\r\n          .then((response) => {\r\n            console.log(response.data.message);\r\n            // 룰렛 결과에 따른 모달 표시\r\n\r\n            this.modalTitle = \"축하합니다!\";\r\n            this.modalBody = `${this.selectedValue}P 당첨되었습니다!`;\r\n            setTimeout(() => {\r\n              this.showModal = true;\r\n              setTimeout(() => {\r\n                window.location.reload();\r\n              }, 10000);\r\n            }, 8000);\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n      }\r\n    },\r\n    rRandom() {\r\n      var rand = Math.random();\r\n      // 0~1\r\n      var sum = 0;\r\n      for (var i = 0; i < this.probabilities.length; i++) {\r\n        //보상 확률의 길이(6) 만큼 반복\r\n        sum += this.probabilities[i];\r\n        //0 + 보상 확률 배열에서 순서대로 플러스\r\n        if (rand < sum) return i;\r\n        // 0~1 사이의 랜덤값중에 sum이 더 커지면 보상 확률 배열중 더 커졋을때의 인덱스 값을 리턴\r\n      }\r\n      return this.probabilities.length - 1;\r\n      //이건 혹시 모를 에러 처리 부분같음\r\n    },\r\n    rRotate() {\r\n      var panel = document.querySelector(\".rouletter-wacu\");\r\n      //룰렛 돌아가는 판 부분\r\n      var btn = document.querySelector(\".rouletter-btn\");\r\n      //룰렛 돌리는 버튼 부분\r\n\r\n      var deg = [];\r\n      for (var i = 1, len = this.rolLength; i <= len; i++) {\r\n        // len = 6(보상 포인트 배열의 길이) 1~6\r\n        deg.push((360 / len) * i);\r\n        //룰렛의 각도를 정하는 거임\r\n        //360도중 보상 선택지가 6개이니까 60도씩 각도 담당 배열에 저장\r\n        //ex) [60, 120, 180, 240, 300, 360]\r\n      }\r\n      console.log(deg);\r\n\r\n      var num = 0;\r\n\r\n      this.$el.append(this.$refs.hiddenInput);\r\n      //   this.setNum = this.$refs.hiddenInput.value = this.rRandom();\r\n      this.modalMessage = \"\";\r\n\r\n      var ani = setInterval(() => {\r\n        //0.05초마다 실행\r\n        num++;\r\n        panel.style.transform = \"rotate(\" + 360 * num + \"deg)\";\r\n        //회전시키는 css나 vue 애니메이션같은데 아마?\r\n        btn.disabled = true;\r\n        //룰렛버튼 비활성화\r\n        btn.style.pointerEvents = \"none\";\r\n        //룰렛버튼 비활성화 2\r\n\r\n        if (num === 50) {\r\n          //존나 돌리다보면\r\n          clearInterval(ani);\r\n          //룰렛 애니메이션 중지\r\n          panel.style.transform = `rotate(${deg[this.setNum]}deg)`;\r\n          //각도 담당 배열을 이용하여 rRandom()을 실행하여 받은 0~5에 해당하는 각도로 룰렛 고정\r\n          //일정한 각도로 정지를 하긴하는데 잘 모르겠네..\r\n\r\n          // console.log(this.value[this.setNum]);\r\n\r\n          this.selectedValue = this.value[this.setNum];\r\n\r\n          setTimeout(() => {\r\n            this.rLayerPopup(this.setNum);\r\n            //룰렛 실행시킨지 5.5초후 자동으로 버튼 활성화\r\n            btn.disabled = false;\r\n            btn.style.pointerEvents = \"auto\";\r\n          }, 5500);\r\n        }\r\n      }, 50);\r\n      //0.05초마다 실행\r\n    },\r\n    rLayerPopup(num) {\r\n      const prizes = [100, 500, 1000, 500, 3000, 5000];\r\n      //주기로한 포인트 배열 value랑 같음 굳이 또 선언해야하나?\r\n\r\n      this.modalMessage = prizes[num];\r\n      //모달 메세지에 rRandom()을 실행하여 받은 0~5 에 해당하는 값을 보여줌\r\n      var modal = this.$el.querySelector(\"#resultModal\");\r\n      modal.style.display = \"block\";\r\n      //모달 css\r\n    },\r\n\r\n    hideModal() {\r\n      var modal = this.$el.querySelector(\"#resultModal\");\r\n      modal.style.display = \"none\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.rouletter {\r\n  position: relative;\r\n  width: 400px;\r\n  height: 400px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  top: 100px;\r\n}\r\n.rouletter-bg {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 350px;\r\n  height: 350px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n}\r\n.rouletter-wacu {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: #f5f5f2 url(\"../assets/룰.png\") no-repeat;\r\n  background-size: 100%;\r\n  transform-origin: center;\r\n  transition-timing-function: ease-in-out;\r\n  transition: 5s;\r\n}\r\n.rouletter-arrow {\r\n  position: absolute;\r\n  top: -5px; /* 핀이 룰렛 위에 약간 걸치도록 조정 */\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 50px; /* 이미지의 가로 길이에 맞게 조정하세요 */\r\n\r\n  background-image: url(\"../assets/룰렛핀.png\");\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n.rouletter-btn {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-70%, -50%);\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 80px;\r\n  background: #fff;\r\n  border-image: linear-gradient(to right, #fbfcb9be, #ffcdf3aa, #65d3ffaa);\r\n  border: 2px solid rgb(127, 127, 170);\r\n  color: rgb(127, 127, 170);\r\n  font-weight: bold;\r\n}\r\n.hidden-input {\r\n  display: none;\r\n}\r\n.modal {\r\n  display: none;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.modal-show {\r\n  /* showModal 변수가 true일 때 모달을 표시함 */\r\n  display: block;\r\n}\r\n.modal-dialog {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 300px;\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n}\r\n.modal-title {\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n  color: #4e4eff;\r\n}\r\n.modal-body {\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n.modal-footer {\r\n  text-align: right;\r\n}\r\n.modal-close {\r\n  cursor: pointer;\r\n  color: #999;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}