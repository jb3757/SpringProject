{"ast":null,"code":"import axios from \"axios\";\nimport \"@/assets/css/myPage.css\";\nimport GnbBar from \"../components/gnbBar.vue\";\nimport myPage_top from \"../components/myPage_top.vue\";\nimport myPageSide from \"../components/myPageSide.vue\";\nexport default {\n  name: \"\",\n  components: {\n    GnbBar,\n    myPage_top,\n    myPageSide\n  },\n  data() {\n    return {\n      startDate: null,\n      endDate: null,\n      orderKeyword: \"\",\n      selectedStatus: \"전체\",\n      orderList: []\n    };\n  },\n  created() {\n    this.email = localStorage.getItem(\"userID\");\n  },\n  mounted() {\n    this.orderHistory();\n  },\n  methods: {\n    fetchFilteredOrders() {\n      // 선택한 날짜 범위로 주문 목록을 가져오는 로직\n      // axios.get(...)를 사용하여 API 호출\n    },\n    searchOrders() {\n      // 주문 검색 로직\n      // axios.get(...)를 사용하여 API 호출\n    },\n    fetchOrdersByStatus() {\n      // 선택한 배송 상태별로 주문 목록을 가져오는 로직\n      // axios.get(...)를 사용하여 API 호출\n    },\n    // 주문 목록을 표시하는 코드 및 API 호출 메서드 추가\n    orderHistory() {\n      axios({\n        url: \"http://localhost:3000/mypage/orderHistory\",\n        method: \"get\",\n        params: {\n          userEmail: this.email\n        }\n      }).then(response => {\n        console.log(response.data); // 가져온 데이터 확인\n        this.orderList = response.data; // 수정된 부분\n      }).catch(error => {\n        console.error(\"주문내역 가져오기 오류:\", error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","GnbBar","myPage_top","myPageSide","name","components","data","startDate","endDate","orderKeyword","selectedStatus","orderList","created","email","localStorage","getItem","mounted","orderHistory","methods","fetchFilteredOrders","searchOrders","fetchOrdersByStatus","url","method","params","userEmail","then","response","console","log","catch","error"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\mypage.vue"],"sourcesContent":["<template>\r\n    <GnbBar />\r\n    <myPage_top />\r\n    <div class=\"mypage_menu\">\r\n        <myPageSide />\r\n    </div>\r\n    <div class=\"right_box\">\r\n        <h1 class=\"mypage_title_big\">전체 주문내역</h1>\r\n        <div class=\"filter-container\">\r\n            <div class=\"date-filter\">\r\n                <input type=\"date\" v-model=\"startDate\" />\r\n                ~\r\n                <input type=\"date\" v-model=\"endDate\" />\r\n                <button class=\"orderinfo_btn\" @click=\"fetchFilteredOrders\">검색</button>\r\n            </div>\r\n\r\n            <div class=\"order-search\">\r\n                <label>주문 검색:</label>\r\n                <input class=\"mypage_book_search\" type=\"text\" v-model=\"orderKeyword\" placeholder=\"책 이름 검색\" />\r\n                <button class=\"orderinfo_btn\" @click=\"searchOrders\">검색</button>\r\n            </div>\r\n\r\n            <div class=\"status-filter\">\r\n                <label>배송 상태별 조회:</label>\r\n                <select v-model=\"selectedStatus\">\r\n                    <option value=\"전체\">전체</option>\r\n                    <option value=\"배송준비\">배송준비</option>\r\n                    <option value=\"배송중\">배송중</option>\r\n                    <option value=\"배송완료\">배송완료</option>\r\n                    <option value=\"주문취소\">주문취소</option>\r\n                </select>\r\n                <button class=\"orderinfo_btn\" @click=\"fetchOrdersByStatus\">조회</button>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"order-list\">\r\n            <div v-for=\"order in orderList\" :key=\"order.ORDER_ID\" class=\"order-box\">\r\n                <!-- 왼쪽에 배송 상태 및 결제일 -->\r\n                <div class=\"order_status\">\r\n                    <div>{{ order.ORDER_STATE }}</div>\r\n                    <div>{{ order.ORDER_PAYDATE }}</div>\r\n                </div>\r\n\r\n                <!-- 왼쪽에 책 표지 -->\r\n                <div class=\"book-cover\">\r\n                    <img :src=\"order.items[0].BOOK_COVER\" alt=\"Book Cover\" />\r\n                </div>\r\n\r\n                <!-- 오른쪽에 책 정보 -->\r\n                <div class=\"book-info\">\r\n                    <p>\r\n                        {{ order.items[0].BOOK_TITLE }}\r\n                        <span v-if=\"order.ORDER_CNT > 1\"><span class=\"order_cnt_out\">외</span> {{ order.ORDER_CNT - 1 }} 건</span>\r\n                    </p>\r\n                    <p>가격: {{ order.ORDER_PAY }}</p>\r\n                    <p>주문 상세</p>\r\n                </div>\r\n\r\n                <!-- 구매확정 버튼 -->\r\n                <button v-if=\"order.ORDER_STATE === '배송완료'\" class=\"confirm-button\">구매확정</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nimport \"@/assets/css/myPage.css\";\r\nimport GnbBar from \"../components/gnbBar.vue\";\r\nimport myPage_top from \"../components/myPage_top.vue\";\r\nimport myPageSide from \"../components/myPageSide.vue\";\r\n\r\nexport default {\r\n    name: \"\",\r\n    components: { GnbBar, myPage_top, myPageSide },\r\n    data() {\r\n        return {\r\n            startDate: null,\r\n            endDate: null,\r\n            orderKeyword: \"\",\r\n            selectedStatus: \"전체\",\r\n            orderList: [],\r\n        };\r\n    },\r\n    created() {\r\n        this.email = localStorage.getItem(\"userID\");\r\n    },\r\n    mounted() {\r\n        this.orderHistory();\r\n    },\r\n    methods: {\r\n        fetchFilteredOrders() {\r\n            // 선택한 날짜 범위로 주문 목록을 가져오는 로직\r\n            // axios.get(...)를 사용하여 API 호출\r\n        },\r\n        searchOrders() {\r\n            // 주문 검색 로직\r\n            // axios.get(...)를 사용하여 API 호출\r\n        },\r\n        fetchOrdersByStatus() {\r\n            // 선택한 배송 상태별로 주문 목록을 가져오는 로직\r\n            // axios.get(...)를 사용하여 API 호출\r\n        },\r\n        // 주문 목록을 표시하는 코드 및 API 호출 메서드 추가\r\n        orderHistory() {\r\n            axios({\r\n                url: \"http://localhost:3000/mypage/orderHistory\",\r\n                method: \"get\",\r\n                params: {\r\n                    userEmail: this.email,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    console.log(response.data); // 가져온 데이터 확인\r\n                    this.orderList = response.data; // 수정된 부분\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"주문내역 가져오기 오류:\", error);\r\n                });\r\n        },\r\n    },\r\n};\r\n</script>\r\n"],"mappings":"AAiEA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAO,yBAAyB;AAChC,OAAOC,MAAK,MAAO,0BAA0B;AAC7C,OAAOC,UAAS,MAAO,8BAA8B;AACrD,OAAOC,UAAS,MAAO,8BAA8B;AAErD,eAAe;EACXC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE;IAAEJ,MAAM;IAAEC,UAAU;IAAEC;EAAW,CAAC;EAC9CG,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,SAAS,EAAE,IAAI;MACfC,OAAO,EAAE,IAAI;MACbC,YAAY,EAAE,EAAE;MAChBC,cAAc,EAAE,IAAI;MACpBC,SAAS,EAAE;IACf,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAC/C,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,YAAY,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACLC,mBAAmBA,CAAA,EAAG;MAClB;MACA;IAAA,CACH;IACDC,YAAYA,CAAA,EAAG;MACX;MACA;IAAA,CACH;IACDC,mBAAmBA,CAAA,EAAG;MAClB;MACA;IAAA,CACH;IACD;IACAJ,YAAYA,CAAA,EAAG;MACXjB,KAAK,CAAC;QACFsB,GAAG,EAAE,2CAA2C;QAChDC,MAAM,EAAE,KAAK;QACbC,MAAM,EAAE;UACJC,SAAS,EAAE,IAAI,CAACZ;QACpB;MACJ,CAAC,EACIa,IAAI,CAAEC,QAAQ,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACrB,IAAI,CAAC,EAAE;QAC5B,IAAI,CAACK,SAAQ,GAAIgB,QAAQ,CAACrB,IAAI,EAAE;MACpC,CAAC,EACAwB,KAAK,CAAEC,KAAK,IAAK;QACdH,OAAO,CAACG,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACzC,CAAC,CAAC;IACV;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}