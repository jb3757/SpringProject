{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport GnbBar from \"../components/gnbBar.vue\";\nimport Floating from \"../components/floating.vue\";\nimport StarIcon from \"../components/star.vue\"; // 별점 아이콘 컴포넌트의 경로를 수정해주세요.\n\nimport { isLogindDisplay } from \"../mixins/main.js\";\nimport axios from \"axios\";\naxios.defaults.baseURL = \"http://localhost:3000\";\naxios.defaults.headers.post[\"Contents-Type\"] = \"application/json;charset=utf-8\";\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\nexport default {\n  mixins: [isLogindDisplay],\n  name: \"\",\n  components: {\n    GnbBar,\n    StarIcon,\n    Floating\n  },\n  data() {\n    return {\n      recListData: [],\n      reviewScore: [],\n      // 리뷰 점수를 얻어온다고 가정\n      email: \"\",\n      bookId: \"\",\n      bestBook: [],\n      //좋아요 여부\n      isLiked: false,\n      likeBook: []\n    };\n  },\n  setup() {},\n  created() {\n    this.email = localStorage.getItem(\"userID\");\n    this.getLikeBook();\n    this.getRecList();\n    this.getBestBook();\n  },\n  mounted() {},\n  unmounted() {},\n  methods: {\n    async getRecList() {\n      if (localStorage.getItem(\"userID\")) {\n        try {\n          const response = await axios.post(\"http://localhost:3000/booklist/getRecList\", {\n            email: this.email\n          });\n          this.recListData = response.data.map(book => ({\n            ...book,\n            isLiked: this.likeBook.includes(book.BOOK_ID)\n          }));\n          for (const book of response.data) {\n            this.reviewScore.push(book.reviewpoint / 2);\n          }\n        } catch (error) {\n          alert(error);\n        }\n      }\n    },\n    //회원이 좋아요한 책 ID 가져오기\n    async getLikeBook() {\n      await axios({\n        url: \"http://localhost:3000/bookList/checkLikeList\",\n        method: \"POST\",\n        data: {\n          email: this.email\n        }\n      }).then(res => {\n        this.likeBook = res.data;\n      });\n    },\n    async likeToggle(bookId) {\n      if (localStorage.getItem(\"userID\")) {\n        this.bookId = bookId;\n        await axios({\n          url: \"http://localhost:3000/detail/likeOrDislike\",\n          method: \"POST\",\n          data: {\n            email: this.email,\n            bookId: this.bookId\n          }\n        }).then(res => {\n          console.log(res.data, \"좋아요 추가삭제\");\n          this.getLikeBook();\n          this.getRecList();\n        });\n      } else {\n        const conResult = confirm(\"로그인이 필요합니다. \\n 로그인 하시겠습니까?\");\n        conResult ? window.location.href = \"/login\" : null;\n      }\n    },\n    async getBestBook() {\n      await axios({\n        url: \"http://localhost:3000/main/getBestBook\",\n        method: \"POST\",\n        data: {}\n      }).then(res => {\n        for (var i in res.data) {\n          this.bestBook.push(res.data[i]);\n        }\n        console.log(this.bestBook, \"베스트북\");\n      }).catch(err => {\n        alert(err);\n      });\n    },\n    //입력된 숫자를 주어진 범위에 따라 적절한 별점으로 변환\n    convertRatingToHalfStars(number) {\n      if (Number.isInteger(number)) {\n        if (number >= 1 && number <= 5) {\n          return number;\n        } else {\n          return 0; // 범위를 벗어나는 경우\n        }\n      } else {\n        const integerPart = Math.floor(number);\n        const decimalPart = number - integerPart;\n        if (decimalPart < 0.5) {\n          return integerPart;\n        } else {\n          return integerPart + 0.5;\n        }\n      }\n    },\n    formatReviewScore(number) {\n      if (Number.isInteger(number)) {\n        return number.toFixed(1); // 정수인 경우 소수점 자리를 1로 설정하여 변환\n      } else {\n        return number.toString(); // 소수인 경우 그대로 문자열로 변환\n      }\n    },\n\n    formatNumber(number) {\n      // 숫자를 천 단위마다 쉼표가 있는 형식으로 변환\n      return new Intl.NumberFormat().format(number);\n    },\n    //장바구니에 추가\n    async addToCart(bookId) {\n      if (localStorage.getItem(\"userID\")) {\n        this.bookId = bookId;\n        await axios({\n          url: \"http://localhost:3000/detail/gotoCart\",\n          method: \"POST\",\n          data: {\n            email: this.email,\n            bookId: this.bookId\n          }\n        }).then(res => {\n          alert(\"장바구니에 추가되었습니다.\");\n          this.$refs.childComponent.getCartNum();\n        });\n      } else {\n        const conResult = confirm(\"로그인이 필요합니다. \\n 로그인 하시겠습니까?\");\n        conResult ? window.location.href = \"/login\" : null;\n      }\n    }\n  }\n};","map":{"version":3,"names":["GnbBar","Floating","StarIcon","isLogindDisplay","axios","defaults","baseURL","headers","post","mixins","name","components","data","recListData","reviewScore","email","bookId","bestBook","isLiked","likeBook","setup","created","localStorage","getItem","getLikeBook","getRecList","getBestBook","mounted","unmounted","methods","response","map","book","includes","BOOK_ID","push","reviewpoint","error","alert","url","method","then","res","likeToggle","console","log","conResult","confirm","window","location","href","i","catch","err","convertRatingToHalfStars","number","Number","isInteger","integerPart","Math","floor","decimalPart","formatReviewScore","toFixed","toString","formatNumber","Intl","NumberFormat","format","addToCart","$refs","childComponent","getCartNum"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\recommendList.vue"],"sourcesContent":["<style src=\"../assets/css/bestList.css\"></style>\r\n\r\n<template>\r\n  <GnbBar ref=\"childComponent\" />\r\n  <div class=\"best\">\r\n    <div class=\"best_header\">\r\n      <h2>추천</h2>\r\n    </div>\r\n    <div v-if=\"logined == false\" class=\"main_container_blur\">\r\n      <h2>로그인하시면 취향에 맞는 책을 보여드려요</h2>\r\n      <a href=\"/login\">로그인하고 책 추천받기</a>\r\n    </div>\r\n    <div ref=\"mainBlur\" class=\"best_items blur\">\r\n      <!-- 로그인시 -->\r\n      <div v-if=\"logined == true\" v-for=\"(item, i) in recListData\" :key=\"i\" class=\"best_item\">\r\n        <div class=\"best_item_img\">\r\n          <a href=\"\"><img :src=\"item.BOOK_COVER\" alt=\"\" /></a>\r\n        </div>\r\n        <div class=\"best_item_info\">\r\n          <h2 class=\"best_item_info_title\"><a href=\"\">{{ item.BOOK_TITLE }}</a></h2>\r\n          <span class=\"best_item_info_author\">{{ item.BOOK_AUTHOR }} | {{ item.BOOK_PUBDATE }}</span>\r\n          <div class=\"best_item_info_price\">\r\n            <span>{{ formatNumber(item.BOOK_PRICE) }}</span>\r\n            <span>원</span>\r\n          </div>\r\n          <p class=\"best_item_info_summary\">\r\n            {{ item.BOOK_DESCRIPTION }}\r\n          </p>\r\n          <div class=\"best_item_info_star\">\r\n            <span v-if=\"item.reviewpoint == 0\" class=\"best_item_info_star_num\">0.0</span>\r\n            <span v-else class=\"best_item_info_star_num\">{{ formatReviewScore(item.reviewpoint) }}</span>\r\n            <StarIcon :rating=\"convertRatingToHalfStars(reviewScore[i])\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"best_item_order\">\r\n          <a href=\"\">결제하러 가기</a>\r\n          <p><span>내일(7/28)</span> 도착예정</p>\r\n        </div>\r\n        <div class=\"best_item_btn\">\r\n          <img v-if=\"item.isLiked == true\" @click=\"likeToggle(item.BOOK_ID)\" src=\"../assets/img/heartFill.png\"\r\n            alt=\"Heart Filled\" />\r\n          <img v-else-if=\"item.isLiked == false\" @click=\"likeToggle(item.BOOK_ID)\" src=\"../assets/img/heart.png\"\r\n            alt=\"Heart\" />\r\n          <img @click=\"addToCart(item.BOOK_ID)\" src=\"../assets/img/cart2.png\" alt=\"\" />\r\n        </div>\r\n      </div>\r\n      <!-- 비로그인시 -->\r\n      <div v-else-if=\"logined == false\" v-for=\"(item, i) in bestBook\" class=\"best_item\">\r\n        <div class=\"best_item_img\">\r\n          <a href=\"\"><img :src=\"item.BOOK_COVER\" alt=\"\" /></a>\r\n        </div>\r\n        <div class=\"best_item_info\">\r\n          <h2 class=\"best_item_info_title\"><a href=\"\">{{ item.BOOK_TITLE }}</a></h2>\r\n          <span class=\"best_item_info_author\">{{ item.BOOK_AUTHOR }} | {{ item.PUBDATE }}</span>\r\n          <div class=\"best_item_info_price\">\r\n            <span>{{ formatNumber(item.BOOK_PRICE) }}</span>\r\n            <span>원</span>\r\n          </div>\r\n          <p class=\"best_item_info_summary\">\r\n            {{ item.BOOK_DESCRIPTION }}\r\n          </p>\r\n          <div class=\"best_item_info_star\">\r\n            <span v-if=\"item.reviewpoint == 0\" class=\"best_item_info_star_num\">0.0</span>\r\n            <span v-else class=\"best_item_info_star_num\">{{ formatReviewScore(10) }}</span>\r\n            <StarIcon :rating=\"convertRatingToHalfStars(10)\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"best_item_order\">\r\n          <a href=\"\">결제하러 가기</a>\r\n          <p><span>내일(7/28)</span> 도착예정</p>\r\n        </div>\r\n        <div class=\"best_item_btn\">\r\n          <img v-if=\"item.isLiked == true\" @click=\"likeToggle(item.BOOK_ID)\" src=\"../assets/img/heartFill.png\"\r\n            alt=\"Heart Filled\" />\r\n          <img v-else-if=\"item.isLiked == false\" @click=\"likeToggle(item.BOOK_ID)\" src=\"../assets/img/heart.png\"\r\n            alt=\"Heart\" />\r\n          <img @click=\"addToCart(item.BOOK_ID)\" src=\"../assets/img/cart2.png\" alt=\"\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- 플로팅-->\r\n    <Floating />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport GnbBar from \"../components/gnbBar.vue\";\r\nimport Floating from \"../components/floating.vue\"\r\nimport StarIcon from \"../components/star.vue\"; // 별점 아이콘 컴포넌트의 경로를 수정해주세요.\r\n\r\nimport { isLogindDisplay } from \"../mixins/main.js\";\r\n\r\nimport axios from \"axios\";\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\naxios.defaults.headers.post[\"Contents-Type\"] = \"application/json;charset=utf-8\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nexport default {\r\n  mixins: [isLogindDisplay],\r\n  name: \"\",\r\n  components: { GnbBar, StarIcon, Floating },\r\n  data() {\r\n    return {\r\n      recListData: [],\r\n      reviewScore: [], // 리뷰 점수를 얻어온다고 가정\r\n      email: \"\",\r\n      bookId: \"\",\r\n\r\n      bestBook: [],\r\n\r\n      //좋아요 여부\r\n      isLiked: false,\r\n      likeBook: [],\r\n    };\r\n  },\r\n\r\n  setup() { },\r\n  created() {\r\n    this.email = localStorage.getItem(\"userID\");\r\n    this.getLikeBook();\r\n    this.getRecList()\r\n    this.getBestBook();\r\n  },\r\n  mounted() { },\r\n  unmounted() { },\r\n\r\n  methods: {\r\n    async getRecList() {\r\n      if (localStorage.getItem(\"userID\")) {\r\n        try {\r\n          const response = await axios.post(\"http://localhost:3000/booklist/getRecList\", {\r\n            email: this.email\r\n          });\r\n\r\n          this.recListData = response.data.map(book => ({\r\n            ...book,\r\n            isLiked: this.likeBook.includes(book.BOOK_ID)\r\n          }));\r\n\r\n          for (const book of response.data) {\r\n            this.reviewScore.push(book.reviewpoint / 2);\r\n          }\r\n        } catch (error) {\r\n          alert(error);\r\n        }\r\n      }\r\n    },\r\n    //회원이 좋아요한 책 ID 가져오기\r\n    async getLikeBook() {\r\n      await axios({\r\n        url: \"http://localhost:3000/bookList/checkLikeList\",\r\n        method: \"POST\",\r\n        data: {\r\n          email: this.email\r\n        }\r\n      })\r\n        .then((res) => {\r\n          this.likeBook = res.data;\r\n        })\r\n    },\r\n    async likeToggle(bookId) {\r\n      if (localStorage.getItem(\"userID\")) {\r\n        this.bookId = bookId;\r\n        await axios({\r\n          url: \"http://localhost:3000/detail/likeOrDislike\",\r\n          method: \"POST\",\r\n          data: {\r\n            email: this.email,\r\n            bookId: this.bookId\r\n          }\r\n        })\r\n          .then((res) => {\r\n            console.log(res.data, \"좋아요 추가삭제\")\r\n            this.getLikeBook();\r\n            this.getRecList();\r\n          })\r\n\r\n      } else {\r\n        const conResult = confirm(\"로그인이 필요합니다. \\n 로그인 하시겠습니까?\");\r\n        conResult ? window.location.href = \"/login\" : null;\r\n      }\r\n\r\n    },\r\n    async getBestBook() {\r\n      await axios({\r\n        url: \"http://localhost:3000/main/getBestBook\",\r\n        method: \"POST\",\r\n        data: {},\r\n      })\r\n        .then((res) => {\r\n          for (var i in res.data) {\r\n            this.bestBook.push(res.data[i]);\r\n          }\r\n          console.log(this.bestBook, \"베스트북\");\r\n\r\n        })\r\n        .catch((err) => {\r\n          alert(err);\r\n        });\r\n    },\r\n    //입력된 숫자를 주어진 범위에 따라 적절한 별점으로 변환\r\n    convertRatingToHalfStars(number) {\r\n      if (Number.isInteger(number)) {\r\n        if (number >= 1 && number <= 5) {\r\n          return number;\r\n        } else {\r\n          return 0; // 범위를 벗어나는 경우\r\n        }\r\n      } else {\r\n        const integerPart = Math.floor(number);\r\n        const decimalPart = number - integerPart;\r\n\r\n        if (decimalPart < 0.5) {\r\n          return integerPart;\r\n        } else {\r\n          return integerPart + 0.5;\r\n        }\r\n      }\r\n    },\r\n    formatReviewScore(number) {\r\n      if (Number.isInteger(number)) {\r\n        return number.toFixed(1); // 정수인 경우 소수점 자리를 1로 설정하여 변환\r\n      } else {\r\n        return number.toString(); // 소수인 경우 그대로 문자열로 변환\r\n      }\r\n    },\r\n    formatNumber(number) {\r\n      // 숫자를 천 단위마다 쉼표가 있는 형식으로 변환\r\n      return new Intl.NumberFormat().format(number);\r\n    },\r\n    //장바구니에 추가\r\n    async addToCart(bookId) {\r\n      if (localStorage.getItem(\"userID\")) {\r\n        this.bookId = bookId;\r\n        await axios({\r\n          url: \"http://localhost:3000/detail/gotoCart\",\r\n          method: \"POST\",\r\n          data: {\r\n            email: this.email,\r\n            bookId: this.bookId\r\n          }\r\n        })\r\n          .then((res) => {\r\n            alert(\"장바구니에 추가되었습니다.\");\r\n            this.$refs.childComponent.getCartNum();\r\n          })\r\n      } else {\r\n        const conResult = confirm(\"로그인이 필요합니다. \\n 로그인 하시겠습니까?\");\r\n        conResult ? window.location.href = \"/login\" : null;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}