{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport GnbBar from \"../components/gnbBar.vue\";\nimport Floating from \"../components/floating.vue\";\nimport StarIcon from \"../components/star.vue\"; // 별점 아이콘 컴포넌트의 경로를 수정해주세요.\n\nimport axios from \"axios\";\naxios.defaults.baseURL = \"http://localhost:3000\";\naxios.defaults.headers.post[\"Contents-Type\"] = \"application/json;charset=utf-8\";\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\nexport default {\n  name: \"\",\n  components: {\n    GnbBar,\n    StarIcon,\n    Floating\n  },\n  data() {\n    return {\n      bestListData: [],\n      reviewScore: [],\n      // 리뷰 점수를 얻어온다고 가정\n      email: \"\",\n      bookId: \"\",\n      //좋아요 여부\n      isLiked: false\n    };\n  },\n  setup() {},\n  created() {\n    this.email = localStorage.getItem(\"userID\");\n    this.getBestList();\n  },\n  mounted() {},\n  unmounted() {},\n  methods: {\n    async getBestList() {\n      await axios({\n        url: \"http://localhost:3000/booklist/getBest\",\n        method: \"POST\",\n        data: {}\n      }).then(res => {\n        this.bestListData = res.data.map(book => {\n          return {\n            ...book,\n            isLiked: false // 처음에 모든 책은 좋아요가 되지 않은 상태로 초기화\n          };\n        });\n\n        console.log(this.bestListData);\n        for (var i in res.data) {\n          // this.bestListData.push(res.data[i]);\n          //별이 5개이므로 총점10점을 2로 나눔\n          this.reviewScore.push(res.data[i].reviewpoint / 2);\n        }\n      }).catch(err => {\n        alert(err);\n      });\n    },\n    //입력된 숫자를 주어진 범위에 따라 적절한 별점으로 변환\n    convertRatingToHalfStars(number) {\n      if (Number.isInteger(number)) {\n        if (number >= 1 && number <= 5) {\n          return number;\n        } else {\n          return 0; // 범위를 벗어나는 경우\n        }\n      } else {\n        const integerPart = Math.floor(number);\n        const decimalPart = number - integerPart;\n        if (decimalPart < 0.5) {\n          return integerPart;\n        } else {\n          return integerPart + 0.5;\n        }\n      }\n    },\n    formatReviewScore(number) {\n      if (Number.isInteger(number)) {\n        return number.toFixed(1); // 정수인 경우 소수점 자리를 1로 설정하여 변환\n      } else {\n        return number.toString(); // 소수인 경우 그대로 문자열로 변환\n      }\n    },\n\n    formatNumber(number) {\n      // 숫자를 천 단위마다 쉼표가 있는 형식으로 변환\n      return new Intl.NumberFormat().format(number);\n    },\n    //장바구니에 추가\n    async addToCart(bookId) {\n      this.bookId = bookId;\n      await axios({\n        url: \"http://localhost:3000/detail/gotoCart\",\n        method: \"POST\",\n        data: {\n          email: this.email,\n          bookId: this.bookId\n        }\n      }).then(res => {\n        alert(\"장바구니에 추가되었습니다.\");\n        this.$refs.childComponent.getCartNum();\n      });\n    },\n    //좋아요 기능\n    async likeToggle(bookId, isLiked) {\n      this.bookId = bookId;\n      await axios({\n        url: \"http://localhost:3000/detail/likeOrDislike\",\n        method: \"POST\",\n        data: {\n          email: this.email,\n          bookId: this.bookId\n        }\n      }).then(res => {\n        if (res.data == \"추가완료\") {\n          isLiked = true;\n        } else {\n          isLiked = false;\n        }\n      });\n      console.log(this.bestListData), \"라이크\";\n    }\n  }\n};","map":{"version":3,"names":["GnbBar","Floating","StarIcon","axios","defaults","baseURL","headers","post","name","components","data","bestListData","reviewScore","email","bookId","isLiked","setup","created","localStorage","getItem","getBestList","mounted","unmounted","methods","url","method","then","res","map","book","console","log","i","push","reviewpoint","catch","err","alert","convertRatingToHalfStars","number","Number","isInteger","integerPart","Math","floor","decimalPart","formatReviewScore","toFixed","toString","formatNumber","Intl","NumberFormat","format","addToCart","$refs","childComponent","getCartNum","likeToggle"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\bestList.vue"],"sourcesContent":["<style src=\"../assets/css/bestList.css\"></style>\r\n\r\n<template>\r\n  <GnbBar ref=\"childComponent\" />\r\n  <div class=\"best\">\r\n    <div class=\"best_header\">\r\n      <h2>BEST</h2>\r\n    </div>\r\n    <div class=\"best_items\">\r\n      <div v-for=\"(item, i) in bestListData\" :key=\"i\" class=\"best_item\">\r\n        <div class=\"best_item_img\">\r\n          <a href=\"\"><img :src=\"item.BOOK_COVER\" alt=\"\" /></a>\r\n        </div>\r\n        <div class=\"best_item_info\">\r\n          <h2 class=\"best_item_info_title\"><a href=\"\">{{ item.BOOK_TITLE }}</a></h2>\r\n          <span class=\"best_item_info_author\">{{ item.BOOK_AUTHOR }} | {{ item.BOOK_PUBDATE }}</span>\r\n          <div class=\"best_item_info_price\">\r\n            <span>{{ formatNumber(item.BOOK_PRICE) }}</span>\r\n            <span>원</span>\r\n          </div>\r\n          <p class=\"best_item_info_summary\">\r\n            {{ item.BOOK_DESCRIPTION }}\r\n          </p>\r\n          <div class=\"best_item_info_star\">\r\n            <span v-if=\"item.reviewpoint == 0\" class=\"best_item_info_star_num\">0.0</span>\r\n            <span v-else class=\"best_item_info_star_num\">{{ formatReviewScore(item.reviewpoint) }}</span>\r\n            <StarIcon :rating=\"convertRatingToHalfStars(reviewScore[i])\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"best_item_order\">\r\n          <a href=\"\">결제하러 가기</a>\r\n          <p><span>내일(7/28)</span> 도착예정</p>\r\n        </div>\r\n        <div class=\"best_item_btn\">\r\n          <img v-if=\"item.isLiked == false\" @click=\"likeToggle(item.BOOK_ID)\" src=\"../assets/img/heart.png\" alt=\"\" />\r\n          <img v-else-if=\"item.isLiked == true\" @click=\"likeToggle(item.BOOK_ID, item.isLiked)\" src=\"../assets/img/heartFill.png\" alt=\"\" />\r\n          <img @click=\"addToCart(item.BOOK_ID)\" src=\"../assets/img/cart2.png\" alt=\"\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- 플로팅-->\r\n    <Floating />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport GnbBar from \"../components/gnbBar.vue\";\r\nimport Floating from \"../components/floating.vue\"\r\nimport StarIcon from \"../components/star.vue\"; // 별점 아이콘 컴포넌트의 경로를 수정해주세요.\r\n\r\nimport axios from \"axios\";\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\naxios.defaults.headers.post[\"Contents-Type\"] = \"application/json;charset=utf-8\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nexport default {\r\n\r\n  name: \"\",\r\n  components: { GnbBar, StarIcon, Floating },\r\n  data() {\r\n    return {\r\n      bestListData: [],\r\n      reviewScore: [], // 리뷰 점수를 얻어온다고 가정\r\n      email: \"\",\r\n      bookId: \"\",\r\n\r\n      //좋아요 여부\r\n      isLiked: false,\r\n    };\r\n  },\r\n\r\n  setup() { },\r\n  created() {\r\n    (this.email = localStorage.getItem(\"userID\"));\r\n    this.getBestList();\r\n  },\r\n  mounted() { },\r\n  unmounted() { },\r\n\r\n  methods: {\r\n    async getBestList() {\r\n      await axios({\r\n        url: \"http://localhost:3000/booklist/getBest\",\r\n        method: \"POST\",\r\n        data: {\r\n        }\r\n      })\r\n        .then((res) => {\r\n          this.bestListData = res.data.map(book => {\r\n            return {\r\n              ...book,\r\n              isLiked: false // 처음에 모든 책은 좋아요가 되지 않은 상태로 초기화\r\n            };\r\n          });\r\n          console.log(this.bestListData)\r\n          for (var i in res.data) {\r\n            // this.bestListData.push(res.data[i]);\r\n            //별이 5개이므로 총점10점을 2로 나눔\r\n            this.reviewScore.push((res.data[i].reviewpoint) / 2)\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          alert(err);\r\n        });\r\n    },\r\n    //입력된 숫자를 주어진 범위에 따라 적절한 별점으로 변환\r\n    convertRatingToHalfStars(number) {\r\n      if (Number.isInteger(number)) {\r\n        if (number >= 1 && number <= 5) {\r\n          return number;\r\n        } else {\r\n          return 0; // 범위를 벗어나는 경우\r\n        }\r\n      } else {\r\n        const integerPart = Math.floor(number);\r\n        const decimalPart = number - integerPart;\r\n\r\n        if (decimalPart < 0.5) {\r\n          return integerPart;\r\n        } else {\r\n          return integerPart + 0.5;\r\n        }\r\n      }\r\n    },\r\n    formatReviewScore(number) {\r\n      if (Number.isInteger(number)) {\r\n        return number.toFixed(1); // 정수인 경우 소수점 자리를 1로 설정하여 변환\r\n      } else {\r\n        return number.toString(); // 소수인 경우 그대로 문자열로 변환\r\n      }\r\n    },\r\n    formatNumber(number) {\r\n      // 숫자를 천 단위마다 쉼표가 있는 형식으로 변환\r\n      return new Intl.NumberFormat().format(number);\r\n    },\r\n    //장바구니에 추가\r\n    async addToCart(bookId) {\r\n      this.bookId = bookId;\r\n      await axios({\r\n        url: \"http://localhost:3000/detail/gotoCart\",\r\n        method: \"POST\",\r\n        data: {\r\n          email: this.email,\r\n          bookId: this.bookId\r\n        }\r\n      })\r\n        .then((res) => {\r\n          alert(\"장바구니에 추가되었습니다.\");\r\n          this.$refs.childComponent.getCartNum();\r\n        })\r\n    },\r\n    //좋아요 기능\r\n    async likeToggle(bookId, isLiked) {\r\n      this.bookId = bookId;\r\n      await axios({\r\n        url: \"http://localhost:3000/detail/likeOrDislike\",\r\n        method: \"POST\",\r\n        data: {\r\n          email: this.email,\r\n          bookId: this.bookId\r\n        }\r\n      })\r\n        .then((res) => {\r\n          if (res.data == \"추가완료\") {\r\n            isLiked = true;\r\n          } else {\r\n            isLiked = false;\r\n          }\r\n        })\r\n        console.log(this.bestListData), \"라이크\";\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}