{"ast":null,"code":"// import Footer from '../components/footer.vue'\n\nimport axios from \"axios\";\nexport default {\n  // components: { gnbBar, Footer },\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      nickname: \"\",\n      phone_num: \"\",\n      sex: \"\",\n      agegroup: \"\",\n      email_check: false,\n      password_check: false,\n      password_check2: false,\n      nickname_check: false,\n      sex_check: false,\n      age_range_check: false,\n      phone_check: false,\n      error_border_check: false,\n      //이메일 인증하기\n      clickSendEmail: false,\n      countdown: 180,\n      interval: null,\n      //주소 데이터\n      epostNum: \"\",\n      epostAdress: \"\",\n      epostDetailAdress: \"\",\n      epostreference: \"\",\n      allcheck: true,\n      allcheck1: true,\n      allcheck2: true,\n      allcheck3: true,\n      allcheck4: true,\n      allcheck5: true,\n      allcheck6: true,\n      allcheck7: true,\n      emailcheck: 3,\n      nicknamecheck: 3\n    };\n  },\n  watch: {\n    email: function () {\n      this.checkEmail();\n      this.funcWatch();\n    },\n    password: function () {\n      this.checkPassword();\n      this.funcWatch();\n    },\n    password2: function () {\n      this.checkPassword2();\n      this.funcWatch();\n    },\n    nickname: function () {\n      this.checknickname();\n      this.funcWatch();\n    },\n    sex: function () {\n      this.checksex();\n      this.funcWatch();\n    },\n    agegroup: function () {\n      this.checkage_range();\n      this.funcWatch();\n    },\n    phone_num: function () {\n      this.checkphone();\n      this.funcWatch();\n    }\n  },\n  computed: {\n    formattedTime() {\n      const minutes = Math.floor(this.countdown / 60);\n      const seconds = this.countdown % 60;\n      return `${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\n    }\n  },\n  methods: {\n    funcWatch() {\n      this.emailCheckForm();\n      this.inputAllCheck();\n      this.nicknameCheckForm();\n    },\n    movetomain() {\n      window.location.href = \"/\";\n    },\n    checkEmail() {\n      // 이메일 형식 검사\n      const validateEmail = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\n      if (this.email === \"\" || !validateEmail.test(this.email) || !this.email) {\n        this.email_check = true;\n        this.error_border_check = true;\n        this.allcheck1 = true; //입력조건 안맞을시 true\n      } else {\n        this.email_check = false;\n        this.error_border_check = false;\n        this.allcheck1 = false;\n      }\n    },\n    checkPassword() {\n      // 최소 8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상\n      const validatePassword = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$/;\n      if (this.password === \"\" || !validatePassword.test(this.password) || !this.password) {\n        this.password_check = true;\n        this.error_border_check = true;\n        this.allcheck2 = true;\n      } else {\n        this.password_check = false;\n        this.error_border_check = false;\n        this.allcheck2 = false;\n      }\n    },\n    checkPassword2() {\n      if (this.password === this.password2) {\n        this.password_check2 = false;\n        this.error_border_check = false;\n        this.allcheck3 = false;\n      } else {\n        this.password_check2 = true;\n        this.error_border_check = true;\n        this.allcheck3 = true;\n      }\n    },\n    checknickname() {\n      const validateNickname = /^.{1,10}$/;\n      if (!this.nickname || !validateNickname.test(this.nickname)) {\n        this.nickname_check2 = true;\n        this.error_border_check = true;\n        this.allcheck4 = true;\n      } else {\n        this.nickname_check2 = false;\n        this.error_border_check = false;\n        this.allcheck4 = false;\n      }\n    },\n    checksex() {\n      if (this.sex == null) {\n        //선택했으면\n        this.allcheck5 = true;\n      } else {\n        this.allcheck5 = false;\n      }\n    },\n    checkage_range() {\n      if (this.agegroup == null) {\n        this.allcheck6 = true;\n      } else {\n        this.allcheck6 = false;\n      }\n    },\n    checkphone() {\n      const validatephone = /^01([0|1|6|7|8|9])-?([0-9]{3,4})-?([0-9]{4})$/;\n      if (this.phone_num === \"\" || !validatephone.test(this.phone_num) || !this.phone_num) {\n        this.phone_check = true;\n        this.error_border_check = true;\n        this.allcheck7 = true;\n      } else {\n        this.phone_check = false;\n        this.error_border_check = false;\n        this.allcheck7 = false;\n      }\n    },\n    formatPhoneNumber() {\n      // 숫자 이외의 문자 제거\n      this.phone_num = this.phone_num.replace(/[^\\d-]/g, \"\");\n      // 하이픈(-) 삽입\n      if (this.phone_num.length > 2) {\n        this.phone_num = this.phone_num.replace(/^01([0|1|6|7|8|9])-?(\\d{4})-?(\\d{4})$/, \"01$1-$2-$3\");\n      }\n    },\n    inputAllCheck() {\n      if (this.allcheck1 || this.allcheck2 || this.allcheck3 || this.allcheck4 || this.allcheck5 || this.allcheck6 || this.allcheck7 || this.email_check) {\n        //하나라도 입력조건이 안맞을시\n        this.allcheck = true; //버튼 비활성\n      } else {\n        this.allcheck = false;\n      }\n    },\n    sendEmail() {\n      this.clickSendEmail = true;\n    },\n    startCountdown() {\n      this.interval = setInterval(() => {\n        if (this.countdown > 0) {\n          this.countdown--;\n        } else {\n          clearInterval(this.interval); // 컴포넌트가 제거되기 전에 interval을 정리해야합니다.\n          alert(\"인증에 실패하였습니다.\");\n          this.clickSendEmail = false;\n          this.countdown = 180;\n        }\n      }, 1000);\n    },\n    completeAuthEmail() {\n      if (인증번호일치할시) {\n        alert(\"인증이 완료되었습니다.\");\n      } else {\n        alert(\"인증번호가 일치하지 않습니다.\");\n      }\n    },\n    emailCheckForm() {\n      axios({\n        url: \"http://localhost:3000/auth/checkemail\",\n        method: \"POST\",\n        data: {\n          email: this.email\n        }\n      }).then(async res => {\n        const validateEmail = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\n        if (res.data.message == \"사용가능한 이메일입니다.\" && validateEmail.test(this.email)) {\n          this.emailcheck = 2;\n        } else if (res.data.message == \"존재하는 이메일입니다.\") {\n          this.emailcheck = 1;\n          this.allcheck = true;\n        } else if (!this.email) {\n          this.emailcheck = 3;\n        }\n      }).catch(error => {\n        alert(error);\n      });\n    },\n    nicknameCheckForm() {\n      axios({\n        url: \"http://localhost:3000/auth/checknick\",\n        method: \"POST\",\n        data: {\n          nickname: this.nickname\n        }\n      }).then(async res => {\n        if (res.data.message == \"사용가능한 닉네임입니다.\" && this.nickname) {\n          this.nicknamecheck = 2;\n        } else if (res.data.message == \"존재하는 닉네임입니다.\") {\n          this.nicknamecheck = 1;\n          this.allcheck = true;\n        } else if (!this.nickname) {\n          this.nicknamecheck = 3;\n        }\n      }).catch(error => {\n        alert(error);\n      });\n    },\n    sample6_execDaumPostcode() {\n      // 다음 지도API\n      new daum.Postcode({\n        oncomplete: function (data) {\n          // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\n\n          // 각 주소의 노출 규칙에 따라 주소를 조합한다.\n          // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\n          var addr = \"\"; // 주소 변수\n          var extraAddr = \"\"; // 참고항목 변수\n\n          //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\n          if (data.userSelectedType === \"R\") {\n            // 사용자가 도로명 주소를 선택했을 경우\n            addr = data.roadAddress;\n          } else {\n            // 사용자가 지번 주소를 선택했을 경우(J)\n            addr = data.jibunAddress;\n          }\n\n          // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.\n          if (data.userSelectedType === \"R\") {\n            // 법정동명이 있을 경우 추가한다. (법정리는 제외)\n            // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\n            if (data.bname !== \"\" && /[동|로|가]$/g.test(data.bname)) {\n              extraAddr += data.bname;\n            }\n            // 건물명이 있고, 공동주택일 경우 추가한다.\n            if (data.buildingName !== \"\" && data.apartment === \"Y\") {\n              extraAddr += extraAddr !== \"\" ? \", \" + data.buildingName : data.buildingName;\n            }\n            // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\n            if (extraAddr !== \"\") {\n              extraAddr = \" (\" + extraAddr + \")\";\n            }\n          }\n\n          // 우편번호와 주소 정보를 해당 필드에 넣는다.\n          document.getElementById(\"epostNum\").value = data.zonecode;\n          document.getElementById(\"epostAdress\").value = addr;\n          // 커서를 상세주소 필드로 이동한다.\n          document.getElementById(\"epostDetailAdress\").focus();\n        }\n      }).open();\n    },\n    joinForm() {\n      //백엔드로 회원가입 정보 전달\n      axios({\n        url: \"http://localhost:3000/auth/join\",\n        method: \"POST\",\n        data: {\n          email: this.email,\n          password: this.password,\n          nickname: this.nickname,\n          sex: this.sex,\n          agegroup: this.agegroup,\n          phone_num: this.phone_num\n        }\n      }).then(async res => {\n        alert(res.data.message);\n      }).catch(error => {\n        alert(error);\n      });\n    },\n    async autoLogin() {\n      await axios({\n        url: \"http://localhost:3000/auth/login\",\n        method: \"POST\",\n        data: {\n          email: this.email,\n          password: this.password\n        }\n      }).then(async res => {\n        if (res.data.code == 200) {\n          localStorage.setItem(\"userID\", res.data.email);\n          localStorage.setItem(\"userNick\", res.data.nick);\n          localStorage.setItem(\"userProvider\", res.data.provider);\n          window.location.href = \"/\";\n        }\n      }).catch(error => {\n        alert(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","email","password","password2","nickname","phone_num","sex","agegroup","email_check","password_check","password_check2","nickname_check","sex_check","age_range_check","phone_check","error_border_check","clickSendEmail","countdown","interval","epostNum","epostAdress","epostDetailAdress","epostreference","allcheck","allcheck1","allcheck2","allcheck3","allcheck4","allcheck5","allcheck6","allcheck7","emailcheck","nicknamecheck","watch","checkEmail","funcWatch","checkPassword","checkPassword2","checknickname","checksex","checkage_range","checkphone","computed","formattedTime","minutes","Math","floor","seconds","methods","emailCheckForm","inputAllCheck","nicknameCheckForm","movetomain","window","location","href","validateEmail","test","validatePassword","validateNickname","nickname_check2","validatephone","formatPhoneNumber","replace","length","sendEmail","startCountdown","setInterval","clearInterval","alert","completeAuthEmail","인증번호일치할시","url","method","then","res","message","catch","error","sample6_execDaumPostcode","daum","Postcode","oncomplete","addr","extraAddr","userSelectedType","roadAddress","jibunAddress","bname","buildingName","apartment","document","getElementById","value","zonecode","focus","open","joinForm","autoLogin","code","localStorage","setItem","nick","provider"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\Join.vue"],"sourcesContent":["<template>\r\n  <div class=\"join\">\r\n    <div class=\"title-bar\">\r\n      <h5>회원가입</h5>\r\n    </div>\r\n\r\n    <!-- 소셜로그인 -->\r\n    <div class=\"wrap2\">\r\n      <form method=\"post\">\r\n        <div class=\"user_social_btns\">\r\n          <div class=\"user_social_btns_p\">\r\n            <p>소셜로 간편하게 로그인하세요</p>\r\n          </div>\r\n          <a class=\"social_btn\" href=\"/naverlogin\"\r\n            ><img class=\"social_btn_naver\" src=\"../assets/img/naver.png\" alt=\"\"\r\n          /></a>\r\n          <a class=\"social_btn\" @click=\"kakaoLogin\"\r\n            ><img class=\"social_btn_kakao\" src=\"../assets/img/kakao.png\" alt=\"\"\r\n          /></a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- 로컬회원가입 -->\r\n    <div class=\"wrap\">\r\n      <form @submit.prevent=\"joinForm\">\r\n        <label for=\"name\">이름</label>\r\n        <input\r\n          v-model=\"name\"\r\n          type=\"text\"\r\n          id=\"name\"\r\n          placeholder=\"이름 입력\"\r\n          :class=\"{ error_border: email_check || emailcheck != 2 }\"\r\n          maxlength=\"25\"\r\n        />\r\n        <label for=\"email\">아이디</label>\r\n        <input\r\n          v-model=\"email\"\r\n          type=\"text\"\r\n          id=\"email\"\r\n          placeholder=\"이메일 입력\"\r\n          :class=\"{ error_border: email_check || emailcheck != 2 }\"\r\n          maxlength=\"25\"\r\n        />\r\n        <select class=\"email_list\" name=\"emailList\" id=\"emailList\">\r\n          <option value=\"\">@naver.com</option>\r\n          <option value=\"\">@hanmail.net</option>\r\n          <option value=\"\">@gmail.com</option>\r\n          <option value=\"\">@nate.com</option>\r\n          <option value=\"\">@hotmail.com</option>\r\n        </select>\r\n        <button @click=\"sendEmail(), startCountdown()\" class=\"email_auth\">\r\n          인증메일 전송\r\n        </button>\r\n        <div v-if=\"clickSendEmail\" class=\"email_auth_complete\">\r\n          <input type=\"text\" maxlength=\"6\" />\r\n          <span>{{ formattedTime }}</span>\r\n          <button @click=\"completeAuthEmail\">인증완료</button>\r\n        </div>\r\n        <form @submit.prevent=\"emailCheckForm\">\r\n          <a href=\"/auth/checkemail\"\r\n            ><button type=\"submit\" id=\"email_check\" class=\"username_submit\">\r\n              중복확인\r\n            </button></a\r\n          >\r\n        </form>\r\n        <p id=\"error\" v-if=\"email_check\">\r\n          이메일주소를 정확히 입력해주세요. 예)abcd@naver.com\r\n        </p>\r\n        <p id=\"error\" v-show=\"emailcheck == 1\">존재하는 이메일입니다.</p>\r\n        <p id=\"complete\" v-show=\"emailcheck == 2 && !email_check\">\r\n          사용가능한 이메일입니다.\r\n        </p>\r\n        <label for=\"password\">비밀번호</label>\r\n        <input\r\n          v-model=\"password\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          :class=\"{ error_border: password_check }\"\r\n          placeholder=\"비밀번호 입력\"\r\n          maxlength=\"15\"\r\n        /><br />\r\n        <p id=\"error\" v-if=\"password_check\">\r\n          비밀번호를 정확히 입력해주세요.<br />\r\n          *8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상\r\n        </p>\r\n        <label for=\"password_check2\">비밀번호 확인</label>\r\n        <input\r\n          v-model=\"password2\"\r\n          type=\"password\"\r\n          id=\"password_check\"\r\n          :class=\"{ error_border: password_check2 }\"\r\n          placeholder=\"비밀번호 확인 입력\"\r\n        /><br />\r\n        <p id=\"error\" v-if=\"password_check2\">비밀번호가 일치하지 않습니다.</p>\r\n        <form @submit.prevent=\"nicknameCheckForm\">\r\n          <a href=\"/auth/checknick\"\r\n            ><button type=\"submit\" id=\"nickname_check\" class=\"username_submit\">\r\n              중복확인\r\n            </button></a\r\n          >\r\n        </form>\r\n        <p id=\"error\" v-show=\"nicknamecheck == 1\">존재하는 닉네임입니다.</p>\r\n        <p id=\"complete\" v-show=\"nicknamecheck == 2\">\r\n          사용가능한 닉네임입니다.\r\n        </p>\r\n        <p id=\"error\" v-if=\"nickname_check2\">닉네임을 입력해주세요.</p>\r\n        <div class=\"gender\">\r\n          <label for=\"sex\">성별</label>\r\n          <input\r\n            v-model=\"sex\"\r\n            type=\"radio\"\r\n            name=\"gender\"\r\n            value=\"m\"\r\n            class=\"input_sex\"\r\n          />남자\r\n          <input\r\n            v-model=\"sex\"\r\n            type=\"radio\"\r\n            name=\"gender\"\r\n            value=\"f\"\r\n            class=\"input_sex\"\r\n          />여자\r\n        </div>\r\n        <p id=\"error\" v-if=\"sex_check\">성별을 선택하세요.</p>\r\n        <div class=\"age_range\">\r\n          <label for=\"age_range\">나이대</label>\r\n          <input\r\n            v-model=\"agegroup\"\r\n            type=\"radio\"\r\n            name=\"agegroup\"\r\n            value=\"10\"\r\n            class=\"input_sex\"\r\n          />10대\r\n          <input\r\n            v-model=\"agegroup\"\r\n            type=\"radio\"\r\n            name=\"agegroup\"\r\n            value=\"20\"\r\n            class=\"input_sex\"\r\n          />20대\r\n          <input\r\n            v-model=\"agegroup\"\r\n            type=\"radio\"\r\n            name=\"agegroup\"\r\n            value=\"30\"\r\n            class=\"input_sex\"\r\n          />30대\r\n          <input\r\n            v-model=\"agegroup\"\r\n            type=\"radio\"\r\n            name=\"agegroup\"\r\n            value=\"40\"\r\n            class=\"input_sex\"\r\n          />40대\r\n          <input\r\n            v-model=\"agegroup\"\r\n            type=\"radio\"\r\n            name=\"agegroup\"\r\n            value=\"50\"\r\n            class=\"input_sex\"\r\n          />50대\r\n          <input\r\n            v-model=\"agegroup\"\r\n            type=\"radio\"\r\n            name=\"agegroup\"\r\n            value=\"60\"\r\n            class=\"input_sex\"\r\n          />60세 이상\r\n        </div>\r\n        <p id=\"error\" v-if=\"age_range_check\">나이대를 선택하세요.</p>\r\n        <label for=\"phone_num\">전화번호</label>\r\n        <input\r\n          v-model=\"phone_num\"\r\n          @input=\"formatPhoneNumber\"\r\n          type=\"text\"\r\n          id=\"phone_num\"\r\n          placeholder=\"전화번호 입력\"\r\n          :class=\"{ error_border: phone_check }\"\r\n          maxlength=\"13\"\r\n        /><br />\r\n        <p id=\"error\" v-if=\"phone_check\">전화번호를 정확히 입력해주세요.</p>\r\n        <label for=\"epostNum\">우편번호</label>\r\n        <input\r\n          ref=\"epostNum\"\r\n          type=\"text\"\r\n          id=\"epostNum\"\r\n          placeholder=\"우편번호 입력\"\r\n        />\r\n        <input\r\n          @click=\"sample6_execDaumPostcode\"\r\n          class=\"epostNumBtn\"\r\n          type=\"button\"\r\n          value=\"우편번호 검색\"\r\n        /><br />\r\n        <label for=\"epostAdress\">주소</label>\r\n        <input\r\n          ref=\"epostAdress\"\r\n          type=\"text\"\r\n          id=\"epostAdress\"\r\n          placeholder=\"주소 입력\"\r\n        /><br />\r\n        <label for=\"epostDetailAdress\">상세주소</label>\r\n        <input\r\n          ref=\"epostDetailAdress\"\r\n          type=\"text\"\r\n          id=\"epostDetailAdress\"\r\n          placeholder=\"상세주소 입력\"\r\n        /><br />\r\n        <!-- 가입하기버튼 -->\r\n        <a href=\"/auth/join\"\r\n          ><input\r\n            type=\"submit\"\r\n            :class=\"{ error_submit: allcheck, submit: !allcheck }\"\r\n            :disabled=\"allcheck\"\r\n            id=\"login\"\r\n            value=\"가입하기\"\r\n        /></a>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <!-- <Footer /> -->\r\n</template>\r\n\r\n<script>\r\n// import Footer from '../components/footer.vue'\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  // components: { gnbBar, Footer },\r\n  data() {\r\n    return {\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      nickname: \"\",\r\n      phone_num: \"\",\r\n      sex: \"\",\r\n      agegroup: \"\",\r\n\r\n      email_check: false,\r\n      password_check: false,\r\n      password_check2: false,\r\n      nickname_check: false,\r\n      sex_check: false,\r\n      age_range_check: false,\r\n      phone_check: false,\r\n      error_border_check: false,\r\n\r\n      //이메일 인증하기\r\n      clickSendEmail: false,\r\n      countdown: 180,\r\n      interval: null,\r\n\r\n      //주소 데이터\r\n      epostNum: \"\",\r\n      epostAdress: \"\",\r\n      epostDetailAdress: \"\",\r\n      epostreference: \"\",\r\n\r\n      allcheck: true,\r\n      allcheck1: true,\r\n      allcheck2: true,\r\n      allcheck3: true,\r\n      allcheck4: true,\r\n      allcheck5: true,\r\n      allcheck6: true,\r\n      allcheck7: true,\r\n      emailcheck: 3,\r\n      nicknamecheck: 3,\r\n    };\r\n  },\r\n  watch: {\r\n    email: function () {\r\n      this.checkEmail();\r\n      this.funcWatch();\r\n    },\r\n    password: function () {\r\n      this.checkPassword();\r\n      this.funcWatch();\r\n    },\r\n    password2: function () {\r\n      this.checkPassword2();\r\n      this.funcWatch();\r\n    },\r\n    nickname: function () {\r\n      this.checknickname();\r\n      this.funcWatch();\r\n    },\r\n    sex: function () {\r\n      this.checksex();\r\n      this.funcWatch();\r\n    },\r\n    agegroup: function () {\r\n      this.checkage_range();\r\n      this.funcWatch();\r\n    },\r\n    phone_num: function () {\r\n      this.checkphone();\r\n      this.funcWatch();\r\n    },\r\n  },\r\n  computed: {\r\n    formattedTime() {\r\n      const minutes = Math.floor(this.countdown / 60);\r\n      const seconds = this.countdown % 60;\r\n      return `${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\r\n    },\r\n  },\r\n  methods: {\r\n    funcWatch() {\r\n      this.emailCheckForm();\r\n      this.inputAllCheck();\r\n      this.nicknameCheckForm();\r\n    },\r\n    movetomain() {\r\n      window.location.href = \"/\";\r\n    },\r\n    checkEmail() {\r\n      // 이메일 형식 검사\r\n      const validateEmail =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n\r\n      if (this.email === \"\" || !validateEmail.test(this.email) || !this.email) {\r\n        this.email_check = true;\r\n        this.error_border_check = true;\r\n        this.allcheck1 = true; //입력조건 안맞을시 true\r\n      } else {\r\n        this.email_check = false;\r\n        this.error_border_check = false;\r\n        this.allcheck1 = false;\r\n      }\r\n    },\r\n    checkPassword() {\r\n      // 최소 8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상\r\n      const validatePassword =\r\n        /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$/;\r\n\r\n      if (\r\n        this.password === \"\" ||\r\n        !validatePassword.test(this.password) ||\r\n        !this.password\r\n      ) {\r\n        this.password_check = true;\r\n        this.error_border_check = true;\r\n        this.allcheck2 = true;\r\n      } else {\r\n        this.password_check = false;\r\n        this.error_border_check = false;\r\n        this.allcheck2 = false;\r\n      }\r\n    },\r\n    checkPassword2() {\r\n      if (this.password === this.password2) {\r\n        this.password_check2 = false;\r\n        this.error_border_check = false;\r\n        this.allcheck3 = false;\r\n      } else {\r\n        this.password_check2 = true;\r\n        this.error_border_check = true;\r\n        this.allcheck3 = true;\r\n      }\r\n    },\r\n    checknickname() {\r\n      const validateNickname = /^.{1,10}$/;\r\n\r\n      if (!this.nickname || !validateNickname.test(this.nickname)) {\r\n        this.nickname_check2 = true;\r\n        this.error_border_check = true;\r\n        this.allcheck4 = true;\r\n      } else {\r\n        this.nickname_check2 = false;\r\n        this.error_border_check = false;\r\n        this.allcheck4 = false;\r\n      }\r\n    },\r\n    checksex() {\r\n      if (this.sex == null) {\r\n        //선택했으면\r\n        this.allcheck5 = true;\r\n      } else {\r\n        this.allcheck5 = false;\r\n      }\r\n    },\r\n    checkage_range() {\r\n      if (this.agegroup == null) {\r\n        this.allcheck6 = true;\r\n      } else {\r\n        this.allcheck6 = false;\r\n      }\r\n    },\r\n    checkphone() {\r\n      const validatephone = /^01([0|1|6|7|8|9])-?([0-9]{3,4})-?([0-9]{4})$/;\r\n\r\n      if (\r\n        this.phone_num === \"\" ||\r\n        !validatephone.test(this.phone_num) ||\r\n        !this.phone_num\r\n      ) {\r\n        this.phone_check = true;\r\n        this.error_border_check = true;\r\n        this.allcheck7 = true;\r\n      } else {\r\n        this.phone_check = false;\r\n        this.error_border_check = false;\r\n        this.allcheck7 = false;\r\n      }\r\n    },\r\n    formatPhoneNumber() {\r\n      // 숫자 이외의 문자 제거\r\n      this.phone_num = this.phone_num.replace(/[^\\d-]/g, \"\");\r\n      // 하이픈(-) 삽입\r\n      if (this.phone_num.length > 2) {\r\n        this.phone_num = this.phone_num.replace(\r\n          /^01([0|1|6|7|8|9])-?(\\d{4})-?(\\d{4})$/,\r\n          \"01$1-$2-$3\"\r\n        );\r\n      }\r\n    },\r\n    inputAllCheck() {\r\n      if (\r\n        this.allcheck1 ||\r\n        this.allcheck2 ||\r\n        this.allcheck3 ||\r\n        this.allcheck4 ||\r\n        this.allcheck5 ||\r\n        this.allcheck6 ||\r\n        this.allcheck7 ||\r\n        this.email_check\r\n      ) {\r\n        //하나라도 입력조건이 안맞을시\r\n        this.allcheck = true; //버튼 비활성\r\n      } else {\r\n        this.allcheck = false;\r\n      }\r\n    },\r\n    sendEmail() {\r\n      this.clickSendEmail = true;\r\n    },\r\n    startCountdown() {\r\n      this.interval = setInterval(() => {\r\n        if (this.countdown > 0) {\r\n          this.countdown--;\r\n        } else {\r\n          clearInterval(this.interval); // 컴포넌트가 제거되기 전에 interval을 정리해야합니다.\r\n          alert(\"인증에 실패하였습니다.\");\r\n          this.clickSendEmail = false;\r\n          this.countdown = 180;\r\n        }\r\n      }, 1000);\r\n    },\r\n    completeAuthEmail() {\r\n      if (인증번호일치할시) {\r\n        alert(\"인증이 완료되었습니다.\");\r\n      } else {\r\n        alert(\"인증번호가 일치하지 않습니다.\");\r\n      }\r\n    },\r\n    emailCheckForm() {\r\n      axios({\r\n        url: \"http://localhost:3000/auth/checkemail\",\r\n        method: \"POST\",\r\n        data: {\r\n          email: this.email,\r\n        },\r\n      })\r\n        .then(async (res) => {\r\n          const validateEmail =\r\n            /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n\r\n          if (\r\n            res.data.message == \"사용가능한 이메일입니다.\" &&\r\n            validateEmail.test(this.email)\r\n          ) {\r\n            this.emailcheck = 2;\r\n          } else if (res.data.message == \"존재하는 이메일입니다.\") {\r\n            this.emailcheck = 1;\r\n            this.allcheck = true;\r\n          } else if (!this.email) {\r\n            this.emailcheck = 3;\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    },\r\n    nicknameCheckForm() {\r\n      axios({\r\n        url: \"http://localhost:3000/auth/checknick\",\r\n        method: \"POST\",\r\n        data: {\r\n          nickname: this.nickname,\r\n        },\r\n      })\r\n        .then(async (res) => {\r\n          if (res.data.message == \"사용가능한 닉네임입니다.\" && this.nickname) {\r\n            this.nicknamecheck = 2;\r\n          } else if (res.data.message == \"존재하는 닉네임입니다.\") {\r\n            this.nicknamecheck = 1;\r\n            this.allcheck = true;\r\n          } else if (!this.nickname) {\r\n            this.nicknamecheck = 3;\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    },\r\n    sample6_execDaumPostcode() {\r\n      // 다음 지도API\r\n      new daum.Postcode({\r\n        oncomplete: function (data) {\r\n          // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n\r\n          // 각 주소의 노출 규칙에 따라 주소를 조합한다.\r\n          // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n          var addr = \"\"; // 주소 변수\r\n          var extraAddr = \"\"; // 참고항목 변수\r\n\r\n          //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\r\n          if (data.userSelectedType === \"R\") {\r\n            // 사용자가 도로명 주소를 선택했을 경우\r\n            addr = data.roadAddress;\r\n          } else {\r\n            // 사용자가 지번 주소를 선택했을 경우(J)\r\n            addr = data.jibunAddress;\r\n          }\r\n\r\n          // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.\r\n          if (data.userSelectedType === \"R\") {\r\n            // 법정동명이 있을 경우 추가한다. (법정리는 제외)\r\n            // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n            if (data.bname !== \"\" && /[동|로|가]$/g.test(data.bname)) {\r\n              extraAddr += data.bname;\r\n            }\r\n            // 건물명이 있고, 공동주택일 경우 추가한다.\r\n            if (data.buildingName !== \"\" && data.apartment === \"Y\") {\r\n              extraAddr +=\r\n                extraAddr !== \"\" ? \", \" + data.buildingName : data.buildingName;\r\n            }\r\n            // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n            if (extraAddr !== \"\") {\r\n              extraAddr = \" (\" + extraAddr + \")\";\r\n            }\r\n          }\r\n\r\n          // 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n          document.getElementById(\"epostNum\").value = data.zonecode;\r\n          document.getElementById(\"epostAdress\").value = addr;\r\n          // 커서를 상세주소 필드로 이동한다.\r\n          document.getElementById(\"epostDetailAdress\").focus();\r\n        },\r\n      }).open();\r\n    },\r\n    joinForm() {\r\n      //백엔드로 회원가입 정보 전달\r\n      axios({\r\n        url: \"http://localhost:3000/auth/join\",\r\n        method: \"POST\",\r\n        data: {\r\n          email: this.email,\r\n          password: this.password,\r\n          nickname: this.nickname,\r\n          sex: this.sex,\r\n          agegroup: this.agegroup,\r\n          phone_num: this.phone_num,\r\n        },\r\n      })\r\n        .then(async (res) => {\r\n          alert(res.data.message);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    },\r\n    async autoLogin() {\r\n      await axios({\r\n        url: \"http://localhost:3000/auth/login\",\r\n        method: \"POST\",\r\n        data: {\r\n          email: this.email,\r\n          password: this.password,\r\n        },\r\n      })\r\n        .then(async (res) => {\r\n          if (res.data.code == 200) {\r\n            localStorage.setItem(\"userID\", res.data.email);\r\n            localStorage.setItem(\"userNick\", res.data.nick);\r\n            localStorage.setItem(\"userProvider\", res.data.provider);\r\n\r\n            window.location.href = \"/\";\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 회원가입 */\r\n.join {\r\n  padding-top: 5%;\r\n  width: 100%;\r\n  height: 80vh;\r\n  margin: 0;\r\n  background-color: white;\r\n  font-family: arial;\r\n  font-size: 14px;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n.title-bar {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #333333;\r\n  font-size: 30px;\r\n  padding-bottom: 10px;\r\n  position: relative;\r\n}\r\n\r\n.title-bar h5 {\r\n  margin: 24px 0;\r\n  font-size: x-large;\r\n  font-weight: bold;\r\n}\r\n\r\n/* 소셜로그인 */\r\n.wrap2 {\r\n  background-color: #ffffff;\r\n  padding: 0 2%;\r\n  width: 35%;\r\n  min-width: 350px;\r\n  margin: 0 auto;\r\n  border-radius: 6px;\r\n}\r\n\r\n.user_social_btns {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  padding: 2%;\r\n  margin: 0 auto 2% auto;\r\n}\r\n\r\n.user_social_btns_p {\r\n  width: 80%;\r\n  font-size: large;\r\n  color: #333333;\r\n}\r\n\r\n.social_btn {\r\n  width: 15%;\r\n}\r\n\r\n/* 로컬회원가입 */\r\n.wrap {\r\n  background-color: #ffffff;\r\n  padding: 1%;\r\n  width: 35%;\r\n  min-width: 350px;\r\n  margin: 0 auto;\r\n  border-radius: 6px;\r\n  border: 1px solid #fff;\r\n}\r\n\r\n.email_auth {\r\n  width: 17%;\r\n  padding: 1% 2%;\r\n  border: 1px solid #4e4eff;\r\n  border-radius: 4px;\r\n  color: white;\r\n  background-color: #4e4eff;\r\n  margin-left: 2%;\r\n}\r\n\r\n.email_auth_complete {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  position: relative;\r\n}\r\n.email_auth_complete span {\r\n  position: absolute;\r\n  top: 18%;\r\n  right: 20%;\r\n  color: red;\r\n  padding: 1%;\r\n}\r\n.email_auth_complete input {\r\n  width: 20%;\r\n}\r\n\r\n.email_auth_complete button {\r\n  width: 17%;\r\n  padding: 1% 2%;\r\n  border: 1px solid #4e4eff;\r\n  border-radius: 4px;\r\n  color: white;\r\n  background-color: #4e4eff;\r\n  margin-left: 2%;\r\n  margin-right: 0.5%;\r\n}\r\n\r\n.email_list {\r\n  width: 29%;\r\n  padding: 1%;\r\n  border-radius: 6px;\r\n  border: 1px solid #efefef;\r\n  font-size: 15px;\r\n  margin-left: 1%;\r\n}\r\n\r\n#email {\r\n  width: 30%;\r\n}\r\n\r\nlabel {\r\n  margin-right: 3%;\r\n  display: inline-block;\r\n  width: 110px;\r\n  text-align: right;\r\n}\r\n\r\ninput {\r\n  width: 60%;\r\n  margin-bottom: 1%;\r\n  padding: 1%;\r\n  border-radius: 6px;\r\n  border: 1px solid #efefef;\r\n  font-size: 15px;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\n.username_submit {\r\n  font-size: 14px;\r\n  background-color: #4e4eff;\r\n  color: white;\r\n  width: 15%;\r\n  margin-left: 5%;\r\n  border-radius: 4px;\r\n  border: none;\r\n  display: none;\r\n}\r\n\r\ninput:focus {\r\n  outline: none;\r\n  border-color: #4e4eff;\r\n\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\ninput.submit {\r\n  width: 100%;\r\n  padding: 3%;\r\n  border-radius: 6px;\r\n  border: 1px solid #4e4eff;\r\n  font-size: 15px;\r\n  background-color: #4e4eff;\r\n  color: #fff;\r\n  margin-top: 25px;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\ninput.submit:hover {\r\n  width: 100%;\r\n  padding: 3%;\r\n  border-radius: 6px;\r\n  font-size: 15px;\r\n  color: #fff;\r\n  margin-top: 25px;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\n.gender,\r\n.age_range {\r\n  width: 100%;\r\n  display: block;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 1%;\r\n  margin-left: -1%;\r\n  font-size: 14px;\r\n}\r\n\r\n.input_sex {\r\n  width: 14px;\r\n  height: 14px;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\n.epostNumBtn {\r\n  width: 20%;\r\n  margin-left: 2%;\r\n  background-color: #4e4eff;\r\n  color: #fff;\r\n  cursor: pointer;\r\n}\r\n\r\n#epostNum {\r\n  width: 20%;\r\n}\r\n\r\n#error {\r\n  color: red;\r\n  margin-bottom: 2%;\r\n  margin-left: 24%;\r\n  font-size: 12px;\r\n}\r\n\r\n#complete {\r\n  color: #4e4eff;\r\n  margin-bottom: 2%;\r\n  margin-left: 24%;\r\n  font-size: 12px;\r\n}\r\n\r\n.error_border:focus {\r\n  border-color: red;\r\n  box-shadow: none;\r\n}\r\n\r\n.error_submit {\r\n  width: 60%;\r\n  padding: 3%;\r\n  border-radius: 6px;\r\n  border: 1px solid #4e4eff;\r\n  font-size: 15px;\r\n  background-color: #4e4eff;\r\n  color: white;\r\n  margin-left: 20%;\r\n  margin-top: 25px;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}