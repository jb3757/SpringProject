{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers, vShow as _vShow, createTextVNode as _createTextVNode, vModelRadio as _vModelRadio, createStaticVNode as _createStaticVNode, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../assets/img/naver.png';\nimport _imports_1 from '../assets/img/kakao.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-4bfaeb64\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"join\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"title-bar\"\n}, [/*#__PURE__*/_createElementVNode(\"h5\", null, \"회원가입\")], -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"wrap2\"\n};\nconst _hoisted_4 = {\n  method: \"post\"\n};\nconst _hoisted_5 = {\n  class: \"user_social_btns\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"user_social_btns_p\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", null, \"소셜로 간편하게 로그인하세요\")], -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"a\", {\n  class: \"social_btn\",\n  href: \"/naverlogin\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"social_btn_naver\",\n  src: _imports_0,\n  alt: \"\"\n})], -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"social_btn_kakao\",\n  src: _imports_1,\n  alt: \"\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_9 = [_hoisted_8];\nconst _hoisted_10 = {\n  class: \"wrap\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"name\"\n}, \"이름\", -1 /* HOISTED */));\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"아이디\", -1 /* HOISTED */));\nconst _hoisted_13 = /*#__PURE__*/_createStaticVNode(\"<select class=\\\"email_list\\\" name=\\\"emailList\\\" id=\\\"emailList\\\" data-v-4bfaeb64><option value=\\\"\\\" data-v-4bfaeb64>@naver.com</option><option value=\\\"\\\" data-v-4bfaeb64>@hanmail.net</option><option value=\\\"\\\" data-v-4bfaeb64>@gmail.com</option><option value=\\\"\\\" data-v-4bfaeb64>@nate.com</option><option value=\\\"\\\" data-v-4bfaeb64>@hotmail.com</option></select>\", 1);\nconst _hoisted_14 = {\n  key: 0,\n  class: \"email_auth_complete\"\n};\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"text\",\n  maxlength: \"6\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"/auth/checkemail\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  id: \"email_check\",\n  class: \"username_submit\"\n}, \" 중복확인 \")], -1 /* HOISTED */));\nconst _hoisted_17 = [_hoisted_16];\nconst _hoisted_18 = {\n  key: 1,\n  id: \"error\"\n};\nconst _hoisted_19 = {\n  id: \"error\"\n};\nconst _hoisted_20 = {\n  id: \"complete\"\n};\nconst _hoisted_21 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"비밀번호\", -1 /* HOISTED */));\nconst _hoisted_22 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_23 = {\n  key: 2,\n  id: \"error\"\n};\nconst _hoisted_24 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_25 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password_check2\"\n}, \"비밀번호 확인\", -1 /* HOISTED */));\nconst _hoisted_26 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_27 = {\n  key: 3,\n  id: \"error\"\n};\nconst _hoisted_28 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"/auth/checknick\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  id: \"nickname_check\",\n  class: \"username_submit\"\n}, \" 중복확인 \")], -1 /* HOISTED */));\nconst _hoisted_29 = [_hoisted_28];\nconst _hoisted_30 = {\n  id: \"error\"\n};\nconst _hoisted_31 = {\n  id: \"complete\"\n};\nconst _hoisted_32 = {\n  key: 4,\n  id: \"error\"\n};\nconst _hoisted_33 = {\n  class: \"gender\"\n};\nconst _hoisted_34 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"sex\"\n}, \"성별\", -1 /* HOISTED */));\nconst _hoisted_35 = {\n  key: 5,\n  id: \"error\"\n};\nconst _hoisted_36 = {\n  class: \"age_range\"\n};\nconst _hoisted_37 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"age_range\"\n}, \"나이대\", -1 /* HOISTED */));\nconst _hoisted_38 = {\n  key: 6,\n  id: \"error\"\n};\nconst _hoisted_39 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"phone_num\"\n}, \"전화번호\", -1 /* HOISTED */));\nconst _hoisted_40 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_41 = {\n  key: 7,\n  id: \"error\"\n};\nconst _hoisted_42 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"epostNum\"\n}, \"우편번호\", -1 /* HOISTED */));\nconst _hoisted_43 = {\n  ref: \"epostNum\",\n  type: \"text\",\n  id: \"epostNum\",\n  placeholder: \"우편번호 입력\"\n};\nconst _hoisted_44 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_45 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"epostAdress\"\n}, \"주소\", -1 /* HOISTED */));\nconst _hoisted_46 = {\n  ref: \"epostAdress\",\n  type: \"text\",\n  id: \"epostAdress\",\n  placeholder: \"주소 입력\"\n};\nconst _hoisted_47 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_48 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"epostDetailAdress\"\n}, \"상세주소\", -1 /* HOISTED */));\nconst _hoisted_49 = {\n  ref: \"epostDetailAdress\",\n  type: \"text\",\n  id: \"epostDetailAdress\",\n  placeholder: \"상세주소 입력\"\n};\nconst _hoisted_50 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_51 = {\n  href: \"/auth/join\"\n};\nconst _hoisted_52 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createCommentVNode(\" 소셜로그인 \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"form\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _hoisted_7, _createElementVNode(\"a\", {\n    class: \"social_btn\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.kakaoLogin && _ctx.kakaoLogin(...args))\n  }, _hoisted_9)])])]), _createCommentVNode(\" 로컬회원가입 \"), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"form\", {\n    onSubmit: _cache[20] || (_cache[20] = _withModifiers((...args) => $options.joinForm && $options.joinForm(...args), [\"prevent\"]))\n  }, [_hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.name = $event),\n    type: \"text\",\n    id: \"name\",\n    placeholder: \"이름 입력\",\n    class: _normalizeClass({\n      error_border: $data.email_check || $data.emailcheck != 2\n    }),\n    maxlength: \"25\"\n  }, null, 2 /* CLASS */), [[_vModelText, _ctx.name]]), _hoisted_12, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.email = $event),\n    type: \"text\",\n    id: \"email\",\n    placeholder: \"이메일 입력\",\n    class: _normalizeClass({\n      error_border: $data.email_check || $data.emailcheck != 2\n    }),\n    maxlength: \"25\"\n  }, null, 2 /* CLASS */), [[_vModelText, $data.email]]), _hoisted_13, _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => ($options.sendEmail(), $options.startCountdown())),\n    class: \"email_auth\"\n  }, \" 인증메일 전송 \"), $data.clickSendEmail ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [_hoisted_15, _createElementVNode(\"span\", null, _toDisplayString($options.formattedTime), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.completeAuthEmail && $options.completeAuthEmail(...args))\n  }, \"인증완료\")])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.emailCheckForm && $options.emailCheckForm(...args), [\"prevent\"]))\n  }, _hoisted_17, 32 /* HYDRATE_EVENTS */), $data.email_check ? (_openBlock(), _createElementBlock(\"p\", _hoisted_18, \" 이메일주소를 정확히 입력해주세요. 예)abcd@naver.com \")) : _createCommentVNode(\"v-if\", true), _withDirectives(_createElementVNode(\"p\", _hoisted_19, \"존재하는 이메일입니다.\", 512 /* NEED_PATCH */), [[_vShow, $data.emailcheck == 1]]), _withDirectives(_createElementVNode(\"p\", _hoisted_20, \" 사용가능한 이메일입니다. \", 512 /* NEED_PATCH */), [[_vShow, $data.emailcheck == 2 && !$data.email_check]]), _hoisted_21, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.password = $event),\n    type: \"password\",\n    id: \"password\",\n    class: _normalizeClass({\n      error_border: $data.password_check\n    }),\n    placeholder: \"비밀번호 입력\",\n    maxlength: \"15\"\n  }, null, 2 /* CLASS */), [[_vModelText, $data.password]]), _hoisted_22, $data.password_check ? (_openBlock(), _createElementBlock(\"p\", _hoisted_23, [_createTextVNode(\" 비밀번호를 정확히 입력해주세요.\"), _hoisted_24, _createTextVNode(\" *8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상 \")])) : _createCommentVNode(\"v-if\", true), _hoisted_25, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.password2 = $event),\n    type: \"password\",\n    id: \"password_check\",\n    class: _normalizeClass({\n      error_border: $data.password_check2\n    }),\n    placeholder: \"비밀번호 확인 입력\"\n  }, null, 2 /* CLASS */), [[_vModelText, $data.password2]]), _hoisted_26, $data.password_check2 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_27, \"비밀번호가 일치하지 않습니다.\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"form\", {\n    onSubmit: _cache[8] || (_cache[8] = _withModifiers((...args) => $options.nicknameCheckForm && $options.nicknameCheckForm(...args), [\"prevent\"]))\n  }, _hoisted_29, 32 /* HYDRATE_EVENTS */), _withDirectives(_createElementVNode(\"p\", _hoisted_30, \"존재하는 닉네임입니다.\", 512 /* NEED_PATCH */), [[_vShow, $data.nicknamecheck == 1]]), _withDirectives(_createElementVNode(\"p\", _hoisted_31, \" 사용가능한 닉네임입니다. \", 512 /* NEED_PATCH */), [[_vShow, $data.nicknamecheck == 2]]), _ctx.nickname_check2 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_32, \"닉네임을 입력해주세요.\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_33, [_hoisted_34, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.sex = $event),\n    type: \"radio\",\n    name: \"gender\",\n    value: \"m\",\n    class: \"input_sex\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.sex]]), _createTextVNode(\"남자 \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.sex = $event),\n    type: \"radio\",\n    name: \"gender\",\n    value: \"f\",\n    class: \"input_sex\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.sex]]), _createTextVNode(\"여자 \")]), $data.sex_check ? (_openBlock(), _createElementBlock(\"p\", _hoisted_35, \"성별을 선택하세요.\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_36, [_hoisted_37, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $data.agegroup = $event),\n    type: \"radio\",\n    name: \"agegroup\",\n    value: \"10\",\n    class: \"input_sex\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.agegroup]]), _createTextVNode(\"10대 \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $data.agegroup = $event),\n    type: \"radio\",\n    name: \"agegroup\",\n    value: \"20\",\n    class: \"input_sex\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.agegroup]]), _createTextVNode(\"20대 \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $data.agegroup = $event),\n    type: \"radio\",\n    name: \"agegroup\",\n    value: \"30\",\n    class: \"input_sex\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.agegroup]]), _createTextVNode(\"30대 \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $data.agegroup = $event),\n    type: \"radio\",\n    name: \"agegroup\",\n    value: \"40\",\n    class: \"input_sex\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.agegroup]]), _createTextVNode(\"40대 \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => $data.agegroup = $event),\n    type: \"radio\",\n    name: \"agegroup\",\n    value: \"50\",\n    class: \"input_sex\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.agegroup]]), _createTextVNode(\"50대 \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => $data.agegroup = $event),\n    type: \"radio\",\n    name: \"agegroup\",\n    value: \"60\",\n    class: \"input_sex\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.agegroup]]), _createTextVNode(\"60세 이상 \")]), $data.age_range_check ? (_openBlock(), _createElementBlock(\"p\", _hoisted_38, \"나이대를 선택하세요.\")) : _createCommentVNode(\"v-if\", true), _hoisted_39, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => $data.phone_num = $event),\n    onInput: _cache[18] || (_cache[18] = (...args) => $options.formatPhoneNumber && $options.formatPhoneNumber(...args)),\n    type: \"text\",\n    id: \"phone_num\",\n    placeholder: \"전화번호 입력\",\n    class: _normalizeClass({\n      error_border: $data.phone_check\n    }),\n    maxlength: \"13\"\n  }, null, 34 /* CLASS, HYDRATE_EVENTS */), [[_vModelText, $data.phone_num]]), _hoisted_40, $data.phone_check ? (_openBlock(), _createElementBlock(\"p\", _hoisted_41, \"전화번호를 정확히 입력해주세요.\")) : _createCommentVNode(\"v-if\", true), _hoisted_42, _createElementVNode(\"input\", _hoisted_43, null, 512 /* NEED_PATCH */), _createElementVNode(\"input\", {\n    onClick: _cache[19] || (_cache[19] = (...args) => $options.sample6_execDaumPostcode && $options.sample6_execDaumPostcode(...args)),\n    class: \"epostNumBtn\",\n    type: \"button\",\n    value: \"우편번호 검색\"\n  }), _hoisted_44, _hoisted_45, _createElementVNode(\"input\", _hoisted_46, null, 512 /* NEED_PATCH */), _hoisted_47, _hoisted_48, _createElementVNode(\"input\", _hoisted_49, null, 512 /* NEED_PATCH */), _hoisted_50, _createCommentVNode(\" 가입하기버튼 \"), _createElementVNode(\"a\", _hoisted_51, [_createElementVNode(\"input\", {\n    type: \"submit\",\n    class: _normalizeClass({\n      error_submit: $data.allcheck,\n      submit: !$data.allcheck\n    }),\n    disabled: $data.allcheck,\n    id: \"login\",\n    value: \"가입하기\"\n  }, null, 10 /* CLASS, PROPS */, _hoisted_52)])], 32 /* HYDRATE_EVENTS */)])]), _createCommentVNode(\" <Footer /> \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","_imports_1","class","_createElementVNode","method","href","src","alt","_hoisted_8","for","type","maxlength","id","_hoisted_16","_hoisted_28","ref","placeholder","_hoisted_1","_hoisted_2","_createCommentVNode","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","onClick","_cache","args","_ctx","kakaoLogin","_hoisted_10","onSubmit","_withModifiers","$options","joinForm","_hoisted_11","name","$event","_normalizeClass","error_border","$data","email_check","emailcheck","_hoisted_12","email","_hoisted_13","sendEmail","startCountdown","clickSendEmail","_createElementBlock","_hoisted_14","_hoisted_15","_toDisplayString","formattedTime","completeAuthEmail","emailCheckForm","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","password","password_check","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","password2","password_check2","_hoisted_26","_hoisted_27","nicknameCheckForm","_hoisted_30","nicknamecheck","_hoisted_31","nickname_check2","_hoisted_32","_hoisted_33","_hoisted_34","sex","value","sex_check","_hoisted_35","_hoisted_36","_hoisted_37","agegroup","age_range_check","_hoisted_38","_hoisted_39","phone_num","onInput","formatPhoneNumber","phone_check","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","sample6_execDaumPostcode","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","error_submit","allcheck","submit","disabled"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\Join.vue"],"sourcesContent":["<template>\r\n  <div class=\"join\">\r\n    <div class=\"title-bar\">\r\n      <h5>회원가입</h5>\r\n    </div>\r\n\r\n    <!-- 소셜로그인 -->\r\n    <div class=\"wrap2\">\r\n      <form method=\"post\">\r\n        <div class=\"user_social_btns\">\r\n          <div class=\"user_social_btns_p\">\r\n            <p>소셜로 간편하게 로그인하세요</p>\r\n          </div>\r\n          <a class=\"social_btn\" href=\"/naverlogin\"\r\n            ><img class=\"social_btn_naver\" src=\"../assets/img/naver.png\" alt=\"\"\r\n          /></a>\r\n          <a class=\"social_btn\" @click=\"kakaoLogin\"\r\n            ><img class=\"social_btn_kakao\" src=\"../assets/img/kakao.png\" alt=\"\"\r\n          /></a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- 로컬회원가입 -->\r\n    <div class=\"wrap\">\r\n      <form @submit.prevent=\"joinForm\">\r\n        <label for=\"name\">이름</label>\r\n        <input\r\n          v-model=\"name\"\r\n          type=\"text\"\r\n          id=\"name\"\r\n          placeholder=\"이름 입력\"\r\n          :class=\"{ error_border: email_check || emailcheck != 2 }\"\r\n          maxlength=\"25\"\r\n        />\r\n        <label for=\"email\">아이디</label>\r\n        <input\r\n          v-model=\"email\"\r\n          type=\"text\"\r\n          id=\"email\"\r\n          placeholder=\"이메일 입력\"\r\n          :class=\"{ error_border: email_check || emailcheck != 2 }\"\r\n          maxlength=\"25\"\r\n        />\r\n        <select class=\"email_list\" name=\"emailList\" id=\"emailList\">\r\n          <option value=\"\">@naver.com</option>\r\n          <option value=\"\">@hanmail.net</option>\r\n          <option value=\"\">@gmail.com</option>\r\n          <option value=\"\">@nate.com</option>\r\n          <option value=\"\">@hotmail.com</option>\r\n        </select>\r\n        <button @click=\"sendEmail(), startCountdown()\" class=\"email_auth\">\r\n          인증메일 전송\r\n        </button>\r\n        <div v-if=\"clickSendEmail\" class=\"email_auth_complete\">\r\n          <input type=\"text\" maxlength=\"6\" />\r\n          <span>{{ formattedTime }}</span>\r\n          <button @click=\"completeAuthEmail\">인증완료</button>\r\n        </div>\r\n        <form @submit.prevent=\"emailCheckForm\">\r\n          <a href=\"/auth/checkemail\"\r\n            ><button type=\"submit\" id=\"email_check\" class=\"username_submit\">\r\n              중복확인\r\n            </button></a\r\n          >\r\n        </form>\r\n        <p id=\"error\" v-if=\"email_check\">\r\n          이메일주소를 정확히 입력해주세요. 예)abcd@naver.com\r\n        </p>\r\n        <p id=\"error\" v-show=\"emailcheck == 1\">존재하는 이메일입니다.</p>\r\n        <p id=\"complete\" v-show=\"emailcheck == 2 && !email_check\">\r\n          사용가능한 이메일입니다.\r\n        </p>\r\n        <label for=\"password\">비밀번호</label>\r\n        <input\r\n          v-model=\"password\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          :class=\"{ error_border: password_check }\"\r\n          placeholder=\"비밀번호 입력\"\r\n          maxlength=\"15\"\r\n        /><br />\r\n        <p id=\"error\" v-if=\"password_check\">\r\n          비밀번호를 정확히 입력해주세요.<br />\r\n          *8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상\r\n        </p>\r\n        <label for=\"password_check2\">비밀번호 확인</label>\r\n        <input\r\n          v-model=\"password2\"\r\n          type=\"password\"\r\n          id=\"password_check\"\r\n          :class=\"{ error_border: password_check2 }\"\r\n          placeholder=\"비밀번호 확인 입력\"\r\n        /><br />\r\n        <p id=\"error\" v-if=\"password_check2\">비밀번호가 일치하지 않습니다.</p>\r\n        <form @submit.prevent=\"nicknameCheckForm\">\r\n          <a href=\"/auth/checknick\"\r\n            ><button type=\"submit\" id=\"nickname_check\" class=\"username_submit\">\r\n              중복확인\r\n            </button></a\r\n          >\r\n        </form>\r\n        <p id=\"error\" v-show=\"nicknamecheck == 1\">존재하는 닉네임입니다.</p>\r\n        <p id=\"complete\" v-show=\"nicknamecheck == 2\">\r\n          사용가능한 닉네임입니다.\r\n        </p>\r\n        <p id=\"error\" v-if=\"nickname_check2\">닉네임을 입력해주세요.</p>\r\n        <div class=\"gender\">\r\n          <label for=\"sex\">성별</label>\r\n          <input\r\n            v-model=\"sex\"\r\n            type=\"radio\"\r\n            name=\"gender\"\r\n            value=\"m\"\r\n            class=\"input_sex\"\r\n          />남자\r\n          <input\r\n            v-model=\"sex\"\r\n            type=\"radio\"\r\n            name=\"gender\"\r\n            value=\"f\"\r\n            class=\"input_sex\"\r\n          />여자\r\n        </div>\r\n        <p id=\"error\" v-if=\"sex_check\">성별을 선택하세요.</p>\r\n        <div class=\"age_range\">\r\n          <label for=\"age_range\">나이대</label>\r\n          <input\r\n            v-model=\"agegroup\"\r\n            type=\"radio\"\r\n            name=\"agegroup\"\r\n            value=\"10\"\r\n            class=\"input_sex\"\r\n          />10대\r\n          <input\r\n            v-model=\"agegroup\"\r\n            type=\"radio\"\r\n            name=\"agegroup\"\r\n            value=\"20\"\r\n            class=\"input_sex\"\r\n          />20대\r\n          <input\r\n            v-model=\"agegroup\"\r\n            type=\"radio\"\r\n            name=\"agegroup\"\r\n            value=\"30\"\r\n            class=\"input_sex\"\r\n          />30대\r\n          <input\r\n            v-model=\"agegroup\"\r\n            type=\"radio\"\r\n            name=\"agegroup\"\r\n            value=\"40\"\r\n            class=\"input_sex\"\r\n          />40대\r\n          <input\r\n            v-model=\"agegroup\"\r\n            type=\"radio\"\r\n            name=\"agegroup\"\r\n            value=\"50\"\r\n            class=\"input_sex\"\r\n          />50대\r\n          <input\r\n            v-model=\"agegroup\"\r\n            type=\"radio\"\r\n            name=\"agegroup\"\r\n            value=\"60\"\r\n            class=\"input_sex\"\r\n          />60세 이상\r\n        </div>\r\n        <p id=\"error\" v-if=\"age_range_check\">나이대를 선택하세요.</p>\r\n        <label for=\"phone_num\">전화번호</label>\r\n        <input\r\n          v-model=\"phone_num\"\r\n          @input=\"formatPhoneNumber\"\r\n          type=\"text\"\r\n          id=\"phone_num\"\r\n          placeholder=\"전화번호 입력\"\r\n          :class=\"{ error_border: phone_check }\"\r\n          maxlength=\"13\"\r\n        /><br />\r\n        <p id=\"error\" v-if=\"phone_check\">전화번호를 정확히 입력해주세요.</p>\r\n        <label for=\"epostNum\">우편번호</label>\r\n        <input\r\n          ref=\"epostNum\"\r\n          type=\"text\"\r\n          id=\"epostNum\"\r\n          placeholder=\"우편번호 입력\"\r\n        />\r\n        <input\r\n          @click=\"sample6_execDaumPostcode\"\r\n          class=\"epostNumBtn\"\r\n          type=\"button\"\r\n          value=\"우편번호 검색\"\r\n        /><br />\r\n        <label for=\"epostAdress\">주소</label>\r\n        <input\r\n          ref=\"epostAdress\"\r\n          type=\"text\"\r\n          id=\"epostAdress\"\r\n          placeholder=\"주소 입력\"\r\n        /><br />\r\n        <label for=\"epostDetailAdress\">상세주소</label>\r\n        <input\r\n          ref=\"epostDetailAdress\"\r\n          type=\"text\"\r\n          id=\"epostDetailAdress\"\r\n          placeholder=\"상세주소 입력\"\r\n        /><br />\r\n        <!-- 가입하기버튼 -->\r\n        <a href=\"/auth/join\"\r\n          ><input\r\n            type=\"submit\"\r\n            :class=\"{ error_submit: allcheck, submit: !allcheck }\"\r\n            :disabled=\"allcheck\"\r\n            id=\"login\"\r\n            value=\"가입하기\"\r\n        /></a>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <!-- <Footer /> -->\r\n</template>\r\n\r\n<script>\r\n// import Footer from '../components/footer.vue'\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  // components: { gnbBar, Footer },\r\n  data() {\r\n    return {\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      nickname: \"\",\r\n      phone_num: \"\",\r\n      sex: \"\",\r\n      agegroup: \"\",\r\n\r\n      email_check: false,\r\n      password_check: false,\r\n      password_check2: false,\r\n      nickname_check: false,\r\n      sex_check: false,\r\n      age_range_check: false,\r\n      phone_check: false,\r\n      error_border_check: false,\r\n\r\n      //이메일 인증하기\r\n      clickSendEmail: false,\r\n      countdown: 180,\r\n      interval: null,\r\n\r\n      //주소 데이터\r\n      epostNum: \"\",\r\n      epostAdress: \"\",\r\n      epostDetailAdress: \"\",\r\n      epostreference: \"\",\r\n\r\n      allcheck: true,\r\n      allcheck1: true,\r\n      allcheck2: true,\r\n      allcheck3: true,\r\n      allcheck4: true,\r\n      allcheck5: true,\r\n      allcheck6: true,\r\n      allcheck7: true,\r\n      emailcheck: 3,\r\n      nicknamecheck: 3,\r\n    };\r\n  },\r\n  watch: {\r\n    email: function () {\r\n      this.checkEmail();\r\n      this.funcWatch();\r\n    },\r\n    password: function () {\r\n      this.checkPassword();\r\n      this.funcWatch();\r\n    },\r\n    password2: function () {\r\n      this.checkPassword2();\r\n      this.funcWatch();\r\n    },\r\n    nickname: function () {\r\n      this.checknickname();\r\n      this.funcWatch();\r\n    },\r\n    sex: function () {\r\n      this.checksex();\r\n      this.funcWatch();\r\n    },\r\n    agegroup: function () {\r\n      this.checkage_range();\r\n      this.funcWatch();\r\n    },\r\n    phone_num: function () {\r\n      this.checkphone();\r\n      this.funcWatch();\r\n    },\r\n  },\r\n  computed: {\r\n    formattedTime() {\r\n      const minutes = Math.floor(this.countdown / 60);\r\n      const seconds = this.countdown % 60;\r\n      return `${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\r\n    },\r\n  },\r\n  methods: {\r\n    funcWatch() {\r\n      this.emailCheckForm();\r\n      this.inputAllCheck();\r\n      this.nicknameCheckForm();\r\n    },\r\n    movetomain() {\r\n      window.location.href = \"/\";\r\n    },\r\n    checkEmail() {\r\n      // 이메일 형식 검사\r\n      const validateEmail =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n\r\n      if (this.email === \"\" || !validateEmail.test(this.email) || !this.email) {\r\n        this.email_check = true;\r\n        this.error_border_check = true;\r\n        this.allcheck1 = true; //입력조건 안맞을시 true\r\n      } else {\r\n        this.email_check = false;\r\n        this.error_border_check = false;\r\n        this.allcheck1 = false;\r\n      }\r\n    },\r\n    checkPassword() {\r\n      // 최소 8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상\r\n      const validatePassword =\r\n        /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$/;\r\n\r\n      if (\r\n        this.password === \"\" ||\r\n        !validatePassword.test(this.password) ||\r\n        !this.password\r\n      ) {\r\n        this.password_check = true;\r\n        this.error_border_check = true;\r\n        this.allcheck2 = true;\r\n      } else {\r\n        this.password_check = false;\r\n        this.error_border_check = false;\r\n        this.allcheck2 = false;\r\n      }\r\n    },\r\n    checkPassword2() {\r\n      if (this.password === this.password2) {\r\n        this.password_check2 = false;\r\n        this.error_border_check = false;\r\n        this.allcheck3 = false;\r\n      } else {\r\n        this.password_check2 = true;\r\n        this.error_border_check = true;\r\n        this.allcheck3 = true;\r\n      }\r\n    },\r\n    checknickname() {\r\n      const validateNickname = /^.{1,10}$/;\r\n\r\n      if (!this.nickname || !validateNickname.test(this.nickname)) {\r\n        this.nickname_check2 = true;\r\n        this.error_border_check = true;\r\n        this.allcheck4 = true;\r\n      } else {\r\n        this.nickname_check2 = false;\r\n        this.error_border_check = false;\r\n        this.allcheck4 = false;\r\n      }\r\n    },\r\n    checksex() {\r\n      if (this.sex == null) {\r\n        //선택했으면\r\n        this.allcheck5 = true;\r\n      } else {\r\n        this.allcheck5 = false;\r\n      }\r\n    },\r\n    checkage_range() {\r\n      if (this.agegroup == null) {\r\n        this.allcheck6 = true;\r\n      } else {\r\n        this.allcheck6 = false;\r\n      }\r\n    },\r\n    checkphone() {\r\n      const validatephone = /^01([0|1|6|7|8|9])-?([0-9]{3,4})-?([0-9]{4})$/;\r\n\r\n      if (\r\n        this.phone_num === \"\" ||\r\n        !validatephone.test(this.phone_num) ||\r\n        !this.phone_num\r\n      ) {\r\n        this.phone_check = true;\r\n        this.error_border_check = true;\r\n        this.allcheck7 = true;\r\n      } else {\r\n        this.phone_check = false;\r\n        this.error_border_check = false;\r\n        this.allcheck7 = false;\r\n      }\r\n    },\r\n    formatPhoneNumber() {\r\n      // 숫자 이외의 문자 제거\r\n      this.phone_num = this.phone_num.replace(/[^\\d-]/g, \"\");\r\n      // 하이픈(-) 삽입\r\n      if (this.phone_num.length > 2) {\r\n        this.phone_num = this.phone_num.replace(\r\n          /^01([0|1|6|7|8|9])-?(\\d{4})-?(\\d{4})$/,\r\n          \"01$1-$2-$3\"\r\n        );\r\n      }\r\n    },\r\n    inputAllCheck() {\r\n      if (\r\n        this.allcheck1 ||\r\n        this.allcheck2 ||\r\n        this.allcheck3 ||\r\n        this.allcheck4 ||\r\n        this.allcheck5 ||\r\n        this.allcheck6 ||\r\n        this.allcheck7 ||\r\n        this.email_check\r\n      ) {\r\n        //하나라도 입력조건이 안맞을시\r\n        this.allcheck = true; //버튼 비활성\r\n      } else {\r\n        this.allcheck = false;\r\n      }\r\n    },\r\n    sendEmail() {\r\n      this.clickSendEmail = true;\r\n    },\r\n    startCountdown() {\r\n      this.interval = setInterval(() => {\r\n        if (this.countdown > 0) {\r\n          this.countdown--;\r\n        } else {\r\n          clearInterval(this.interval); // 컴포넌트가 제거되기 전에 interval을 정리해야합니다.\r\n          alert(\"인증에 실패하였습니다.\");\r\n          this.clickSendEmail = false;\r\n          this.countdown = 180;\r\n        }\r\n      }, 1000);\r\n    },\r\n    completeAuthEmail() {\r\n      if (인증번호일치할시) {\r\n        alert(\"인증이 완료되었습니다.\");\r\n      } else {\r\n        alert(\"인증번호가 일치하지 않습니다.\");\r\n      }\r\n    },\r\n    emailCheckForm() {\r\n      axios({\r\n        url: \"http://localhost:3000/auth/checkemail\",\r\n        method: \"POST\",\r\n        data: {\r\n          email: this.email,\r\n        },\r\n      })\r\n        .then(async (res) => {\r\n          const validateEmail =\r\n            /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n\r\n          if (\r\n            res.data.message == \"사용가능한 이메일입니다.\" &&\r\n            validateEmail.test(this.email)\r\n          ) {\r\n            this.emailcheck = 2;\r\n          } else if (res.data.message == \"존재하는 이메일입니다.\") {\r\n            this.emailcheck = 1;\r\n            this.allcheck = true;\r\n          } else if (!this.email) {\r\n            this.emailcheck = 3;\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    },\r\n    nicknameCheckForm() {\r\n      axios({\r\n        url: \"http://localhost:3000/auth/checknick\",\r\n        method: \"POST\",\r\n        data: {\r\n          nickname: this.nickname,\r\n        },\r\n      })\r\n        .then(async (res) => {\r\n          if (res.data.message == \"사용가능한 닉네임입니다.\" && this.nickname) {\r\n            this.nicknamecheck = 2;\r\n          } else if (res.data.message == \"존재하는 닉네임입니다.\") {\r\n            this.nicknamecheck = 1;\r\n            this.allcheck = true;\r\n          } else if (!this.nickname) {\r\n            this.nicknamecheck = 3;\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    },\r\n    sample6_execDaumPostcode() {\r\n      // 다음 지도API\r\n      new daum.Postcode({\r\n        oncomplete: function (data) {\r\n          // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n\r\n          // 각 주소의 노출 규칙에 따라 주소를 조합한다.\r\n          // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n          var addr = \"\"; // 주소 변수\r\n          var extraAddr = \"\"; // 참고항목 변수\r\n\r\n          //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\r\n          if (data.userSelectedType === \"R\") {\r\n            // 사용자가 도로명 주소를 선택했을 경우\r\n            addr = data.roadAddress;\r\n          } else {\r\n            // 사용자가 지번 주소를 선택했을 경우(J)\r\n            addr = data.jibunAddress;\r\n          }\r\n\r\n          // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.\r\n          if (data.userSelectedType === \"R\") {\r\n            // 법정동명이 있을 경우 추가한다. (법정리는 제외)\r\n            // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n            if (data.bname !== \"\" && /[동|로|가]$/g.test(data.bname)) {\r\n              extraAddr += data.bname;\r\n            }\r\n            // 건물명이 있고, 공동주택일 경우 추가한다.\r\n            if (data.buildingName !== \"\" && data.apartment === \"Y\") {\r\n              extraAddr +=\r\n                extraAddr !== \"\" ? \", \" + data.buildingName : data.buildingName;\r\n            }\r\n            // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n            if (extraAddr !== \"\") {\r\n              extraAddr = \" (\" + extraAddr + \")\";\r\n            }\r\n          }\r\n\r\n          // 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n          document.getElementById(\"epostNum\").value = data.zonecode;\r\n          document.getElementById(\"epostAdress\").value = addr;\r\n          // 커서를 상세주소 필드로 이동한다.\r\n          document.getElementById(\"epostDetailAdress\").focus();\r\n        },\r\n      }).open();\r\n    },\r\n    joinForm() {\r\n      //백엔드로 회원가입 정보 전달\r\n      axios({\r\n        url: \"http://localhost:3000/auth/join\",\r\n        method: \"POST\",\r\n        data: {\r\n          email: this.email,\r\n          password: this.password,\r\n          nickname: this.nickname,\r\n          sex: this.sex,\r\n          agegroup: this.agegroup,\r\n          phone_num: this.phone_num,\r\n        },\r\n      })\r\n        .then(async (res) => {\r\n          alert(res.data.message);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    },\r\n    async autoLogin() {\r\n      await axios({\r\n        url: \"http://localhost:3000/auth/login\",\r\n        method: \"POST\",\r\n        data: {\r\n          email: this.email,\r\n          password: this.password,\r\n        },\r\n      })\r\n        .then(async (res) => {\r\n          if (res.data.code == 200) {\r\n            localStorage.setItem(\"userID\", res.data.email);\r\n            localStorage.setItem(\"userNick\", res.data.nick);\r\n            localStorage.setItem(\"userProvider\", res.data.provider);\r\n\r\n            window.location.href = \"/\";\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 회원가입 */\r\n.join {\r\n  padding-top: 5%;\r\n  width: 100%;\r\n  height: 80vh;\r\n  margin: 0;\r\n  background-color: white;\r\n  font-family: arial;\r\n  font-size: 14px;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n.title-bar {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #333333;\r\n  font-size: 30px;\r\n  padding-bottom: 10px;\r\n  position: relative;\r\n}\r\n\r\n.title-bar h5 {\r\n  margin: 24px 0;\r\n  font-size: x-large;\r\n  font-weight: bold;\r\n}\r\n\r\n/* 소셜로그인 */\r\n.wrap2 {\r\n  background-color: #ffffff;\r\n  padding: 0 2%;\r\n  width: 35%;\r\n  min-width: 350px;\r\n  margin: 0 auto;\r\n  border-radius: 6px;\r\n}\r\n\r\n.user_social_btns {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  padding: 2%;\r\n  margin: 0 auto 2% auto;\r\n}\r\n\r\n.user_social_btns_p {\r\n  width: 80%;\r\n  font-size: large;\r\n  color: #333333;\r\n}\r\n\r\n.social_btn {\r\n  width: 15%;\r\n}\r\n\r\n/* 로컬회원가입 */\r\n.wrap {\r\n  background-color: #ffffff;\r\n  padding: 1%;\r\n  width: 35%;\r\n  min-width: 350px;\r\n  margin: 0 auto;\r\n  border-radius: 6px;\r\n  border: 1px solid #fff;\r\n}\r\n\r\n.email_auth {\r\n  width: 17%;\r\n  padding: 1% 2%;\r\n  border: 1px solid #4e4eff;\r\n  border-radius: 4px;\r\n  color: white;\r\n  background-color: #4e4eff;\r\n  margin-left: 2%;\r\n}\r\n\r\n.email_auth_complete {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  position: relative;\r\n}\r\n.email_auth_complete span {\r\n  position: absolute;\r\n  top: 18%;\r\n  right: 20%;\r\n  color: red;\r\n  padding: 1%;\r\n}\r\n.email_auth_complete input {\r\n  width: 20%;\r\n}\r\n\r\n.email_auth_complete button {\r\n  width: 17%;\r\n  padding: 1% 2%;\r\n  border: 1px solid #4e4eff;\r\n  border-radius: 4px;\r\n  color: white;\r\n  background-color: #4e4eff;\r\n  margin-left: 2%;\r\n  margin-right: 0.5%;\r\n}\r\n\r\n.email_list {\r\n  width: 29%;\r\n  padding: 1%;\r\n  border-radius: 6px;\r\n  border: 1px solid #efefef;\r\n  font-size: 15px;\r\n  margin-left: 1%;\r\n}\r\n\r\n#email {\r\n  width: 30%;\r\n}\r\n\r\nlabel {\r\n  margin-right: 3%;\r\n  display: inline-block;\r\n  width: 110px;\r\n  text-align: right;\r\n}\r\n\r\ninput {\r\n  width: 60%;\r\n  margin-bottom: 1%;\r\n  padding: 1%;\r\n  border-radius: 6px;\r\n  border: 1px solid #efefef;\r\n  font-size: 15px;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\n.username_submit {\r\n  font-size: 14px;\r\n  background-color: #4e4eff;\r\n  color: white;\r\n  width: 15%;\r\n  margin-left: 5%;\r\n  border-radius: 4px;\r\n  border: none;\r\n  display: none;\r\n}\r\n\r\ninput:focus {\r\n  outline: none;\r\n  border-color: #4e4eff;\r\n\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\ninput.submit {\r\n  width: 100%;\r\n  padding: 3%;\r\n  border-radius: 6px;\r\n  border: 1px solid #4e4eff;\r\n  font-size: 15px;\r\n  background-color: #4e4eff;\r\n  color: #fff;\r\n  margin-top: 25px;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\ninput.submit:hover {\r\n  width: 100%;\r\n  padding: 3%;\r\n  border-radius: 6px;\r\n  font-size: 15px;\r\n  color: #fff;\r\n  margin-top: 25px;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\n.gender,\r\n.age_range {\r\n  width: 100%;\r\n  display: block;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 1%;\r\n  margin-left: -1%;\r\n  font-size: 14px;\r\n}\r\n\r\n.input_sex {\r\n  width: 14px;\r\n  height: 14px;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\n.epostNumBtn {\r\n  width: 20%;\r\n  margin-left: 2%;\r\n  background-color: #4e4eff;\r\n  color: #fff;\r\n  cursor: pointer;\r\n}\r\n\r\n#epostNum {\r\n  width: 20%;\r\n}\r\n\r\n#error {\r\n  color: red;\r\n  margin-bottom: 2%;\r\n  margin-left: 24%;\r\n  font-size: 12px;\r\n}\r\n\r\n#complete {\r\n  color: #4e4eff;\r\n  margin-bottom: 2%;\r\n  margin-left: 24%;\r\n  font-size: 12px;\r\n}\r\n\r\n.error_border:focus {\r\n  border-color: red;\r\n  box-shadow: none;\r\n}\r\n\r\n.error_submit {\r\n  width: 60%;\r\n  padding: 3%;\r\n  border-radius: 6px;\r\n  border: 1px solid #4e4eff;\r\n  font-size: 15px;\r\n  background-color: #4e4eff;\r\n  color: white;\r\n  margin-left: 20%;\r\n  margin-top: 25px;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}