{"ast":null,"code":"import axios from \"axios\";\nimport myPageSide from \"../components/myPageSide.vue\";\nexport default {\n  components: {\n    myPageSide\n  },\n  data() {\n    return {\n      originalData: {},\n      // 기존 데이터를 저장할 객체\n      updatedFields: {\n        email: \"\",\n        name: \"\",\n        password: \"\",\n        sex: \"\",\n        age: 0,\n        add1: \"\",\n        add2: \"\",\n        zipcode: \"\",\n        phone_num: \"\",\n        provider: \"\",\n        password_check: false,\n        password_check2: false,\n        phone_check: false\n      },\n      message: \"\"\n    };\n  },\n  created() {\n    const email = localStorage.getItem(\"userID\");\n    this.fetchUserInfo(email); // 컴포넌트 생성 시 기존 데이터를 불러오는 메소드 호출\n  },\n\n  methods: {\n    // 연령대 정보 변환 함수\n    convertAgeRange(ageRange) {\n      if (ageRange.includes(\"~\")) {\n        const ageRangeParts = ageRange.split(\"~\");\n        return `${ageRangeParts[0]}대`;\n      }\n      return ageRange;\n    },\n    async fetchUserInfo(email) {\n      try {\n        const response = await axios.get(\"mypage/getUserInfo\", {\n          params: {\n            userEmail: email\n          }\n        });\n        this.originalData = {\n          ...response.data\n        };\n        this.updatedFields = {\n          ...this.originalData\n        }; // 수정할 정보를 updatedFields에 복사\n      } catch (error) {\n        console.error(\"기존 회원정보 불러오기 오류:\", error);\n      }\n    },\n    async updateUserInfo() {\n      const email = localStorage.getItem(\"userID\");\n\n      // POST 요청을 보내기 위한 데이터 구성\n      const requestData = {\n        email: email,\n        updatedFields: {\n          add1: this.updatedFields.add1,\n          add2: this.updatedFields.add2,\n          zipcode: this.updatedFields.zipcode,\n          phone_num: this.updatedFields.phone_num,\n          password: this.updatedFields.password\n        }\n      };\n      try {\n        const response = await axios.post(\"mypage/updateUserInfo\", requestData);\n        this.message = response.data.message;\n      } catch (error) {\n        console.error(\"회원정보 수정 오류:\", error);\n        this.message = \"회원정보 수정에 실패했습니다.\";\n      }\n    },\n    openAddressSearch() {\n      new daum.Postcode({\n        oncomplete: data => {\n          if (data.userSelectedType === \"R\" || data.userSelectedType === \"J\") {\n            // 우편번호와 주소 정보를 업데이트\n            this.updatedFields.zipcode = data.zonecode;\n            this.updatedFields.add1 = data.roadAddress || data.jibunAddress;\n            this.updatedFields.add2 = \"\"; // 상세주소 초기화\n\n            // 상세주소 필드로 포커스 이동\n            document.getElementById(\"add2\").focus();\n          }\n        }\n      }).open();\n    },\n    cancelUpdate() {\n      // 수정 취소 시 원래 데이터로 초기화\n      this.updatedFields = {\n        ...this.originalData\n      };\n      this.message = \"\"; // 메시지 초기화\n    }\n  }\n};","map":{"version":3,"names":["axios","myPageSide","components","data","originalData","updatedFields","email","name","password","sex","age","add1","add2","zipcode","phone_num","provider","password_check","password_check2","phone_check","message","created","localStorage","getItem","fetchUserInfo","methods","convertAgeRange","ageRange","includes","ageRangeParts","split","response","get","params","userEmail","error","console","updateUserInfo","requestData","post","openAddressSearch","daum","Postcode","oncomplete","userSelectedType","zonecode","roadAddress","jibunAddress","document","getElementById","focus","open","cancelUpdate"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\mypageUserInfo.vue"],"sourcesContent":["<template>\r\n    <div class=\"mypage_menu\">\r\n        <myPageSide />\r\n    </div>\r\n    <div class=\"right_box\">\r\n        <h2 class=\"userUpdateTitle\">회원정보 관리</h2>\r\n        <hr style=\"margin-top: 30px; margin-bottom: 50px\" />\r\n\r\n        <form @submit.prevent=\"updateUserInfo\">\r\n            <div class=\"input-group\">\r\n                <label for=\"email\">아이디</label>\r\n                <input type=\"text\" id=\"email\" v-model=\"updatedFields.email\" :readonly=\"true\" />\r\n            </div>\r\n            <div>\r\n                <label for=\"name\">이름</label>\r\n                <input type=\"text\" id=\"name\" v-model=\"updatedFields.name\" :readonly=\"true\" />\r\n            </div>\r\n            <div>\r\n                <label for=\"password\">비밀번호</label>\r\n                <input type=\"password\" id=\"password\" v-model=\"updatedFields.password\" />\r\n            </div>\r\n            <div>\r\n                <label for=\"password\">새 비밀번호</label>\r\n                <input type=\"password\" id=\"password\" v-model=\"updatedFields.password\" />\r\n            </div>\r\n            <div>\r\n                <label for=\"sex\">성별</label>\r\n                <input type=\"text\" id=\"sex\" v-model=\"updatedFields.sex\" :readonly=\"true\" />\r\n            </div>\r\n            <div>\r\n                <label for=\"age\">나이</label>\r\n                <input type=\"number\" id=\"age\" v-model=\"updatedFields.age\" :readonly=\"true\" />\r\n            </div>\r\n            <div>\r\n                <label for=\"add1\">주소</label>\r\n                <input type=\"text\" id=\"add1\" v-model=\"updatedFields.add1\" @click=\"openAddressSearch\" />\r\n            </div>\r\n            <div>\r\n                <label for=\"add2\">상세주소</label>\r\n                <input type=\"text\" id=\"add2\" v-model=\"updatedFields.add2\" />\r\n            </div>\r\n            <div>\r\n                <label for=\"zipcode\">우편번호</label>\r\n                <input type=\"text\" id=\"zipcode\" v-model=\"updatedFields.zipcode\" />\r\n            </div>\r\n            <div>\r\n                <label for=\"phone_num\">전화번호</label>\r\n                <input type=\"text\" id=\"phone_num\" v-model=\"updatedFields.phone_num\" />\r\n            </div>\r\n\r\n            <div>\r\n                <button type=\"button\" @click=\"cancelUpdate\">취소</button>\r\n                <button type=\"submit\">수정</button>\r\n            </div>\r\n        </form>\r\n        <div v-if=\"message\">{{ message }}</div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nimport myPageSide from \"../components/myPageSide.vue\";\r\n\r\nexport default {\r\n    components: { myPageSide },\r\n    data() {\r\n        return {\r\n            originalData: {}, // 기존 데이터를 저장할 객체\r\n            updatedFields: {\r\n                email: \"\",\r\n                name: \"\",\r\n                password: \"\",\r\n                sex: \"\",\r\n                age: 0,\r\n                add1: \"\",\r\n                add2: \"\",\r\n                zipcode: \"\",\r\n                phone_num: \"\",\r\n                provider: \"\",\r\n\r\n                password_check: false,\r\n                password_check2: false,\r\n                phone_check: false,\r\n            },\r\n            message: \"\",\r\n        };\r\n    },\r\n    created() {\r\n        const email = localStorage.getItem(\"userID\");\r\n        this.fetchUserInfo(email); // 컴포넌트 생성 시 기존 데이터를 불러오는 메소드 호출\r\n    },\r\n    methods: {\r\n        // 연령대 정보 변환 함수\r\n        convertAgeRange(ageRange) {\r\n            if (ageRange.includes(\"~\")) {\r\n                const ageRangeParts = ageRange.split(\"~\");\r\n                return `${ageRangeParts[0]}대`;\r\n            }\r\n            return ageRange;\r\n        },\r\n        async fetchUserInfo(email) {\r\n            try {\r\n                const response = await axios.get(\"mypage/getUserInfo\", {\r\n                    params: { userEmail: email },\r\n                });\r\n                this.originalData = {\r\n                    ...response.data,\r\n                };\r\n\r\n                this.updatedFields = { ...this.originalData }; // 수정할 정보를 updatedFields에 복사\r\n            } catch (error) {\r\n                console.error(\"기존 회원정보 불러오기 오류:\", error);\r\n            }\r\n        },\r\n        async updateUserInfo() {\r\n            const email = localStorage.getItem(\"userID\");\r\n\r\n            // POST 요청을 보내기 위한 데이터 구성\r\n            const requestData = {\r\n                email: email,\r\n                updatedFields: {\r\n                    add1: this.updatedFields.add1,\r\n                    add2: this.updatedFields.add2,\r\n                    zipcode: this.updatedFields.zipcode,\r\n                    phone_num: this.updatedFields.phone_num,\r\n                    password: this.updatedFields.password,\r\n                },\r\n            };\r\n\r\n            try {\r\n                const response = await axios.post(\"mypage/updateUserInfo\", requestData);\r\n                this.message = response.data.message;\r\n            } catch (error) {\r\n                console.error(\"회원정보 수정 오류:\", error);\r\n                this.message = \"회원정보 수정에 실패했습니다.\";\r\n            }\r\n        },\r\n        openAddressSearch() {\r\n            new daum.Postcode({\r\n                oncomplete: (data) => {\r\n                    if (data.userSelectedType === \"R\" || data.userSelectedType === \"J\") {\r\n                        // 우편번호와 주소 정보를 업데이트\r\n                        this.updatedFields.zipcode = data.zonecode;\r\n                        this.updatedFields.add1 = data.roadAddress || data.jibunAddress;\r\n                        this.updatedFields.add2 = \"\"; // 상세주소 초기화\r\n\r\n                        // 상세주소 필드로 포커스 이동\r\n                        document.getElementById(\"add2\").focus();\r\n                    }\r\n                },\r\n            }).open();\r\n        },\r\n        cancelUpdate() {\r\n            // 수정 취소 시 원래 데이터로 초기화\r\n            this.updatedFields = { ...this.originalData };\r\n            this.message = \"\"; // 메시지 초기화\r\n        },\r\n    },\r\n};\r\n</script>\r\n<style scoped>\r\n.userUpdateTitle {\r\n    font-weight: bold;\r\n    font-size: 30px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}