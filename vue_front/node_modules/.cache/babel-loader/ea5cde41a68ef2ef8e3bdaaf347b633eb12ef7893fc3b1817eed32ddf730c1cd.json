{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport gnbbar from \"../components/gnbBar.vue\";\nexport default {\n  components: {\n    gnbbar\n  },\n  data() {\n    return {\n      cart: [\n      // 책 데이터 예시\n      {\n        img: \"https://contents.kyobobook.co.kr/sih/fit-in/458x0/pdt/9791192512365.jpg\",\n        title: \"엄청나게 긴 책 제목 테스트입니다 아무튼간에 엄청나게 긴 책 제목 테스트입니다 아무튼간에 엄청나게 긴 책 제목 테스트입니다 아무튼간에\",\n        price: 9900,\n        point: 50,\n        quantity: 20,\n        book_no: 1\n      }, {\n        img: \"https://contents.kyobobook.co.kr/sih/fit-in/458x0/pdt/9791192512365.jpg\",\n        title: \"Book 2\",\n        price: 24000,\n        point: 30,\n        quantity: 1,\n        book_no: 2\n      }, {\n        img: \"https://contents.kyobobook.co.kr/sih/fit-in/458x0/pdt/9791192512365.jpg\",\n        title: \"Book 2\",\n        price: 24000,\n        point: 30,\n        quantity: 1,\n        book_no: 3\n      }, {\n        img: \"https://contents.kyobobook.co.kr/sih/fit-in/458x0/pdt/9791192512365.jpg\",\n        title: \"Book 2\",\n        price: 24000,\n        point: 30,\n        quantity: 1,\n        book_no: 4\n      }, {\n        img: \"https://contents.kyobobook.co.kr/sih/fit-in/458x0/pdt/9791192512365.jpg\",\n        title: \"Book 2\",\n        price: 24000,\n        point: 30,\n        quantity: 1,\n        book_no: 5\n      }, {\n        img: \"https://contents.kyobobook.co.kr/sih/fit-in/458x0/pdt/9791192512365.jpg\",\n        title: \"Book 2\",\n        price: 24000,\n        point: 30,\n        quantity: 1,\n        book_no: 6\n      }],\n      select: [],\n      selectAll: false\n    };\n  },\n  methods: {\n    increaseQuantity(book) {\n      //장바구니 수량 늘리기\n\n      book.quantity++;\n    },\n    deleteBook(book) {\n      if (confirm(\"상품을 삭제하시겠습니까?\")) {\n        this.cart = this.cart.filter(i => i.book_no !== book.book_no);\n        console.log(this.cart);\n      } else {\n        return;\n      }\n    },\n    choosePay() {\n      // 선택된 상품들만 필터링하여 가져옵니다.\n      const selectedBooks = this.cart.filter(book => this.select.includes(book.book_no));\n      if (selectedBooks.length == 0) {\n        alert(\"상품을 선택해주세요\");\n        return;\n      }\n      let TP = 0; //총 결제 금액\n      let TP2 = 0; //총 포인트\n      let thisFee = 0;\n      let bookData = [];\n      selectedBooks.forEach(book => {\n        TP += this.getPrice(book);\n        TP2 += this.getPoint(book);\n        bookData.push({\n          ORDERITEM_BOOKID: book.book_no,\n          ORDERITEM_CNT: book.quantity,\n          ORDERITEM_PRICE: book.price,\n          ORDERITEM_POINT: this.getPoint(book)\n        });\n      });\n      if (TP >= 15000) {\n        //결제금액이 15000원이상이면 배송료 0원으로 설정\n        thisFee = 0;\n      } else if (TP < 15000) {\n        thisFee = 2500;\n      }\n      axios({\n        url: \"http://localhost:3000/cart\",\n        method: \"POST\",\n        data: {\n          email: \"bj3757@naver.com\",\n          total_pay: TP,\n          total_point: TP2,\n          fee: thisFee,\n          books_info: bookData\n        }\n      }).then(res => {\n        if (res.status == 401) {\n          console.log(\"에러 발생: \" + res.data.error);\n        } else if (res.status == 200) {\n          const orderId = res.data.orderID;\n          alert(\"결제페이지로 이동합니다\");\n          window.location.href = `/pay/${orderId}`;\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    // allPay() {\n    //   const allBooks = this.cart; //장바구니에 담긴 책 정보 전부 담아오기\n\n    //   let TP = 0; //총 결제 금액\n    //   let TP2 = 0; //총 포인트\n    //   let thisFee = 0;\n\n    //   let bookData = [];\n\n    //   // 모든 상품에 대한 결제 정보를 콘솔로 출력합니다.\n    //   allBooks.forEach((book) => {\n    //     TP += this.getPrice(book);\n    //     TP2 += this.getPoint(book);\n\n    //     bookData.push({\n    //       ORDERITEM_BOOKID: book.book_no,\n    //       ORDERITEM_CNT: book.quantity,\n    //       ORDERITEM_PRICE: book.price,\n    //       ORDERITEM_POINT: this.getPoint(book),\n    //     });\n    //   });\n\n    //   if (TP >= 15000) { //결제금액이 15000원이상이면 배송료 0원으로 설정\n    //     thisFee = 0;\n    //   } else if (TP < 15000) {\n    //     thisFee = 2500;\n    //   }\n\n    //   axios({\n    //     url: \"http://localhost:3000/cart\",\n    //     method: \"POST\",\n    //     data: {\n    //       \"email\": \"bj3757@naver.com\",\n    //       \"total_pay\": TP,\n    //       \"total_point\": TP2,\n    //       \"fee\": thisFee,\n    //       \"books_info\": bookData,\n    //     },\n    //   }).then((res => {\n    //     if (res.status == 401) {\n    //       console.log(\"에러 발생: \" + res.data.error);\n    //     } else if (res.status == 200) {\n    //       const orderId = res.data.orderID;\n    //       alert('결제페이지로 이동합니다');\n    //       window.location.href = `/pay/${orderId}`;\n    //     }\n    //   })).catch(error => {\n    //     console.log(error);\n    //   });\n    // },\n    decreaseQuantity(book) {\n      //장바구니 수량 줄이기\n      if (book.quantity === 1) {\n        //한개 이상은 못줄이게 하기\n        return;\n      }\n      book.quantity--;\n    },\n    insertOrRemove(book) {\n      // 배열에 book.book_no가 없으면 해당 값을 추가\n      // 배열에 이미 book.book_no가 있으면 해당 값을 제거하는 filter 적용\n\n      if (book.checked && !this.select.includes(book.book_no)) {\n        this.select.push(book.book_no); // 체크되어 있고, 배열에 없는 경우 추가\n      } else if (!book.checked && this.select.includes(book.book_no)) {\n        this.select = this.select.filter(selectedBookNo => selectedBookNo !== book.book_no); // 체크가 해제되고, 배열에 있는 경우 제거\n      }\n\n      console.log(this.select);\n    },\n    selectAllItems() {\n      for (const book of this.cart) {\n        book.checked = this.selectAll;\n        this.insertOrRemove(book);\n      }\n    },\n    handleChildCheckboxChange() {\n      // 모든 자식 체크박스가 선택되어 있는지 확인합니다.\n      const allChildChecked = this.cart.every(book => book.checked);\n\n      // 부모 체크박스의 상태를 업데이트합니다.\n      this.selectAll = allChildChecked;\n    }\n  },\n  computed: {\n    // 데이터 값이 바뀌면 실행 되는것?\n    getPrice(book) {\n      //버튼으로 수량을 바꾸면 실행\n      return book => book.price * book.quantity; //값 * 수량\n    },\n\n    getPoint(book) {\n      //버튼으로 수량바꾸면 실행\n      const point = book => book.point * book.quantity; //마일리지 * 수량\n      return point;\n    },\n    getTotalPrice() {\n      //선택한 상품들 총합 가격\n      const selectedBooks = this.cart.filter(book => this.select.includes(book.book_no)); //책 정보가 있는 배열에서 체크가 된것만 필터링\n\n      if (selectedBooks.length == 0) {\n        return 0;\n      }\n      const totalPrice = selectedBooks.reduce((total, book) => total + book.price * book.quantity, 0); //선택된것만 값 총합 가져오기\n\n      return totalPrice; //리턴\n    },\n\n    fee() {\n      if (this.getTotalPrice > 15000) {\n        return 0;\n      } else {\n        return 2500;\n      }\n    },\n    getFinalPrice() {\n      //최종 결제 가격 함수\n      if (this.getTotalPrice + this.fee == 2500) {\n        return 0;\n      }\n      return this.getTotalPrice + this.fee;\n    },\n    totalPoint() {\n      //결제 시 얻는 포인트\n      const selectedBooks = this.cart.filter(book => this.select.includes(book.book_no)); //책 정보가 있는 배열에서 체크가 된것만 필터링\n\n      const totalPoint = selectedBooks.reduce((total, book) => total + book.point * book.quantity, 0); //선택된것만 값 총합 가져오기\n\n      return totalPoint;\n    }\n  },\n  mounted() {},\n  watch: {\n    // 자식 체크박스 상태 변경 감지\n    cart: {\n      handler() {\n        this.handleChildCheckboxChange();\n      },\n      deep: true\n    }\n  }\n};","map":{"version":3,"names":["axios","gnbbar","components","data","cart","img","title","price","point","quantity","book_no","select","selectAll","methods","increaseQuantity","book","deleteBook","confirm","filter","i","console","log","choosePay","selectedBooks","includes","length","alert","TP","TP2","thisFee","bookData","forEach","getPrice","getPoint","push","ORDERITEM_BOOKID","ORDERITEM_CNT","ORDERITEM_PRICE","ORDERITEM_POINT","url","method","email","total_pay","total_point","fee","books_info","then","res","status","error","orderId","orderID","window","location","href","catch","decreaseQuantity","insertOrRemove","checked","selectedBookNo","selectAllItems","handleChildCheckboxChange","allChildChecked","every","computed","getTotalPrice","totalPrice","reduce","total","getFinalPrice","totalPoint","mounted","watch","handler","deep"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\cart.vue"],"sourcesContent":["<template>\r\n  <gnbbar />\r\n  <div class=\"container\">\r\n    <div class=\"cart_wrap\">\r\n      <div class=\"cart_header\" style=\"background-color: white\">\r\n        <input\r\n          type=\"checkbox\"\r\n          v-model=\"selectAll\"\r\n          @change=\"selectAllItems\"\r\n          id=\"book_checkbox\"\r\n        /><label for=\"book_checkbox\"></label>\r\n        <h3>&nbsp;장바구니</h3>\r\n      </div>\r\n      <div class=\"cart_float\">\r\n        <div class=\"cart_inside\">\r\n          <ol class=\"cart_list\">\r\n            <span v-if=\"cart.length == 0\" class=\"if_nodata\">\r\n              <div class=\"nodata\"><img src=\"../assets/img/nodata.png\" /></div>\r\n              <br /><br />\r\n              <p>장바구니에 담긴 상품이 없어요</p>\r\n            </span>\r\n            <span v-else-if=\"cart.length >= 1\">\r\n              <li v-for=\"(book, index) in cart\" :key=\"index\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  v-model=\"book.checked\"\r\n                  @change=\"insertOrRemove(book)\"\r\n                  :id=\"'book_checkbox_' + index\"\r\n                />\r\n                <label :for=\"'book_checkbox_' + index\"></label>\r\n                <img class=\"cart_img\" :src=\"book.img\" />\r\n                <span class=\"book_name\">{{ book.title }}</span\r\n                >&nbsp;\r\n                <span class=\"book_price\">{{ book.price }} 원</span>\r\n                <span class=\"book_point\"\r\n                  >적립포인트 &nbsp;&nbsp;&nbsp;{{ getPoint(book) }}</span\r\n                >\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"deleteBook\"\r\n                  @click=\"deleteBook(book)\"\r\n                ></button>\r\n                <div class=\"changeQua\">\r\n                  <div class=\"button\">\r\n                    <button @click=\"decreaseQuantity(book)\">-</button>\r\n                    <span>{{ book.quantity }}</span>\r\n                    <button @click=\"increaseQuantity(book)\">+</button>\r\n                  </div>\r\n                  <br />\r\n                  <p>{{ getPrice(book) }} 원</p>\r\n                </div>\r\n                <p></p>\r\n              </li>\r\n            </span>\r\n          </ol>\r\n          <div class=\"footer\"></div>\r\n        </div>\r\n\r\n        <!-- CSS작업시 컨텐츠를 박스라고 생각하면 이해가 쉬움 \r\n             payment_area라는 최상위 부모박스 > 형제박스(pay_wrap 자식박스, pay_wrap 자식박스)\r\n        -->\r\n        <div class=\"payment_area\">\r\n          <div class=\"pay_wrap\">\r\n            <p class=\"payment_value\">상품금액</p>\r\n            <span class=\"getTotalPrice\">{{ getTotalPrice }} </span>\r\n            <span class=\"unit\">원</span>\r\n          </div>\r\n\r\n          <div class=\"pay_wrap\">\r\n            <div class=\"payment_value\">배송비</div>\r\n            <span class=\"getTotalPrice\">{{ fee }} </span>\r\n            <span class=\"unit\">원</span>\r\n          </div>\r\n\r\n          <br /><br /><br /><br /><br />\r\n          <hr />\r\n          <div class=\"pay_wrap\">\r\n            <div class=\"payment_text\">결제금액</div>\r\n            <div class=\"payment_total\">{{ getFinalPrice }}</div>\r\n            <span class=\"unit\">원</span>\r\n          </div>\r\n          <div class=\"pay_wrap\">\r\n            <div class=\"payment_text\">총 적립 포인트</div>\r\n            <div class=\"payment_point\">{{ totalPoint }}</div>\r\n            <span class=\"unit\">원</span>\r\n          </div>\r\n          <button @click=\"choosePay\" class=\"pay_button\">주문하기</button>\r\n          <!-- <button @click=\"allPay\">전체 결제</button> -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"progress\">\r\n    <span class=\"first\">장바구니</span>\r\n    <span class=\"right\">> 주문/결제> 완료</span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nimport gnbbar from \"../components/gnbBar.vue\";\r\n\r\nexport default {\r\n  components: { gnbbar },\r\n  data() {\r\n    return {\r\n      cart: [\r\n        // 책 데이터 예시\r\n        {\r\n          img: \"https://contents.kyobobook.co.kr/sih/fit-in/458x0/pdt/9791192512365.jpg\",\r\n          title:\r\n            \"엄청나게 긴 책 제목 테스트입니다 아무튼간에 엄청나게 긴 책 제목 테스트입니다 아무튼간에 엄청나게 긴 책 제목 테스트입니다 아무튼간에\",\r\n          price: 9900,\r\n          point: 50,\r\n          quantity: 20,\r\n          book_no: 1,\r\n        },\r\n        {\r\n          img: \"https://contents.kyobobook.co.kr/sih/fit-in/458x0/pdt/9791192512365.jpg\",\r\n          title: \"Book 2\",\r\n          price: 24000,\r\n          point: 30,\r\n          quantity: 1,\r\n          book_no: 2,\r\n        },\r\n        {\r\n          img: \"https://contents.kyobobook.co.kr/sih/fit-in/458x0/pdt/9791192512365.jpg\",\r\n          title: \"Book 2\",\r\n          price: 24000,\r\n          point: 30,\r\n          quantity: 1,\r\n          book_no: 3,\r\n        },\r\n        {\r\n          img: \"https://contents.kyobobook.co.kr/sih/fit-in/458x0/pdt/9791192512365.jpg\",\r\n          title: \"Book 2\",\r\n          price: 24000,\r\n          point: 30,\r\n          quantity: 1,\r\n          book_no: 4,\r\n        },\r\n        {\r\n          img: \"https://contents.kyobobook.co.kr/sih/fit-in/458x0/pdt/9791192512365.jpg\",\r\n          title: \"Book 2\",\r\n          price: 24000,\r\n          point: 30,\r\n          quantity: 1,\r\n          book_no: 5,\r\n        },\r\n        {\r\n          img: \"https://contents.kyobobook.co.kr/sih/fit-in/458x0/pdt/9791192512365.jpg\",\r\n          title: \"Book 2\",\r\n          price: 24000,\r\n          point: 30,\r\n          quantity: 1,\r\n          book_no: 6,\r\n        },\r\n      ],\r\n      select: [],\r\n      selectAll: false,\r\n    };\r\n  },\r\n  methods: {\r\n    increaseQuantity(book) {\r\n      //장바구니 수량 늘리기\r\n\r\n      book.quantity++;\r\n    },\r\n    deleteBook(book) {\r\n      if (confirm(\"상품을 삭제하시겠습니까?\")) {\r\n        this.cart = this.cart.filter((i) => i.book_no !== book.book_no);\r\n        console.log(this.cart);\r\n      } else {\r\n        return;\r\n      }\r\n    },\r\n    choosePay() {\r\n      // 선택된 상품들만 필터링하여 가져옵니다.\r\n      const selectedBooks = this.cart.filter((book) =>\r\n        this.select.includes(book.book_no)\r\n      );\r\n\r\n      if (selectedBooks.length == 0) {\r\n        alert(\"상품을 선택해주세요\");\r\n        return;\r\n      }\r\n\r\n      let TP = 0; //총 결제 금액\r\n      let TP2 = 0; //총 포인트\r\n      let thisFee = 0;\r\n\r\n      let bookData = [];\r\n\r\n      selectedBooks.forEach((book) => {\r\n        TP += this.getPrice(book);\r\n        TP2 += this.getPoint(book);\r\n\r\n        bookData.push({\r\n          ORDERITEM_BOOKID: book.book_no,\r\n          ORDERITEM_CNT: book.quantity,\r\n          ORDERITEM_PRICE: book.price,\r\n          ORDERITEM_POINT: this.getPoint(book),\r\n        });\r\n      });\r\n\r\n      if (TP >= 15000) {\r\n        //결제금액이 15000원이상이면 배송료 0원으로 설정\r\n        thisFee = 0;\r\n      } else if (TP < 15000) {\r\n        thisFee = 2500;\r\n      }\r\n\r\n      axios({\r\n        url: \"http://localhost:3000/cart\",\r\n        method: \"POST\",\r\n        data: {\r\n          email: \"bj3757@naver.com\",\r\n          total_pay: TP,\r\n          total_point: TP2,\r\n          fee: thisFee,\r\n          books_info: bookData,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          if (res.status == 401) {\r\n            console.log(\"에러 발생: \" + res.data.error);\r\n          } else if (res.status == 200) {\r\n            const orderId = res.data.orderID;\r\n            alert(\"결제페이지로 이동합니다\");\r\n            window.location.href = `/pay/${orderId}`;\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    // allPay() {\r\n    //   const allBooks = this.cart; //장바구니에 담긴 책 정보 전부 담아오기\r\n\r\n    //   let TP = 0; //총 결제 금액\r\n    //   let TP2 = 0; //총 포인트\r\n    //   let thisFee = 0;\r\n\r\n    //   let bookData = [];\r\n\r\n    //   // 모든 상품에 대한 결제 정보를 콘솔로 출력합니다.\r\n    //   allBooks.forEach((book) => {\r\n    //     TP += this.getPrice(book);\r\n    //     TP2 += this.getPoint(book);\r\n\r\n    //     bookData.push({\r\n    //       ORDERITEM_BOOKID: book.book_no,\r\n    //       ORDERITEM_CNT: book.quantity,\r\n    //       ORDERITEM_PRICE: book.price,\r\n    //       ORDERITEM_POINT: this.getPoint(book),\r\n    //     });\r\n    //   });\r\n\r\n    //   if (TP >= 15000) { //결제금액이 15000원이상이면 배송료 0원으로 설정\r\n    //     thisFee = 0;\r\n    //   } else if (TP < 15000) {\r\n    //     thisFee = 2500;\r\n    //   }\r\n\r\n    //   axios({\r\n    //     url: \"http://localhost:3000/cart\",\r\n    //     method: \"POST\",\r\n    //     data: {\r\n    //       \"email\": \"bj3757@naver.com\",\r\n    //       \"total_pay\": TP,\r\n    //       \"total_point\": TP2,\r\n    //       \"fee\": thisFee,\r\n    //       \"books_info\": bookData,\r\n    //     },\r\n    //   }).then((res => {\r\n    //     if (res.status == 401) {\r\n    //       console.log(\"에러 발생: \" + res.data.error);\r\n    //     } else if (res.status == 200) {\r\n    //       const orderId = res.data.orderID;\r\n    //       alert('결제페이지로 이동합니다');\r\n    //       window.location.href = `/pay/${orderId}`;\r\n    //     }\r\n    //   })).catch(error => {\r\n    //     console.log(error);\r\n    //   });\r\n    // },\r\n    decreaseQuantity(book) {\r\n      //장바구니 수량 줄이기\r\n      if (book.quantity === 1) {\r\n        //한개 이상은 못줄이게 하기\r\n        return;\r\n      }\r\n      book.quantity--;\r\n    },\r\n    insertOrRemove(book) {\r\n      // 배열에 book.book_no가 없으면 해당 값을 추가\r\n      // 배열에 이미 book.book_no가 있으면 해당 값을 제거하는 filter 적용\r\n\r\n      if (book.checked && !this.select.includes(book.book_no)) {\r\n        this.select.push(book.book_no); // 체크되어 있고, 배열에 없는 경우 추가\r\n      } else if (!book.checked && this.select.includes(book.book_no)) {\r\n        this.select = this.select.filter(\r\n          (selectedBookNo) => selectedBookNo !== book.book_no\r\n        ); // 체크가 해제되고, 배열에 있는 경우 제거\r\n      }\r\n      console.log(this.select);\r\n    },\r\n    selectAllItems() {\r\n      for (const book of this.cart) {\r\n        book.checked = this.selectAll;\r\n        this.insertOrRemove(book);\r\n      }\r\n    },\r\n    handleChildCheckboxChange() {\r\n      // 모든 자식 체크박스가 선택되어 있는지 확인합니다.\r\n      const allChildChecked = this.cart.every((book) => book.checked);\r\n\r\n      // 부모 체크박스의 상태를 업데이트합니다.\r\n      this.selectAll = allChildChecked;\r\n    },\r\n  },\r\n  computed: {\r\n    // 데이터 값이 바뀌면 실행 되는것?\r\n    getPrice(book) {\r\n      //버튼으로 수량을 바꾸면 실행\r\n      return (book) => book.price * book.quantity; //값 * 수량\r\n    },\r\n    getPoint(book) {\r\n      //버튼으로 수량바꾸면 실행\r\n      const point = (book) => book.point * book.quantity; //마일리지 * 수량\r\n      return point;\r\n    },\r\n    getTotalPrice() {\r\n      //선택한 상품들 총합 가격\r\n      const selectedBooks = this.cart.filter((book) =>\r\n        this.select.includes(book.book_no)\r\n      ); //책 정보가 있는 배열에서 체크가 된것만 필터링\r\n\r\n      if (selectedBooks.length == 0) {\r\n        return 0;\r\n      }\r\n\r\n      const totalPrice = selectedBooks.reduce(\r\n        (total, book) => total + book.price * book.quantity,\r\n        0\r\n      ); //선택된것만 값 총합 가져오기\r\n\r\n      return totalPrice; //리턴\r\n    },\r\n    fee() {\r\n      if (this.getTotalPrice > 15000) {\r\n        return 0;\r\n      } else {\r\n        return 2500;\r\n      }\r\n    },\r\n    getFinalPrice() {\r\n      //최종 결제 가격 함수\r\n      if (this.getTotalPrice + this.fee == 2500) {\r\n        return 0;\r\n      }\r\n      return this.getTotalPrice + this.fee;\r\n    },\r\n    totalPoint() {\r\n      //결제 시 얻는 포인트\r\n      const selectedBooks = this.cart.filter((book) =>\r\n        this.select.includes(book.book_no)\r\n      ); //책 정보가 있는 배열에서 체크가 된것만 필터링\r\n\r\n      const totalPoint = selectedBooks.reduce(\r\n        (total, book) => total + book.point * book.quantity,\r\n        0\r\n      ); //선택된것만 값 총합 가져오기\r\n\r\n      return totalPoint;\r\n    },\r\n  },\r\n  mounted() {},\r\n  watch: {\r\n    // 자식 체크박스 상태 변경 감지\r\n    cart: {\r\n      handler() {\r\n        this.handleChildCheckboxChange();\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.cart_img {\r\n  text-align: center;\r\n  max-height: 200px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.footer {\r\n  padding-bottom: 100px;\r\n}\r\n\r\n.cart_header {\r\n  width: 50%;\r\n  font-size: 1.4em;\r\n  font-weight: bolder;\r\n  border-bottom: 2px solid #000000;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-bottom: 20px;\r\n  padding-top: 20px;\r\n  border-radius: 30px 30px 0 0;\r\n  border-top: 1px solid #ccc;\r\n  padding-left: 12px;\r\n}\r\n/* .cart_header h3{\r\n  vertical-align: top;\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n} */\r\n\r\n.container {\r\n  width: 100%;\r\n}\r\n\r\n.cart_wrap {\r\n  width: 100%;\r\n\r\n  margin-top: -1%;\r\n  margin-left: 11%;\r\n  padding-bottom: 5%;\r\n}\r\n\r\n.cart_list li {\r\n  width: 100%;\r\n  height: 250px;\r\n  border-bottom: 2px solid #ccc;\r\n  list-style: none;\r\n  background-color: white;\r\n  padding-left: 10px;\r\n}\r\n\r\n.book_name {\r\n  position: absolute;\r\n  margin-left: 15px;\r\n  margin-top: 20px;\r\n  font-weight: 700;\r\n  font-size: 1.1em;\r\n  width: 450px;\r\n  line-height: 20px;\r\n}\r\n\r\n.book_price {\r\n  position: absolute;\r\n  display: inline-block;\r\n  margin-left: 5px;\r\n  margin-top: 170px;\r\n}\r\n\r\n.book_point {\r\n  margin-left: 5px;\r\n}\r\n\r\n.changeQua {\r\n  float: right;\r\n  text-align: center;\r\n  width: 300px;\r\n  height: 249px;\r\n  border-left: 2px solid #ccc;\r\n}\r\n\r\n.changeQua .button {\r\n  margin-top: 100px;\r\n  margin-left: 80px;\r\n  border: none;\r\n  padding: 3px 15px;\r\n  border-radius: 4px;\r\n  width: 150px;\r\n  height: 40px;\r\n  border: 1px solid #050505;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n  text-align: center;\r\n}\r\n\r\n.changeQua .button button {\r\n  border: none;\r\n  background-color: white;\r\n  cursor: pointer;\r\n  font-size: larger;\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n  width: 30px;\r\n  height: 30px;\r\n  padding: auto;\r\n}\r\n.changeQua span {\r\n  text-align: center;\r\n}\r\n\r\n.progress {\r\n  position: absolute;\r\n  top: 22%;\r\n  right: 15%;\r\n  font-size: 1.4em;\r\n  font-weight: bolder;\r\n}\r\n\r\n.first {\r\n  color: #4e4eff;\r\n}\r\n\r\n.right {\r\n  color: rgb(158, 158, 158);\r\n}\r\n\r\n.cart_float {\r\n  width: 100%; /* 가로100% 공간 사용 */\r\n}\r\n\r\n.cart_inside {\r\n  float: left; /* 화면 왼쪽 배치 */\r\n  width: 50%; /* 가로50% 공간 사용 */\r\n}\r\n\r\n.payment_area {\r\n  right: -20px;\r\n  top: 228px;\r\n  position: fixed;\r\n  width: 20%; /* 가로20% 공간 사용 */\r\n  height: 400px;\r\n  margin-top: 1.2%;\r\n  margin-right: 18%; /* 박스를 오른쪽으로 18%만큼 떨어뜨림(밀어냄) */\r\n  padding: 2% 30px; /* 위아래 1% 양옆 10px*/\r\n  border-radius: 5%;\r\n  /* box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2); */\r\n  border: 1px solid #ccc;\r\n  background-color: white;\r\n}\r\n\r\n/* 상품금액,배송비 */\r\n.pay_wrap {\r\n  margin-top: 5%;\r\n  display: flex; /* 세로배치를 가로배치로 */\r\n  width: 100%; /* 장바구니박스 가로100% 공간 사용 */\r\n  font-size: large;\r\n  font-weight: bolder;\r\n}\r\n/* 금액(숫자) */\r\n.payment_value {\r\n  width: 70%; /* 그중에 70% 사용 */\r\n}\r\n/* 원 */\r\n.getTotalPrice {\r\n  width: 20%; /* 그중에 20% 사용 */\r\n  text-align: right; /* 텍스트 오른쪽 정렬(텍스트 길이가 길어지면 왼쪽으로 늘어남) */\r\n}\r\n\r\n.unit {\r\n  width: 10%;\r\n  font-size: 16px;\r\n  padding-left: 1%;\r\n  text-align: center;\r\n}\r\n/* .checkAll {\r\n  position: relative;\r\n  top: 20px;\r\n} */\r\n.payment_total {\r\n  width: 20%; /* 그중에 20% 사용 */\r\n  text-align: right; /* 텍스트 오른쪽 정렬(텍스트 길이가 길어지면 왼쪽으로 늘어남) */\r\n  color: #4e4eff;\r\n}\r\n.payment_text {\r\n  width: 70%;\r\n}\r\n.payment_point {\r\n  width: 20%; /* 그중에 20% 사용 */\r\n  text-align: right; /* 텍스트 오른쪽 정렬(텍스트 길이가 길어지면 왼쪽으로 늘어남) */\r\n}\r\n.pay_button {\r\n  position: relative;\r\n  width: 70%;\r\n  height: 10%;\r\n  top: 10%;\r\n  right: 30%;\r\n  color: white;\r\n  background-color: #4e4eff;\r\n  border: none;\r\n  border-radius: 20px;\r\n  font-weight: bolder;\r\n  font-size: large;\r\n  cursor: pointer;\r\n}\r\n.deleteBook {\r\n  color: grey;\r\n  background-color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n  width: 18px;\r\n  height: 18px;\r\n  position: absolute;\r\n  left: 43.5%;\r\n  margin-top: 11%;\r\n  background-image: url(../assets/img/btn_delete_ord@2x.png);\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n}\r\ninput[type=\"checkbox\"] {\r\n  display: none;\r\n}\r\n\r\ninput[type=\"checkbox\"] + label {\r\n  display: inline-block;\r\n  width: 22px;\r\n  height: 22px;\r\n  border: 0.5px solid #707070;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  margin-right: 2%;\r\n  bottom: 70%;\r\n  transition: background-color 0.3s, border-color 0.3s;\r\n}\r\n\r\ninput[id^=\"book_checkbox\"]:checked + label::after {\r\n  content: \"\";\r\n  width: 22px;\r\n  height: 22px;\r\n  text-align: center;\r\n  position: absolute;\r\n  left: -2px;\r\n  top: -3px;\r\n  border-radius: 50%;\r\n  background-image: url(\"../assets/img/ico_checkbox_active@2x.png\");\r\n  background-size: 10px 7px;\r\n  background-position: center 8px;\r\n  background-repeat: no-repeat;\r\n  background-color: #4e4eff;\r\n  border: 2px solid #000000;\r\n  transition: background-color 0.3s, border-color 0.3s, content 0.3s;\r\n}\r\n.if_nodata {\r\n  text-align: center;\r\n  padding: 10px;\r\n  /* 필요한 경우 다른 스타일 속성을 추가로 적용할 수 있습니다 */\r\n}\r\n.nodata {\r\n  margin-top: 15%;\r\n}\r\n</style>\r\n\r\n<style>\r\nbody {\r\n  background-color: #fafafa;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}