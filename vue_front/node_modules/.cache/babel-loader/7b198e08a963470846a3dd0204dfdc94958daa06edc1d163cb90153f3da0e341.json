{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\naxios.defaults.baseURL = \"http://localhost:3000\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\nimport GnbBar from \"../components/gnbBar.vue\";\nimport Floating from \"../components/floating.vue\";\nimport { ref, reactive, onMounted, onUnmounted } from \"vue\";\nimport { isLogindDisplay } from \"../mixins/main.js\";\nexport default {\n  mixins: [isLogindDisplay],\n  components: {\n    GnbBar,\n    Floating\n  },\n  data() {\n    return {\n      images: [require(\"../assets/img/book2.jpg\"), require(\"../assets/img/book1.jpg\"), require(\"../assets/img/book3.jpg\")],\n      email: \"\",\n      name: \"\",\n      // 이미지슬라이드\n      currentIndex: 0,\n      slidesReady: false,\n      // 슬라이드 준비 여부 상태 추가\n      transitionDuration: \"0.3s\",\n      // 이미지 이동 애니메이션 시간\n      //추천책 데이터\n      recBook: [],\n      bestBook: [],\n      newestBook: [],\n      // 플로팅 데이터\n      floatingState: \"recent\"\n    };\n  },\n  setup() {\n    const state = reactive({\n      showTopButton: false\n    });\n\n    // 스크롤 이벤트 핸들러\n    const handleScroll = () => {\n      const scrollTop = window.scrollY;\n\n      // 스크롤이 일정 위치 이상으로 내려갔을 때 Top 버튼 표시\n      state.showTopButton = scrollTop >= 300;\n    };\n\n    // Top 버튼 클릭 시 스크롤을 위로 부드럽게 이동\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n    const scrollToTop = () => {\n      const startTime = performance.now();\n      const duration = 500;\n      const startTop = window.scrollY;\n      const scrollStep = timestamp => {\n        const currentTime = timestamp || performance.now();\n        const elapsed = currentTime - startTime;\n        const ease = Math.easeInOutQuad(elapsed, startTop, -startTop, duration);\n        window.scrollTo(0, ease);\n        if (elapsed < duration) {\n          window.requestAnimationFrame(scrollStep);\n        }\n      };\n      window.requestAnimationFrame(scrollStep);\n    };\n    // 스크롤 이벤트 리스너 등록\n    onMounted(() => {\n      window.addEventListener(\"scroll\", handleScroll);\n    });\n    // 컴포넌트 제거 시 스크롤 이벤트 리스너 해제\n    onUnmounted(() => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    });\n    return {\n      state,\n      scrollToTop\n    };\n  },\n  mounted() {\n    this.email = localStorage.getItem(\"userID\");\n    this.name = localStorage.getItem(\"userNick\");\n    this.checkUserSurvey();\n    this.getRecBook();\n    this.getBestBook();\n    this.getNewestBook();\n    // 이미지 슬라이드가 렌더링되고 준비가 완료되면 slidesReady를 true로 설정\n    this.slidesReady = true;\n    this.visit(); //방문시 작동\n  },\n\n  methods: {\n    visit() {\n      if (sessionStorage.getItem(\"see\")) {\n        console.log(\"재방문\");\n        return;\n      }\n      axios({\n        url: \"/visit\",\n        method: \"POST\",\n        data: {\n          errtoday: new Date().toLocaleDateString()\n        }\n      }).then(res => {\n        sessionStorage.setItem(\"see\", \"yes\");\n        console.log(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    // 이전 슬라이드로 이동하는 메서드 (이미지가 오른쪽으로 넘어가는 애니메이션 추가)\n    prevSlide() {\n      if (this.slidesReady) {\n        if (this.currentIndex > 0) {\n          this.currentIndex--;\n        } else {\n          this.currentIndex = this.images.length - 1;\n        }\n        this.transitionDuration = \"0.3s\";\n      }\n    },\n    // 다음 슬라이드로 이동하는 메서드 (이미지가 왼쪽으로 넘어가는 애니메이션 추가)\n    nextSlide() {\n      if (this.slidesReady) {\n        if (this.currentIndex < this.images.length - 1) {\n          this.currentIndex++;\n        } else {\n          this.currentIndex = 0;\n        }\n        this.transitionDuration = \"0.3s\";\n      }\n    },\n    goToSlide(index) {\n      this.currentIndex = index;\n      this.transitionDuration = \"0.3s\";\n    },\n    async getRecBook() {\n      await axios({\n        url: \"http://localhost:3000/main/getRecBook\",\n        method: \"POST\",\n        data: {\n          email: this.email\n        }\n      }).then(res => {\n        for (var i in res.data) {\n          this.recBook.push(res.data[i]);\n        }\n        console.log(this.recBook);\n      }).catch(err => {\n        alert(err);\n      });\n    },\n    async getBestBook() {\n      await axios({\n        url: \"http://localhost:3000/main/getBestBook\",\n        method: \"POST\",\n        data: {}\n      }).then(res => {\n        for (var i in res.data) {\n          this.bestBook.push(res.data[i]);\n        }\n        console.log(this.bestBook);\n      }).catch(err => {\n        alert(err);\n      });\n    },\n    async getNewestBook() {\n      await axios({\n        url: \"http://localhost:3000/main/getNewestBook\",\n        method: \"POST\",\n        data: {}\n      }).then(res => {\n        for (var i in res.data) {\n          this.newestBook.push(res.data[i]);\n        }\n        console.log(this.newestBook);\n      }).catch(err => {\n        alert(err);\n      });\n    },\n    async getRecentBook() {\n      await axios({\n        url: \"http://localhost:3000/floating/recentbook\",\n        method: \"GET\",\n        data: {}\n      }).then(res => {\n        console.log(res);\n      }).catch(err => {\n        alert(err);\n      });\n    },\n    async checkUserSurvey() {\n      await axios({\n        url: \"http://localhost:3000/sur/check\",\n        method: \"POST\",\n        data: {\n          email: this.email\n        }\n      }).then(res => {\n        console.log(res.data);\n        if (res.data == \"설문조사 안한 유저\") {\n          window.location.href = \"/survey\";\n        }\n      }).catch(err => {\n        alert(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","defaults","baseURL","headers","post","GnbBar","Floating","ref","reactive","onMounted","onUnmounted","isLogindDisplay","mixins","components","data","images","require","email","name","currentIndex","slidesReady","transitionDuration","recBook","bestBook","newestBook","floatingState","setup","state","showTopButton","handleScroll","scrollTop","window","scrollY","Math","easeInOutQuad","t","b","c","d","scrollToTop","startTime","performance","now","duration","startTop","scrollStep","timestamp","currentTime","elapsed","ease","scrollTo","requestAnimationFrame","addEventListener","removeEventListener","mounted","localStorage","getItem","checkUserSurvey","getRecBook","getBestBook","getNewestBook","visit","methods","sessionStorage","console","log","url","method","errtoday","Date","toLocaleDateString","then","res","setItem","catch","err","prevSlide","length","nextSlide","goToSlide","index","i","push","alert","getRecentBook","location","href"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\Main.vue"],"sourcesContent":["<style src=\"../assets/css/Main.css\"></style>\r\n\r\n<template>\r\n    <GnbBar />\r\n\r\n    <div ref=\"content\" class=\"main content\">\r\n        <!-- 이미지슬라이더 -->\r\n        <div class=\"image-slider\">\r\n            <div class=\"slider-wrapper\" v-if=\"slidesReady\">\r\n                <div\r\n                    class=\"slider\"\r\n                    :style=\"{\r\n                        transform: `translateX(-${currentIndex * 100}%)`,\r\n                        transition: transitionDuration,\r\n                    }\"\r\n                >\r\n                    <div v-for=\"(image, index) in images\" :key=\"index\" class=\"slide\">\r\n                        <img :src=\"image\" alt=\"Slide Image\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"controls\">\r\n                    <button @click=\"prevSlide\" class=\"prev-btn\">&lt;</button>\r\n                    <button @click=\"nextSlide\" class=\"next-btn\">&gt;</button>\r\n                </div>\r\n                <div class=\"dots\">\r\n                    <span\r\n                        v-for=\"(image, index) in images\"\r\n                        :key=\"index\"\r\n                        @click=\"goToSlide(index)\"\r\n                        :class=\"{ active: index === currentIndex }\"\r\n                        class=\"dot\"\r\n                    ></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- 책추천-->\r\n        <div v-if=\"logined == false\" class=\"main_container_blur\">\r\n            <h2>로그인하시면 취향에 맞는 책을 보여드려요</h2>\r\n            <a href=\"/login\">로그인하고 책 추천받기</a>\r\n        </div>\r\n        <div class=\"main_container\">\r\n            <h2 class=\"recommend_title\">\r\n                <p v-if=\"logined == true\">\r\n                    <span class=\"recommend_username\">{{ name }}</span> 님에게 추천하는 책이예요\r\n                </p>\r\n                <p v-else-if=\"logined == false\"><span class=\"recommend_username\">사용자</span> 님에게 추천하는 책이예요</p>\r\n            </h2>\r\n            <div ref=\"mainBlur\" class=\"main_item_wrap blur\">\r\n                <!-- 로그인시 추천출력 -->\r\n                <div v-if=\"logined == true\" class=\"recommend_item\" v-for=\"(item, i) in recBook\" :key=\"i\">\r\n                    <a :href=\"`/detail/${item.BOOK_ID}`\"><img class=\"main_item_img\" :src=\"item.BOOK_COVER\" alt=\"\" /></a>\r\n                    <div class=\"main_item_info\">\r\n                        <h5 class=\"main_item_title\">\r\n                            <a :href=\"`/detail/${item.BOOK_ID}`\">{{ item.BOOK_TITLE }}</a>\r\n                        </h5>\r\n                        <span class=\"main_item_writer\">{{ item.BOOK_AUTHOR }}</span>\r\n                        •\r\n                        <span class=\"main_item_publisher\">{{ item.BOOK_PUBLISHER }}</span>\r\n                    </div>\r\n                </div>\r\n                <!-- 비로그인시 베스트출력 -->\r\n                <div v-else-if=\"logined == false\" class=\"recommend_item\" v-for=\"(item, i) in bestBook\">\r\n                    <img class=\"main_item_img\" :src=\"item.BOOK_COVER\" alt=\"\" />\r\n                    <div class=\"main_item_info\">\r\n                        <h5 class=\"main_item_title\">{{ item.BOOK_TITLE }}</h5>\r\n                        <span class=\"main_item_writer\">{{ item.BOOK_AUTHOR }}</span>\r\n                        •\r\n                        <span class=\"main_item_publisher\">{{ item.BOOK_PUBLISHER }}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- 베스트추천-->\r\n        <div class=\"main_container\">\r\n            <div class=\"main_contents_header\">\r\n                <h2 class=\"main_title\">베스트</h2>\r\n                <a href=\"/best\">더보기 ＋</a>\r\n            </div>\r\n            <div class=\"main_item_wrap\">\r\n                <div class=\"main_contents_item\" v-for=\"(item, i) in bestBook\" :key=\"i\">\r\n                    <a :href=\"`/detail/${item.BOOK_ID}`\"><img class=\"main_item_img2\" :src=\"item.BOOK_COVER\" alt=\"\" /></a>\r\n                    <div class=\"main_item_info\">\r\n                        <h5 class=\"main_item_title\">\r\n                            <a :href=\"`/detail/${item.BOOK_ID}`\">{{ item.BOOK_TITLE }}</a>\r\n                        </h5>\r\n                        <span class=\"main_item_writer\">{{ item.BOOK_AUTHOR }}</span>\r\n                        •\r\n                        <span class=\"main_item_publisher\">{{ item.BOOK_PUBLISHER }}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- 신상품추천-->\r\n        <div class=\"main_container\">\r\n            <div class=\"main_contents_header\">\r\n                <h2 class=\"main_title\">신상품</h2>\r\n                <a href=\"/new\">더보기 ＋</a>\r\n            </div>\r\n            <div class=\"main_item_wrap\">\r\n                <div class=\"main_contents_item\" v-for=\"(item, i) in newestBook\" :key=\"i\">\r\n                    <a :href=\"`/detail/${item.BOOK_ID}`\"><img class=\"main_item_img2\" :src=\"item.BOOK_COVER\" alt=\"\" /></a>\r\n                    <div class=\"main_item_info\">\r\n                        <h5 class=\"main_item_title\">\r\n                            <a :href=\"`/detail/${item.BOOK_ID}`\">{{ item.BOOK_TITLE }}</a>\r\n                        </h5>\r\n                        <span class=\"main_item_writer\">{{ item.BOOK_AUTHOR }}</span>\r\n                        •\r\n                        <span class=\"main_item_publisher\">{{ item.BOOK_PUBLISHER }}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- 이벤트배너-->\r\n        <div class=\"main_event\">\r\n            <img class=\"main_event_img\" src=\"../assets/img/event1.jpg\" alt=\"\" />\r\n        </div>\r\n\r\n        <!-- 굿즈-->\r\n        <div class=\"main_container\">\r\n            <div class=\"main_contents_header\">\r\n                <h2 class=\"main_title\">굿즈</h2>\r\n                <a href=\"/goods\">더보기 ＋</a>\r\n            </div>\r\n            <div class=\"main_item_wrap\">\r\n                <div class=\"recommend_item\" v-for=\"i in 4\">\r\n                    <img class=\"goods_img\" src=\"../assets/img/goods1.png\" alt=\"\" />\r\n                    <div class=\"goods_ball\">여긴뭘까</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- 플로팅-->\r\n        <Floating />\r\n    </div>\r\n\r\n    <!-- toTop -->\r\n    <div v-show=\"state.showTopButton\" @click=\"scrollToTop\" class=\"scroll_top_btn\">\r\n        <div>\r\n            <span>TOP</span>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nimport GnbBar from \"../components/gnbBar.vue\";\r\nimport Floating from \"../components/floating.vue\";\r\nimport { ref, reactive, onMounted, onUnmounted } from \"vue\";\r\nimport { isLogindDisplay } from \"../mixins/main.js\";\r\n\r\nexport default {\r\n    mixins: [isLogindDisplay],\r\n    components: { GnbBar, Floating },\r\n    data() {\r\n        return {\r\n            images: [require(\"../assets/img/book2.jpg\"), require(\"../assets/img/book1.jpg\"), require(\"../assets/img/book3.jpg\")],\r\n            email: \"\",\r\n            name: \"\",\r\n            // 이미지슬라이드\r\n            currentIndex: 0,\r\n            slidesReady: false, // 슬라이드 준비 여부 상태 추가\r\n            transitionDuration: \"0.3s\", // 이미지 이동 애니메이션 시간\r\n            //추천책 데이터\r\n            recBook: [],\r\n            bestBook: [],\r\n            newestBook: [],\r\n            // 플로팅 데이터\r\n            floatingState: \"recent\",\r\n        };\r\n    },\r\n\r\n    setup() {\r\n        const state = reactive({\r\n            showTopButton: false,\r\n        });\r\n\r\n        // 스크롤 이벤트 핸들러\r\n        const handleScroll = () => {\r\n            const scrollTop = window.scrollY;\r\n\r\n            // 스크롤이 일정 위치 이상으로 내려갔을 때 Top 버튼 표시\r\n            state.showTopButton = scrollTop >= 300;\r\n        };\r\n\r\n        // Top 버튼 클릭 시 스크롤을 위로 부드럽게 이동\r\n        Math.easeInOutQuad = function (t, b, c, d) {\r\n            t /= d / 2;\r\n            if (t < 1) return (c / 2) * t * t + b;\r\n            t--;\r\n            return (-c / 2) * (t * (t - 2) - 1) + b;\r\n        };\r\n\r\n        const scrollToTop = () => {\r\n            const startTime = performance.now();\r\n            const duration = 500;\r\n            const startTop = window.scrollY;\r\n\r\n            const scrollStep = (timestamp) => {\r\n                const currentTime = timestamp || performance.now();\r\n                const elapsed = currentTime - startTime;\r\n                const ease = Math.easeInOutQuad(elapsed, startTop, -startTop, duration);\r\n\r\n                window.scrollTo(0, ease);\r\n\r\n                if (elapsed < duration) {\r\n                    window.requestAnimationFrame(scrollStep);\r\n                }\r\n            };\r\n            window.requestAnimationFrame(scrollStep);\r\n        };\r\n        // 스크롤 이벤트 리스너 등록\r\n        onMounted(() => {\r\n            window.addEventListener(\"scroll\", handleScroll);\r\n        });\r\n        // 컴포넌트 제거 시 스크롤 이벤트 리스너 해제\r\n        onUnmounted(() => {\r\n            window.removeEventListener(\"scroll\", handleScroll);\r\n        });\r\n        return {\r\n            state,\r\n            scrollToTop,\r\n        };\r\n    },\r\n    mounted() {\r\n        this.email = localStorage.getItem(\"userID\");\r\n        this.name = localStorage.getItem(\"userNick\");\r\n        this.checkUserSurvey();\r\n        this.getRecBook();\r\n        this.getBestBook();\r\n        this.getNewestBook();\r\n        // 이미지 슬라이드가 렌더링되고 준비가 완료되면 slidesReady를 true로 설정\r\n        this.slidesReady = true;\r\n        this.visit(); //방문시 작동\r\n    },\r\n    methods: {\r\n        visit() {\r\n            if (sessionStorage.getItem(\"see\")) {\r\n                console.log(\"재방문\");\r\n                return;\r\n            }\r\n            axios({\r\n                url: \"/visit\",\r\n                method: \"POST\",\r\n                data: { errtoday: new Date().toLocaleDateString() },\r\n            })\r\n                .then((res) => {\r\n                    sessionStorage.setItem(\"see\", \"yes\");\r\n                    console.log(res.data);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        },\r\n        // 이전 슬라이드로 이동하는 메서드 (이미지가 오른쪽으로 넘어가는 애니메이션 추가)\r\n        prevSlide() {\r\n            if (this.slidesReady) {\r\n                if (this.currentIndex > 0) {\r\n                    this.currentIndex--;\r\n                } else {\r\n                    this.currentIndex = this.images.length - 1;\r\n                }\r\n                this.transitionDuration = \"0.3s\";\r\n            }\r\n        },\r\n        // 다음 슬라이드로 이동하는 메서드 (이미지가 왼쪽으로 넘어가는 애니메이션 추가)\r\n        nextSlide() {\r\n            if (this.slidesReady) {\r\n                if (this.currentIndex < this.images.length - 1) {\r\n                    this.currentIndex++;\r\n                } else {\r\n                    this.currentIndex = 0;\r\n                }\r\n                this.transitionDuration = \"0.3s\";\r\n            }\r\n        },\r\n        goToSlide(index) {\r\n            this.currentIndex = index;\r\n            this.transitionDuration = \"0.3s\";\r\n        },\r\n        async getRecBook() {\r\n            await axios({\r\n                url: \"http://localhost:3000/main/getRecBook\",\r\n                method: \"POST\",\r\n                data: {\r\n                    email: this.email,\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    for (var i in res.data) {\r\n                        this.recBook.push(res.data[i]);\r\n                    }\r\n                    console.log(this.recBook);\r\n                })\r\n                .catch((err) => {\r\n                    alert(err);\r\n                });\r\n        },\r\n        async getBestBook() {\r\n            await axios({\r\n                url: \"http://localhost:3000/main/getBestBook\",\r\n                method: \"POST\",\r\n                data: {},\r\n            })\r\n                .then((res) => {\r\n                    for (var i in res.data) {\r\n                        this.bestBook.push(res.data[i]);\r\n                    }\r\n                    console.log(this.bestBook);\r\n                })\r\n                .catch((err) => {\r\n                    alert(err);\r\n                });\r\n        },\r\n        async getNewestBook() {\r\n            await axios({\r\n                url: \"http://localhost:3000/main/getNewestBook\",\r\n                method: \"POST\",\r\n                data: {},\r\n            })\r\n                .then((res) => {\r\n                    for (var i in res.data) {\r\n                        this.newestBook.push(res.data[i]);\r\n                    }\r\n                    console.log(this.newestBook);\r\n                })\r\n                .catch((err) => {\r\n                    alert(err);\r\n                });\r\n        },\r\n        async getRecentBook() {\r\n            await axios({\r\n                url: \"http://localhost:3000/floating/recentbook\",\r\n                method: \"GET\",\r\n                data: {},\r\n            })\r\n                .then((res) => {\r\n                    console.log(res);\r\n                })\r\n                .catch((err) => {\r\n                    alert(err);\r\n                });\r\n        },\r\n        async checkUserSurvey() {\r\n            await axios({\r\n                url: \"http://localhost:3000/sur/check\",\r\n                method: \"POST\",\r\n                data: {\r\n                    email: this.email,\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    if (res.data == \"설문조사 안한 유저\") {\r\n                        window.location.href = \"/survey\";\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    alert(err);\r\n                });\r\n        },\r\n    },\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}