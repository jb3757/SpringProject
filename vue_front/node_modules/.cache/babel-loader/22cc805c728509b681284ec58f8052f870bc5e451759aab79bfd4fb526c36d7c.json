{"ast":null,"code":"import { createRouter, createWebHistory } from \"vue-router\";\nimport Main from \"../views/Main.vue\";\nimport Login from \"../views/Login.vue\";\nimport NaverLogin from \"../views/NaverLogin.vue\";\nimport Join from \"../views/Join.vue\";\nimport Survey from \"../views/survey.vue\";\nimport RecommendList from \"../views/recommendList.vue\";\nimport SearchList from \"../views/searchList.vue\";\nimport BestList from \"../views/bestList.vue\";\nimport NewList from \"../views/newList.vue\";\nimport bookDetail from \"../views/bookDetail.vue\";\nimport Goods from \"../views/goods.vue\";\nimport booktestPage from \"../views/bookTest.vue\";\nimport cart from \"../views/cart.vue\";\nimport resultpage from \"../views/paymentResult.vue\";\nimport bookInsert from \"../views/bookInsert.vue\";\nimport pay from \"../views/pay.vue\";\nimport qnaList from \"../views/qnaList.vue\";\nimport qnaWrite from \"../views/qnaWrite.vue\";\nimport qnaEdit from \"../views/qnaEdit.vue\";\nimport eventPage from \"../views/event.vue\";\nimport roulette from \"../views/roulette.vue\";\nimport attendance from \"../views/attendance.vue\";\nimport axios from \"axios\";\nconst requireLogin = () => (to, from, next) => {\n  //로그인안하고 접근하려했을때 실행할 함수?\n  if (localStorage.getItem(\"userID\") !== null) {\n    //localStorage에 데이터 있으면\n    return next(); //접근가능\n  }\n\n  next(\"/login\"); //localStorage에 데이터 없으면 로그인창으로 리다이렉트\n};\n\nconst requireSurvey = () => (to, from, next) => {\n  if (!localStorage.getItem(\"userID\")) {\n    return;\n  }\n  axios({\n    url: \"http://localhost:3000/sur/check\",\n    method: \"POST\",\n    data: {\n      email: localStorage.getItem(\"userID\")\n    }\n  }).then(res => {\n    if (res.data == \"설문조사 안한 유저\") {\n      next(\"/survey\");\n    } else {\n      return next();\n    }\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\n// beforeEnter: requireLogin(),  <<로그인 한사람만 들어갈 수 있는 페이지 component아래에 붙여넣으면됨\nconst routes = [{\n  path: \"/\",\n  name: \"Main\",\n  component: Main,\n  beforEnter: requireSurvey()\n}, {\n  path: \"/login\",\n  name: \"Login\",\n  component: Login\n}, {\n  path: \"/naverlogin\",\n  name: \"naverlogin\",\n  component: NaverLogin\n}, {\n  path: \"/join\",\n  name: \"Join\",\n  component: Join\n}, {\n  path: \"/survey\",\n  name: \"Survey\",\n  component: Survey\n}, {\n  path: \"/test\",\n  name: \"testAPIPage\",\n  component: booktestPage\n},\n//---책리스트-------------------------------------------------\n{\n  path: \"/recommendlist\",\n  name: \"RecommendList\",\n  component: RecommendList\n}, {\n  path: \"/search\",\n  name: \"SearchList\",\n  component: SearchList\n}, {\n  path: \"/best\",\n  name: \"BestList\",\n  component: BestList\n}, {\n  path: \"/new\",\n  name: \"NewList\",\n  component: NewList\n}, {\n  path: \"/detail/:bookNum\",\n  name: \"bookDetail\",\n  component: bookDetail\n}, {\n  path: \"/goods\",\n  name: \"Goods\",\n  component: Goods\n},\n//-------------------------------------------------------------\n//장바구니 - 결제 - 결제완료\n{\n  path: \"/cart\",\n  name: \"cartPage\",\n  component: cart\n}, {\n  path: \"/pay\",\n  name: \"paymentPage\",\n  component: pay\n}, {\n  path: \"/result/:orderNum\",\n  name: \"resultpage\",\n  component: resultpage\n},\n//-------------------------------------------------------------\n//QNA\n{\n  path: \"/qna\",\n  name: \"qnaList\",\n  component: qnaList\n}, {\n  path: \"/qnaWrite\",\n  name: \"qnaWrite\",\n  component: qnaWrite\n}, {\n  path: \"/qnaEdit\",\n  name: \"qnaEdit\",\n  component: qnaEdit\n},\n//-------------------------------------------------------------\n//룰렛, 쿠폰주는 화면\n{\n  path: \"/event\",\n  name: \"eventPage\",\n  component: eventPage\n}, {\n  path: \"/roulette\",\n  name: \"roulette\",\n  component: roulette\n},\n//-------------------------------------------------------------\n//관리자페이지\n{\n  path: \"/bookinsert\",\n  name: \"bookInsert\",\n  component: bookInsert\n},\n//-------------------------------------------------------------\n//출석체크페이지\n{\n  path: \"/attendance\",\n  name: \"attendanceEventPage\",\n  component: attendance\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n  scrollBehavior() {\n    return {\n      top: 0\n    };\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Main","Login","NaverLogin","Join","Survey","RecommendList","SearchList","BestList","NewList","bookDetail","Goods","booktestPage","cart","resultpage","bookInsert","pay","qnaList","qnaWrite","qnaEdit","eventPage","roulette","attendance","axios","requireLogin","to","from","next","localStorage","getItem","requireSurvey","url","method","data","email","then","res","catch","err","console","log","routes","path","name","component","beforEnter","router","history","process","env","BASE_URL","scrollBehavior","top"],"sources":["C:/Users/Lim/Desktop/BOOK_0728/MOONMOON/vue_front/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from \"vue-router\";\r\nimport Main from \"../views/Main.vue\";\r\nimport Login from \"../views/Login.vue\";\r\nimport NaverLogin from \"../views/NaverLogin.vue\";\r\nimport Join from \"../views/Join.vue\";\r\nimport Survey from \"../views/survey.vue\";\r\n\r\nimport RecommendList from \"../views/recommendList.vue\";\r\nimport SearchList from \"../views/searchList.vue\";\r\nimport BestList from \"../views/bestList.vue\";\r\nimport NewList from \"../views/newList.vue\";\r\nimport bookDetail from \"../views/bookDetail.vue\";\r\nimport Goods from \"../views/goods.vue\";\r\n\r\nimport booktestPage from \"../views/bookTest.vue\";\r\nimport cart from \"../views/cart.vue\";\r\nimport resultpage from \"../views/paymentResult.vue\";\r\nimport bookInsert from \"../views/bookInsert.vue\";\r\nimport pay from \"../views/pay.vue\";\r\n\r\nimport qnaList from \"../views/qnaList.vue\";\r\nimport qnaWrite from \"../views/qnaWrite.vue\";\r\nimport qnaEdit from \"../views/qnaEdit.vue\";\r\nimport eventPage from \"../views/event.vue\";\r\nimport roulette from \"../views/roulette.vue\";\r\nimport attendance from \"../views/attendance.vue\";\r\nimport axios from \"axios\";\r\n\r\nconst requireLogin = () => (to, from, next) => {\r\n  //로그인안하고 접근하려했을때 실행할 함수?\r\n  if (localStorage.getItem(\"userID\") !== null) {\r\n    //localStorage에 데이터 있으면\r\n    return next(); //접근가능\r\n  }\r\n  next(\"/login\"); //localStorage에 데이터 없으면 로그인창으로 리다이렉트\r\n};\r\n\r\nconst requireSurvey = () => (to, from, next) => {\r\n  if (!localStorage.getItem(\"userID\")) {\r\n    return;\r\n  }\r\n  axios({\r\n    url: \"http://localhost:3000/sur/check\",\r\n    method: \"POST\",\r\n    data: { email: localStorage.getItem(\"userID\") },\r\n  })\r\n    .then((res) => {\r\n      if (res.data == \"설문조사 안한 유저\") {\r\n        next(\"/survey\");\r\n      } else {\r\n        return next();\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n// beforeEnter: requireLogin(),  <<로그인 한사람만 들어갈 수 있는 페이지 component아래에 붙여넣으면됨\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    name: \"Main\",\r\n    component: Main,\r\n    beforEnter: requireSurvey(),\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    name: \"Login\",\r\n    component: Login,\r\n  },\r\n  {\r\n    path: \"/naverlogin\",\r\n    name: \"naverlogin\",\r\n    component: NaverLogin,\r\n  },\r\n  {\r\n    path: \"/join\",\r\n    name: \"Join\",\r\n    component: Join,\r\n  },\r\n  {\r\n    path: \"/survey\",\r\n    name: \"Survey\",\r\n    component: Survey,\r\n  },\r\n  {\r\n    path: \"/test\",\r\n    name: \"testAPIPage\",\r\n    component: booktestPage,\r\n  },\r\n  //---책리스트-------------------------------------------------\r\n  {\r\n    path: \"/recommendlist\",\r\n    name: \"RecommendList\",\r\n    component: RecommendList,\r\n  },\r\n  {\r\n    path: \"/search\",\r\n    name: \"SearchList\",\r\n    component: SearchList,\r\n  },\r\n  {\r\n    path: \"/best\",\r\n    name: \"BestList\",\r\n    component: BestList,\r\n  },\r\n  {\r\n    path: \"/new\",\r\n    name: \"NewList\",\r\n    component: NewList,\r\n  },\r\n  {\r\n    path: \"/detail/:bookNum\",\r\n    name: \"bookDetail\",\r\n    component: bookDetail,\r\n  },\r\n  {\r\n    path: \"/goods\",\r\n    name: \"Goods\",\r\n    component: Goods,\r\n  },\r\n  //-------------------------------------------------------------\r\n  //장바구니 - 결제 - 결제완료\r\n  {\r\n    path: \"/cart\",\r\n    name: \"cartPage\",\r\n    component: cart,\r\n  },\r\n  {\r\n    path: \"/pay\",\r\n    name: \"paymentPage\",\r\n    component: pay,\r\n  },\r\n  {\r\n    path: \"/result/:orderNum\",\r\n    name: \"resultpage\",\r\n    component: resultpage,\r\n  },\r\n  //-------------------------------------------------------------\r\n  //QNA\r\n  {\r\n    path: \"/qna\",\r\n    name: \"qnaList\",\r\n    component: qnaList,\r\n  },\r\n  {\r\n    path: \"/qnaWrite\",\r\n    name: \"qnaWrite\",\r\n    component: qnaWrite,\r\n  },\r\n  {\r\n    path: \"/qnaEdit\",\r\n    name: \"qnaEdit\",\r\n    component: qnaEdit,\r\n  },\r\n  //-------------------------------------------------------------\r\n  //룰렛, 쿠폰주는 화면\r\n  {\r\n    path: \"/event\",\r\n    name: \"eventPage\",\r\n    component: eventPage,\r\n  },\r\n  {\r\n    path: \"/roulette\",\r\n    name: \"roulette\",\r\n    component: roulette,\r\n  },\r\n  //-------------------------------------------------------------\r\n  //관리자페이지\r\n  {\r\n    path: \"/bookinsert\",\r\n    name: \"bookInsert\",\r\n    component: bookInsert,\r\n  },\r\n  //-------------------------------------------------------------\r\n  //출석체크페이지\r\n  {\r\n    path: \"/attendance\",\r\n    name: \"attendanceEventPage\",\r\n    component: attendance,\r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes,\r\n  scrollBehavior() {\r\n    return { top: 0 };\r\n  },\r\n});\r\nexport default router;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}