{"ast":null,"code":"import axios from \"axios\";\naxios.defaults.baseURL = \"http://localhost:3000\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\nexport default {\n  data() {\n    return {\n      num: \"test\",\n      showMessage: false,\n      timeLimit: 3,\n      // 5분 =  5 * 60\n      timeLeft: 0,\n      bookname: \"\",\n      email: \"\",\n      password: \"\",\n      provider: \"\",\n      bookname2: \"\",\n      book_image: \"\",\n      book_author: \"\",\n      book_price: \"\",\n      book_category: \"\",\n      zipinput: false,\n      bookResults: [],\n      naverResults: [],\n      selectedBook: null,\n      selected: \"radio1\",\n      options: [{\n        text: \"Radio 1\",\n        value: \"radio1\"\n      }, {\n        text: \"Radio 3\",\n        value: \"radio2\"\n      }, {\n        text: \"Radio 3 (disabled)\",\n        value: \"radio3\",\n        disabled: true\n      }, {\n        text: \"Radio 4\",\n        value: \"radio4\"\n      }]\n    };\n  },\n  methods: {\n    book_research() {\n      //검색 시 입력창에 있는 걸로 알라딘 api 검색 실시합니다.\n      axios({\n        url: \"/aladin/getInfo\",\n        method: \"POST\",\n        data: {\n          bookname: this.bookname //서버으로 넘깁니다.\n        }\n      }).then(res => {\n        let aladinXml = res.data; //서버에서 json으로 검색 결과를 넘긴걸 변수에 넣습니다.\n        console.log(aladinXml.object.item);\n        if (aladinXml.object.item) {\n          //검색 결과가 있으면\n          this.bookResults = aladinXml.object.item.map(item => ({\n            //배열에 넣어줍니다.\n            title: item.title._text,\n            image: item.cover._text,\n            author: item.author._text,\n            price: item.priceStandard._text,\n            category: item.categoryName._text,\n            isbn: item.isbn13._text,\n            itemID: item._attributes.itemId\n          }));\n          this.selectedBook = \"defautl\"; //이건 왜 안될까요?\n        } else {\n          //검색결과가 없으면 선택창 작동안하게 합니다.\n          this.bookResults = [];\n          this.selectedBook = \"defautl\";\n        }\n      }).catch(err => {\n        //에러처리\n        console.log(err);\n      });\n    },\n    startEventWithTimeLimit() {\n      if (this.timeLeft > 0) {\n        //시간이 남아있으면 버튼의 이벤트 비활성화\n        return;\n      }\n      this.timeLeft = this.timeLimit; //이건 왜 있는거지?\n      this.updateTimeDisplay(); // updateTimeDisplay() 실행\n    },\n\n    updateTimeDisplay() {\n      var time = setInterval(() => {\n        if (this.timeLeft > 0) {\n          this.timeLeft--; // 1초마다 시간을 깎는 중\n        } else {\n          //시간이 끝났을경우 뭘 할까?\n          alert(\"!!!!!\");\n          clearInterval(time);\n        }\n      }, 1000); // 1초마다 실행되도록 setInterval 설정\n    },\n\n    formatTime(seconds) {\n      const minutes = Math.floor(seconds / 60);\n      const remainingSeconds = seconds % 60;\n      return `${minutes}:${remainingSeconds.toString().padStart(2, \"0\")}`;\n    },\n    onBookSelectionChange() {\n      //select창에서 선택을 하게 되면 이 메소드가 실행됩니다.\n      if (this.selectedBook === \"default\") {\n        return;\n      }\n      if (this.selectedBook !== null) {\n        const selectedBookData = this.bookResults[this.selectedBook]; //배열에서 select에서 선택한걸로 index를 받습니다.\n        this.bookname2 = selectedBookData.title;\n        this.book_author = selectedBookData.author;\n        this.book_price = selectedBookData.price;\n        this.book_category = selectedBookData.category;\n        if (selectedBookData.itemID) {\n          //itemID을 이용하여 알라딘 api를 사용하여 책 이미지를 받습니다.\n          axios({\n            url: \"aladin/downBookImage\",\n            method: \"POST\",\n            data: {\n              isbn: selectedBookData.isbn,\n              itemID: selectedBookData.itemID //select로 선택한 것의 itemID을 서버로 넘깁니다. itemID는 알라딘의 고유 상품 번호입니다.\n            }\n          }).then(res => {\n            const aladinData = res.data;\n            console.log(aladinData.item); //서버에서 처리후 이미지 url을 받습니다.\n            this.book_image = aladinData.item[0].cover; //알라딘은 왤캐 이미지 해상도를 거지같이 주는거지\n          }).catch(err => {\n            alert(\"없을 수가 있나?\"); //네이버에서 isbn으로 검색했을때 없는 경우가 잇을까요?\n          });\n        } else {\n          alert(\"이 에러가 왜나?\"); //책 세트면 에러가 납니다..\n        }\n      }\n    },\n\n    requestPay() {\n      const IMP = window.IMP;\n      IMP.init(\"imp18828153\");\n      IMP.request_pay({\n        // param\n        pg: \"inicis\",\n        pay_method: \"card\",\n        name: \"테스트\",\n        amount: 1,\n        buyer_email: \"gildong@gmail.com\",\n        buyer_name: \"홍길동\",\n        buyer_tel: \"010-4242-4242\",\n        buyer_addr: \"서울특별시 강남구 신사동\",\n        buyer_postcode: \"01181\"\n      }, rsp => {\n        // callback\n        if (rsp.success) {\n          alert(\"!\");\n          console.log(rsp.success);\n          console.log(rsp);\n        } else {\n          alert(\"?\");\n        }\n      });\n    },\n    sample4_execDaumPostcode() {\n      new window.daum.Postcode({\n        oncomplete: data => {\n          // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\n\n          // 도로명 주소의 노출 규칙에 따라 주소를 표시한다.\n          // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\n          var roadAddr = data.roadAddress; // 도로명 주소 변수\n          var extraRoadAddr = \"\"; // 참고 항목 변수\n\n          // 법정동명이 있을 경우 추가한다. (법정리는 제외)\n          // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\n          if (data.bname !== \"\" && /[동|로|가]$/g.test(data.bname)) {\n            extraRoadAddr += data.bname;\n          }\n          // 건물명이 있고, 공동주택일 경우 추가한다.\n          if (data.buildingName !== \"\" && data.apartment === \"Y\") {\n            extraRoadAddr += extraRoadAddr !== \"\" ? \", \" + data.buildingName : data.buildingName;\n          }\n          // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\n          if (extraRoadAddr !== \"\") {\n            extraRoadAddr = \" (\" + extraRoadAddr + \")\";\n          }\n\n          // 우편번호와 주소 정보를 해당 필드에 넣는다.\n          this.num = data.zonecode;\n          document.getElementById(\"sample4_roadAddress\").value = roadAddr;\n          document.getElementById(\"sample4_jibunAddress\").value = data.jibunAddress;\n          this.zipinput = true;\n        }\n      }).open();\n    },\n    test() {\n      axios({\n        url: \"/test\",\n        method: \"POST\",\n        data: this.num\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","defaults","baseURL","headers","post","data","num","showMessage","timeLimit","timeLeft","bookname","email","password","provider","bookname2","book_image","book_author","book_price","book_category","zipinput","bookResults","naverResults","selectedBook","selected","options","text","value","disabled","methods","book_research","url","method","then","res","aladinXml","console","log","object","item","map","title","_text","image","cover","author","price","priceStandard","category","categoryName","isbn","isbn13","itemID","_attributes","itemId","catch","err","startEventWithTimeLimit","updateTimeDisplay","time","setInterval","alert","clearInterval","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","onBookSelectionChange","selectedBookData","aladinData","requestPay","IMP","window","init","request_pay","pg","pay_method","name","amount","buyer_email","buyer_name","buyer_tel","buyer_addr","buyer_postcode","rsp","success","sample4_execDaumPostcode","daum","Postcode","oncomplete","roadAddr","roadAddress","extraRoadAddr","bname","test","buildingName","apartment","zonecode","document","getElementById","jibunAddress","open"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\bookInsert.vue"],"sourcesContent":["<template>\r\n  <div class=\"input_book_title\">\r\n    <form class=\"book_title_form\" @submit.prevent=\"book_research\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"book_title\"\r\n        v-model=\"bookname\"\r\n        placeholder=\"Enter book name\"\r\n      />\r\n      <button type=\"submit\">검색</button>\r\n    </form>\r\n  </div>\r\n  <div class=\"book_info\">\r\n    <img :src=\"book_image\" class=\"book_image\" />\r\n    <h6>책 이름: {{ bookname2 }}</h6>\r\n    <h6>작가: {{ book_author }}</h6>\r\n    <h6>가격: {{ book_price }}</h6>\r\n    <h6>카테고리: {{ book_category }}</h6>\r\n  </div>\r\n\r\n  <div v-if=\"bookResults.length > 0\" class=\"book_selection\">\r\n    <label for=\"selectedBook\">Select a book:</label>\r\n    <select v-model=\"selectedBook\" @change=\"onBookSelectionChange\">\r\n      <option value=\"default\">-----------------------</option>\r\n      <option v-for=\"(book, index) in bookResults\" :key=\"index\" :value=\"index\">\r\n        {{ book.title }}\r\n      </option>\r\n    </select>\r\n  </div>\r\n  <div>\r\n    <button @click=\"requestPay\">결제하기</button>\r\n  </div>\r\n\r\n  <span class=\"addinput\">{{ num }}</span>\r\n  <input\r\n    type=\"button\"\r\n    @click=\"sample4_execDaumPostcode\"\r\n    value=\"우편번호 찾기\"\r\n  /><br />\r\n  <input type=\"text\" id=\"sample4_roadAddress\" placeholder=\"도로명주소\" />\r\n  <input type=\"text\" id=\"sample4_jibunAddress\" placeholder=\"지번주소\" />\r\n  <span id=\"guide\" style=\"color: #999; display: none\"></span>\r\n  <input type=\"text\" id=\"sample4_detailAddress\" placeholder=\"상세주소\" />\r\n  <input type=\"text\" id=\"sample4_extraAddress\" placeholder=\"참고항목\" />\r\n  <br />\r\n  <button @click=\"startEventWithTimeLimit\">안녕</button>\r\n  <p v-if=\"timeLeft > 0\">Time left: {{ formatTime(timeLeft) }}</p>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      num: \"test\",\r\n      showMessage: false,\r\n      timeLimit: 3, // 5분 =  5 * 60\r\n      timeLeft: 0,\r\n\r\n      bookname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      provider: \"\",\r\n      bookname2: \"\",\r\n      book_image: \"\",\r\n      book_author: \"\",\r\n      book_price: \"\",\r\n      book_category: \"\",\r\n      zipinput: false,\r\n      bookResults: [],\r\n      naverResults: [],\r\n      selectedBook: null,\r\n      selected: \"radio1\",\r\n      options: [\r\n        { text: \"Radio 1\", value: \"radio1\" },\r\n        { text: \"Radio 3\", value: \"radio2\" },\r\n        { text: \"Radio 3 (disabled)\", value: \"radio3\", disabled: true },\r\n        { text: \"Radio 4\", value: \"radio4\" },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    book_research() {\r\n      //검색 시 입력창에 있는 걸로 알라딘 api 검색 실시합니다.\r\n      axios({\r\n        url: \"/aladin/getInfo\",\r\n        method: \"POST\",\r\n        data: {\r\n          bookname: this.bookname, //서버으로 넘깁니다.\r\n        },\r\n      })\r\n        .then((res) => {\r\n          let aladinXml = res.data; //서버에서 json으로 검색 결과를 넘긴걸 변수에 넣습니다.\r\n          console.log(aladinXml.object.item);\r\n          if (aladinXml.object.item) {\r\n            //검색 결과가 있으면\r\n            this.bookResults = aladinXml.object.item.map((item) => ({\r\n              //배열에 넣어줍니다.\r\n              title: item.title._text,\r\n              image: item.cover._text,\r\n              author: item.author._text,\r\n              price: item.priceStandard._text,\r\n              category: item.categoryName._text,\r\n              isbn: item.isbn13._text,\r\n              itemID: item._attributes.itemId,\r\n            }));\r\n            this.selectedBook = \"defautl\"; //이건 왜 안될까요?\r\n          } else {\r\n            //검색결과가 없으면 선택창 작동안하게 합니다.\r\n            this.bookResults = [];\r\n            this.selectedBook = \"defautl\";\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          //에러처리\r\n          console.log(err);\r\n        });\r\n    },\r\n    startEventWithTimeLimit() {\r\n      if (this.timeLeft > 0) {\r\n        //시간이 남아있으면 버튼의 이벤트 비활성화\r\n        return;\r\n      }\r\n      this.timeLeft = this.timeLimit; //이건 왜 있는거지?\r\n      this.updateTimeDisplay(); // updateTimeDisplay() 실행\r\n    },\r\n    updateTimeDisplay() {\r\n      var time = setInterval(() => {\r\n        if (this.timeLeft > 0) {\r\n          this.timeLeft--; // 1초마다 시간을 깎는 중\r\n        } else {\r\n          //시간이 끝났을경우 뭘 할까?\r\n          alert(\"!!!!!\");\r\n          clearInterval(time);\r\n        }\r\n      }, 1000); // 1초마다 실행되도록 setInterval 설정\r\n    },\r\n    formatTime(seconds) {\r\n      const minutes = Math.floor(seconds / 60);\r\n      const remainingSeconds = seconds % 60;\r\n      return `${minutes}:${remainingSeconds.toString().padStart(2, \"0\")}`;\r\n    },\r\n    onBookSelectionChange() {\r\n      //select창에서 선택을 하게 되면 이 메소드가 실행됩니다.\r\n      if (this.selectedBook === \"default\") {\r\n        return;\r\n      }\r\n\r\n      if (this.selectedBook !== null) {\r\n        const selectedBookData = this.bookResults[this.selectedBook]; //배열에서 select에서 선택한걸로 index를 받습니다.\r\n        this.bookname2 = selectedBookData.title;\r\n        this.book_author = selectedBookData.author;\r\n        this.book_price = selectedBookData.price;\r\n        this.book_category = selectedBookData.category;\r\n\r\n        if (selectedBookData.itemID) {\r\n          //itemID을 이용하여 알라딘 api를 사용하여 책 이미지를 받습니다.\r\n          axios({\r\n            url: \"aladin/downBookImage\",\r\n            method: \"POST\",\r\n            data: {\r\n              isbn: selectedBookData.isbn,\r\n              itemID: selectedBookData.itemID, //select로 선택한 것의 itemID을 서버로 넘깁니다. itemID는 알라딘의 고유 상품 번호입니다.\r\n            },\r\n          })\r\n            .then((res) => {\r\n              const aladinData = res.data;\r\n              console.log(aladinData.item); //서버에서 처리후 이미지 url을 받습니다.\r\n              this.book_image = aladinData.item[0].cover; //알라딘은 왤캐 이미지 해상도를 거지같이 주는거지\r\n            })\r\n            .catch((err) => {\r\n              alert(\"없을 수가 있나?\"); //네이버에서 isbn으로 검색했을때 없는 경우가 잇을까요?\r\n            });\r\n        } else {\r\n          alert(\"이 에러가 왜나?\"); //책 세트면 에러가 납니다..\r\n        }\r\n      }\r\n    },\r\n    requestPay() {\r\n      const IMP = window.IMP;\r\n      IMP.init(\"imp18828153\");\r\n\r\n      IMP.request_pay(\r\n        {\r\n          // param\r\n          pg: \"inicis\",\r\n          pay_method: \"card\",\r\n          name: \"테스트\",\r\n          amount: 1,\r\n          buyer_email: \"gildong@gmail.com\",\r\n          buyer_name: \"홍길동\",\r\n          buyer_tel: \"010-4242-4242\",\r\n          buyer_addr: \"서울특별시 강남구 신사동\",\r\n          buyer_postcode: \"01181\",\r\n        },\r\n        (rsp) => {\r\n          // callback\r\n          if (rsp.success) {\r\n            alert(\"!\");\r\n            console.log(rsp.success);\r\n            console.log(rsp);\r\n          } else {\r\n            alert(\"?\");\r\n          }\r\n        }\r\n      );\r\n    },\r\n    sample4_execDaumPostcode() {\r\n      new window.daum.Postcode({\r\n        oncomplete: (data) => {\r\n          // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n\r\n          // 도로명 주소의 노출 규칙에 따라 주소를 표시한다.\r\n          // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n          var roadAddr = data.roadAddress; // 도로명 주소 변수\r\n          var extraRoadAddr = \"\"; // 참고 항목 변수\r\n\r\n          // 법정동명이 있을 경우 추가한다. (법정리는 제외)\r\n          // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n          if (data.bname !== \"\" && /[동|로|가]$/g.test(data.bname)) {\r\n            extraRoadAddr += data.bname;\r\n          }\r\n          // 건물명이 있고, 공동주택일 경우 추가한다.\r\n          if (data.buildingName !== \"\" && data.apartment === \"Y\") {\r\n            extraRoadAddr +=\r\n              extraRoadAddr !== \"\"\r\n                ? \", \" + data.buildingName\r\n                : data.buildingName;\r\n          }\r\n          // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n          if (extraRoadAddr !== \"\") {\r\n            extraRoadAddr = \" (\" + extraRoadAddr + \")\";\r\n          }\r\n\r\n          // 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n          this.num = data.zonecode;\r\n          document.getElementById(\"sample4_roadAddress\").value = roadAddr;\r\n          document.getElementById(\"sample4_jibunAddress\").value =\r\n            data.jibunAddress;\r\n\r\n          this.zipinput = true;\r\n        },\r\n      }).open();\r\n    },\r\n    test() {\r\n      axios({\r\n        url: \"/test\",\r\n        method: \"POST\",\r\n        data: this.num,\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.input_book_title {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.book_title_form {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.book_title {\r\n  flex: 1;\r\n  padding: 8px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\nbutton {\r\n  padding: 8px 16px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-left: 8px;\r\n}\r\n\r\n.book_info {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.book_image {\r\n  height: auto;\r\n  width: auto;\r\n  display: block;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.book_description {\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.book_selection {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  font-weight: bold;\r\n  margin-right: 8px;\r\n}\r\n\r\nselect {\r\n  padding: 8px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}