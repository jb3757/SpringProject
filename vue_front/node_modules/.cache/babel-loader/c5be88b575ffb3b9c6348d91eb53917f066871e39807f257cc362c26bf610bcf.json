{"ast":null,"code":"import axios from \"axios\";\naxios.defaults.baseURL = \"http://localhost:3000\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\nexport default {\n  data() {\n    return {\n      bookname: \"\",\n      email: \"\",\n      password: \"\",\n      provider: \"\",\n      bookname2: \"\",\n      book_image: \"\",\n      book_author: \"\",\n      book_price: \"\",\n      book_category: \"\",\n      zipinput: false,\n      bookResults: [],\n      naverResults: [],\n      selectedBook: null,\n      book_provider: \"\"\n    };\n  },\n  methods: {\n    book_research() {\n      //검색 시 입력창에 있는 걸로 알라딘 api 검색 실시합니다.\n      axios({\n        url: \"/aladin/getInfo\",\n        method: \"POST\",\n        data: {\n          bookname: this.bookname //서버으로 넘깁니다.\n        }\n      }).then(res => {\n        let aladinXml = res.data; //서버에서 json으로 검색 결과를 넘긴걸 변수에 넣습니다.\n        console.log(aladinXml.object.item);\n        if (aladinXml.object.item) {\n          //검색 결과가 있으면\n          this.bookResults = aladinXml.object.item.map(item => ({\n            //배열에 넣어줍니다.\n            title: item.title._text,\n            image: item.cover._text,\n            author: item.author._text,\n            price: item.priceStandard._text,\n            category: item.categoryName._text,\n            isbn: item.isbn13._text,\n            itemID: item._attributes.itemId\n          }));\n          this.selectedBook = \"defautl\"; //이건 왜 안될까요?\n        } else {\n          //검색결과가 없으면 선택창 작동안하게 합니다.\n          this.bookResults = [];\n          this.selectedBook = \"defautl\";\n        }\n      }).catch(err => {\n        //에러처리\n        console.log(err);\n      });\n    },\n    onBookSelectionChange() {\n      //select창에서 선택을 하게 되면 이 메소드가 실행됩니다.\n      if (this.selectedBook === \"default\") {\n        return;\n      }\n      if (this.selectedBook !== null) {\n        const selectedBookData = this.bookResults[this.selectedBook]; //배열에서 select에서 선택한걸로 index를 받습니다.\n        this.bookname2 = selectedBookData.title;\n        this.book_author = selectedBookData.author;\n        this.book_price = selectedBookData.price;\n        this.book_category = selectedBookData.category;\n        if (selectedBookData.itemID) {\n          //itemID을 이용하여 알라딘 api를 사용하여 책 이미지를 받습니다.\n          axios({\n            url: \"aladin/naverBookImage\",\n            method: \"POST\",\n            data: {\n              isbn: selectedBookData.isbn,\n              itemID: selectedBookData.itemID //select로 선택한 것의 itemID을 서버로 넘깁니다. itemID는 알라딘의 고유 상품 번호입니다.\n            }\n          }).then(res => {\n            const aladinData = res.data;\n            console.log(aladinData.imageUrl); //서버에서 처리후 이미지 url을 받습니다.\n            this.book_image = aladinData; //알라딘은 왤캐 이미지 해상도를 거지같이 주는거지\n            this.book_provider = \"naver\";\n          }).catch(err => {\n            axios({\n              url: \"aladin/aladinBookImage\",\n              method: \"POST\",\n              data: {\n                itemID: selectedBookData.itemID\n              }\n            }).then(res => {\n              const aladinData = res.data;\n              this.book_image = aladinData.item[0].cover;\n              this.book_provider = \"aladin\";\n            }).catch(err => {\n              alert(err);\n            });\n          });\n        } else {\n          alert(\"이 에러가 왜나?\"); //책 세트면 에러가 납니다..\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","defaults","baseURL","headers","post","data","bookname","email","password","provider","bookname2","book_image","book_author","book_price","book_category","zipinput","bookResults","naverResults","selectedBook","book_provider","methods","book_research","url","method","then","res","aladinXml","console","log","object","item","map","title","_text","image","cover","author","price","priceStandard","category","categoryName","isbn","isbn13","itemID","_attributes","itemId","catch","err","onBookSelectionChange","selectedBookData","aladinData","imageUrl","alert"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\bookInsert.vue"],"sourcesContent":["<template>\r\n  <div class=\"input_book_title\">\r\n    <form class=\"book_title_form\" @submit.prevent=\"book_research\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"book_title\"\r\n        v-model=\"bookname\"\r\n        placeholder=\"Enter book name\"\r\n      />\r\n      <button type=\"submit\">검색</button>\r\n    </form>\r\n  </div>\r\n  <div class=\"book_info\">\r\n    <img :src=\"book_image\" class=\"book_image\" />\r\n    <p>{{ book_provider }}</p>\r\n    <h6>책 이름: {{ bookname2 }}</h6>\r\n    <h6>작가: {{ book_author }}</h6>\r\n    <h6>가격: {{ book_price }}</h6>\r\n    <h6>카테고리: {{ book_category }}</h6>\r\n    <button type=\"button\">db 삽입</button>\r\n  </div>\r\n\r\n  <div v-if=\"bookResults.length > 0\" class=\"book_selection\">\r\n    <label for=\"selectedBook\">Select a book:</label>\r\n    <select v-model=\"selectedBook\" @change=\"onBookSelectionChange\">\r\n      <option value=\"default\">-----------------------</option>\r\n      <option v-for=\"(book, index) in bookResults\" :key=\"index\" :value=\"index\">\r\n        {{ book.title }}\r\n      </option>\r\n    </select>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      bookname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      provider: \"\",\r\n      bookname2: \"\",\r\n      book_image: \"\",\r\n      book_author: \"\",\r\n      book_price: \"\",\r\n      book_category: \"\",\r\n      zipinput: false,\r\n      bookResults: [],\r\n      naverResults: [],\r\n      selectedBook: null,\r\n      book_provider: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    book_research() {\r\n      //검색 시 입력창에 있는 걸로 알라딘 api 검색 실시합니다.\r\n      axios({\r\n        url: \"/aladin/getInfo\",\r\n        method: \"POST\",\r\n        data: {\r\n          bookname: this.bookname, //서버으로 넘깁니다.\r\n        },\r\n      })\r\n        .then((res) => {\r\n          let aladinXml = res.data; //서버에서 json으로 검색 결과를 넘긴걸 변수에 넣습니다.\r\n          console.log(aladinXml.object.item);\r\n          if (aladinXml.object.item) {\r\n            //검색 결과가 있으면\r\n            this.bookResults = aladinXml.object.item.map((item) => ({\r\n              //배열에 넣어줍니다.\r\n              title: item.title._text,\r\n              image: item.cover._text,\r\n              author: item.author._text,\r\n              price: item.priceStandard._text,\r\n              category: item.categoryName._text,\r\n              isbn: item.isbn13._text,\r\n              itemID: item._attributes.itemId,\r\n            }));\r\n            this.selectedBook = \"defautl\"; //이건 왜 안될까요?\r\n          } else {\r\n            //검색결과가 없으면 선택창 작동안하게 합니다.\r\n            this.bookResults = [];\r\n            this.selectedBook = \"defautl\";\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          //에러처리\r\n          console.log(err);\r\n        });\r\n    },\r\n    onBookSelectionChange() {\r\n      //select창에서 선택을 하게 되면 이 메소드가 실행됩니다.\r\n      if (this.selectedBook === \"default\") {\r\n        return;\r\n      }\r\n\r\n      if (this.selectedBook !== null) {\r\n        const selectedBookData = this.bookResults[this.selectedBook]; //배열에서 select에서 선택한걸로 index를 받습니다.\r\n        this.bookname2 = selectedBookData.title;\r\n        this.book_author = selectedBookData.author;\r\n        this.book_price = selectedBookData.price;\r\n        this.book_category = selectedBookData.category;\r\n\r\n        if (selectedBookData.itemID) {\r\n          //itemID을 이용하여 알라딘 api를 사용하여 책 이미지를 받습니다.\r\n          axios({\r\n            url: \"aladin/naverBookImage\",\r\n            method: \"POST\",\r\n            data: {\r\n              isbn: selectedBookData.isbn,\r\n              itemID: selectedBookData.itemID, //select로 선택한 것의 itemID을 서버로 넘깁니다. itemID는 알라딘의 고유 상품 번호입니다.\r\n            },\r\n          })\r\n            .then((res) => {\r\n              const aladinData = res.data;\r\n              console.log(aladinData.imageUrl); //서버에서 처리후 이미지 url을 받습니다.\r\n              this.book_image = aladinData; //알라딘은 왤캐 이미지 해상도를 거지같이 주는거지\r\n              this.book_provider = \"naver\";\r\n            })\r\n            .catch((err) => {\r\n              axios({\r\n                url: \"aladin/aladinBookImage\",\r\n                method: \"POST\",\r\n                data: {\r\n                  itemID: selectedBookData.itemID,\r\n                },\r\n              })\r\n                .then((res) => {\r\n                  const aladinData = res.data;\r\n                  this.book_image = aladinData.item[0].cover;\r\n                  this.book_provider = \"aladin\";\r\n                })\r\n                .catch((err) => {\r\n                  alert(err);\r\n                });\r\n            });\r\n        } else {\r\n          alert(\"이 에러가 왜나?\"); //책 세트면 에러가 납니다..\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.input_book_title {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.book_title_form {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.book_title {\r\n  flex: 1;\r\n  padding: 8px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\nbutton {\r\n  padding: 8px 16px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-left: 8px;\r\n}\r\n\r\n.book_info {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.book_image {\r\n  height: auto;\r\n  width: auto;\r\n  display: block;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.book_selection {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  font-weight: bold;\r\n  margin-right: 8px;\r\n}\r\n\r\nselect {\r\n  padding: 8px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n</style>\r\n"],"mappings":"AAkCA,OAAOA,KAAI,MAAO,OAAO;AACzBA,KAAK,CAACC,QAAQ,CAACC,OAAM,GAAI,uBAAuB;AAChDF,KAAK,CAACC,QAAQ,CAACE,OAAO,CAACC,IAAI,CAAC,cAAc,IAAI,gCAAgC;AAC9EJ,KAAK,CAACC,QAAQ,CAACE,OAAO,CAACC,IAAI,CAAC,6BAA6B,IAAI,GAAG;AAEhE,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,EAAE;MACbC,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE,EAAE;MACdC,aAAa,EAAE,EAAE;MACjBC,QAAQ,EAAE,KAAK;MACfC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE,IAAI;MAClBC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd;MACArB,KAAK,CAAC;QACJsB,GAAG,EAAE,iBAAiB;QACtBC,MAAM,EAAE,MAAM;QACdlB,IAAI,EAAE;UACJC,QAAQ,EAAE,IAAI,CAACA,QAAQ,CAAE;QAC3B;MACF,CAAC,EACEkB,IAAI,CAAEC,GAAG,IAAK;QACb,IAAIC,SAAQ,GAAID,GAAG,CAACpB,IAAI,EAAE;QAC1BsB,OAAO,CAACC,GAAG,CAACF,SAAS,CAACG,MAAM,CAACC,IAAI,CAAC;QAClC,IAAIJ,SAAS,CAACG,MAAM,CAACC,IAAI,EAAE;UACzB;UACA,IAAI,CAACd,WAAU,GAAIU,SAAS,CAACG,MAAM,CAACC,IAAI,CAACC,GAAG,CAAED,IAAI,KAAM;YACtD;YACAE,KAAK,EAAEF,IAAI,CAACE,KAAK,CAACC,KAAK;YACvBC,KAAK,EAAEJ,IAAI,CAACK,KAAK,CAACF,KAAK;YACvBG,MAAM,EAAEN,IAAI,CAACM,MAAM,CAACH,KAAK;YACzBI,KAAK,EAAEP,IAAI,CAACQ,aAAa,CAACL,KAAK;YAC/BM,QAAQ,EAAET,IAAI,CAACU,YAAY,CAACP,KAAK;YACjCQ,IAAI,EAAEX,IAAI,CAACY,MAAM,CAACT,KAAK;YACvBU,MAAM,EAAEb,IAAI,CAACc,WAAW,CAACC;UAC3B,CAAC,CAAC,CAAC;UACH,IAAI,CAAC3B,YAAW,GAAI,SAAS,EAAE;QACjC,OAAO;UACL;UACA,IAAI,CAACF,WAAU,GAAI,EAAE;UACrB,IAAI,CAACE,YAAW,GAAI,SAAS;QAC/B;MACF,CAAC,EACA4B,KAAK,CAAEC,GAAG,IAAK;QACd;QACApB,OAAO,CAACC,GAAG,CAACmB,GAAG,CAAC;MAClB,CAAC,CAAC;IACN,CAAC;IACDC,qBAAqBA,CAAA,EAAG;MACtB;MACA,IAAI,IAAI,CAAC9B,YAAW,KAAM,SAAS,EAAE;QACnC;MACF;MAEA,IAAI,IAAI,CAACA,YAAW,KAAM,IAAI,EAAE;QAC9B,MAAM+B,gBAAe,GAAI,IAAI,CAACjC,WAAW,CAAC,IAAI,CAACE,YAAY,CAAC,EAAE;QAC9D,IAAI,CAACR,SAAQ,GAAIuC,gBAAgB,CAACjB,KAAK;QACvC,IAAI,CAACpB,WAAU,GAAIqC,gBAAgB,CAACb,MAAM;QAC1C,IAAI,CAACvB,UAAS,GAAIoC,gBAAgB,CAACZ,KAAK;QACxC,IAAI,CAACvB,aAAY,GAAImC,gBAAgB,CAACV,QAAQ;QAE9C,IAAIU,gBAAgB,CAACN,MAAM,EAAE;UAC3B;UACA3C,KAAK,CAAC;YACJsB,GAAG,EAAE,uBAAuB;YAC5BC,MAAM,EAAE,MAAM;YACdlB,IAAI,EAAE;cACJoC,IAAI,EAAEQ,gBAAgB,CAACR,IAAI;cAC3BE,MAAM,EAAEM,gBAAgB,CAACN,MAAM,CAAE;YACnC;UACF,CAAC,EACEnB,IAAI,CAAEC,GAAG,IAAK;YACb,MAAMyB,UAAS,GAAIzB,GAAG,CAACpB,IAAI;YAC3BsB,OAAO,CAACC,GAAG,CAACsB,UAAU,CAACC,QAAQ,CAAC,EAAE;YAClC,IAAI,CAACxC,UAAS,GAAIuC,UAAU,EAAE;YAC9B,IAAI,CAAC/B,aAAY,GAAI,OAAO;UAC9B,CAAC,EACA2B,KAAK,CAAEC,GAAG,IAAK;YACd/C,KAAK,CAAC;cACJsB,GAAG,EAAE,wBAAwB;cAC7BC,MAAM,EAAE,MAAM;cACdlB,IAAI,EAAE;gBACJsC,MAAM,EAAEM,gBAAgB,CAACN;cAC3B;YACF,CAAC,EACEnB,IAAI,CAAEC,GAAG,IAAK;cACb,MAAMyB,UAAS,GAAIzB,GAAG,CAACpB,IAAI;cAC3B,IAAI,CAACM,UAAS,GAAIuC,UAAU,CAACpB,IAAI,CAAC,CAAC,CAAC,CAACK,KAAK;cAC1C,IAAI,CAAChB,aAAY,GAAI,QAAQ;YAC/B,CAAC,EACA2B,KAAK,CAAEC,GAAG,IAAK;cACdK,KAAK,CAACL,GAAG,CAAC;YACZ,CAAC,CAAC;UACN,CAAC,CAAC;QACN,OAAO;UACLK,KAAK,CAAC,WAAW,CAAC,EAAE;QACtB;MACF;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}