{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-23b155e4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"mypage_menu\"\n};\nconst _hoisted_2 = {\n  class: \"right_box\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"userUpdateTitle\"\n}, \"회원정보 관리\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", {\n  class: \"section-divider\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"input-group\"\n};\nconst _hoisted_6 = {\n  class: \"input-item\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"아이디\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"input-item\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"name\"\n}, \"이름\", -1 /* HOISTED */));\nconst _hoisted_10 = {\n  class: \"input-item\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"비밀번호\", -1 /* HOISTED */));\nconst _hoisted_12 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_13 = {\n  class: \"modal-content\"\n};\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"비밀번호 변경\", -1 /* HOISTED */));\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"newPassword\"\n}, \"새 비밀번호\", -1 /* HOISTED */));\nconst _hoisted_16 = {\n  key: 0\n};\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"confirmPassword\"\n}, \"비밀번호 확인\", -1 /* HOISTED */));\nconst _hoisted_18 = {\n  key: 1\n};\nconst _hoisted_19 = {\n  class: \"button-group-center\"\n};\nconst _hoisted_20 = {\n  class: \"input-item\"\n};\nconst _hoisted_21 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"sex\"\n}, \"성별\", -1 /* HOISTED */));\nconst _hoisted_22 = [\"value\"];\nconst _hoisted_23 = {\n  class: \"input-item\"\n};\nconst _hoisted_24 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"age\"\n}, \"나이대\", -1 /* HOISTED */));\nconst _hoisted_25 = [\"value\"];\nconst _hoisted_26 = {\n  class: \"input-item\"\n};\nconst _hoisted_27 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"zipcode\"\n}, \"우편번호\", -1 /* HOISTED */));\nconst _hoisted_28 = {\n  class: \"input-item\"\n};\nconst _hoisted_29 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"add1\"\n}, \"주소\", -1 /* HOISTED */));\nconst _hoisted_30 = {\n  class: \"input-item\"\n};\nconst _hoisted_31 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"add2\"\n}, \"상세주소\", -1 /* HOISTED */));\nconst _hoisted_32 = {\n  class: \"input-item\"\n};\nconst _hoisted_33 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"phone_num\"\n}, \"전화번호\", -1 /* HOISTED */));\nconst _hoisted_34 = {\n  class: \"button-group\"\n};\nconst _hoisted_35 = {\n  key: 0,\n  class: \"status-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_myPageSide = _resolveComponent(\"myPageSide\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_myPageSide)]), _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.originalData.email = $event),\n    readonly: true\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.originalData.email]])]), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.originalData.name = $event),\n    readonly: true\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.originalData.name]])]), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.originalData.password = $event),\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.openPasswordModal && $options.openPasswordModal(...args))\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.originalData.password]])]), _createCommentVNode(\" 모달 요소 \"), $data.passwordModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_hoisted_14, _hoisted_15, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"newPassword\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.newPassword = $event),\n    onInput: _cache[5] || (_cache[5] = (...args) => $options.checkNewPassword && $options.checkNewPassword(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.newPassword]]), $data.passwordValidationMessage ? (_openBlock(), _createElementBlock(\"span\", _hoisted_16, _toDisplayString($data.passwordValidationMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _hoisted_17, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"confirmPassword\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.confirmPassword = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]]), $data.passwordMatchMessage ? (_openBlock(), _createElementBlock(\"span\", _hoisted_18, _toDisplayString($data.passwordMatchMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.changePassword && $options.changePassword(...args))\n  }, \"비밀번호 변경\"), _createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = (...args) => $options.closePasswordModal && $options.closePasswordModal(...args))\n  }, \"취소\")])])])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_20, [_hoisted_21, _createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"sex\",\n    value: $options.convertGender($data.originalData.sex),\n    readonly: true\n  }, null, 8 /* PROPS */, _hoisted_22)]), _createElementVNode(\"div\", _hoisted_23, [_hoisted_24, _createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"age\",\n    value: $options.convertAgeRange($data.originalData.age),\n    readonly: true\n  }, null, 8 /* PROPS */, _hoisted_25)]), _createElementVNode(\"div\", _hoisted_26, [_hoisted_27, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"zipcode\",\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.updatedFields.zipcode = $event),\n    readonly: true\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.updatedFields.zipcode]])]), _createElementVNode(\"div\", _hoisted_28, [_hoisted_29, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"add1\",\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.updatedFields.add1 = $event),\n    onClick: _cache[11] || (_cache[11] = (...args) => $options.openAddressSearch && $options.openAddressSearch(...args))\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.updatedFields.add1]])]), _createElementVNode(\"div\", _hoisted_30, [_hoisted_31, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"add2\",\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $data.updatedFields.add2 = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.updatedFields.add2]])]), _createElementVNode(\"div\", _hoisted_32, [_hoisted_33, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"phone_num\",\n    \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $data.updatedFields.phone_num = $event),\n    onInput: _cache[14] || (_cache[14] = $event => $options.formatPhoneNumber($data.updatedFields.phone_num)),\n    maxlength: \"13\"\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.updatedFields.phone_num]])])]), _createElementVNode(\"div\", _hoisted_34, [_createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[15] || (_cache[15] = (...args) => $options.cancelUpdate && $options.cancelUpdate(...args))\n  }, \"취소\"), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[16] || (_cache[16] = (...args) => $options.updateUserInfo && $options.updateUserInfo(...args))\n  }, \"수정\")]), $data.message ? (_openBlock(), _createElementBlock(\"div\", _hoisted_35, _toDisplayString($data.message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","for","_hoisted_1","_createVNode","_component_myPageSide","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","type","id","$data","originalData","email","$event","readonly","_hoisted_8","_hoisted_9","name","_hoisted_10","_hoisted_11","password","onClick","_cache","args","$options","openPasswordModal","_createCommentVNode","passwordModal","_createElementBlock","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","newPassword","onInput","checkNewPassword","passwordValidationMessage","_hoisted_16","_toDisplayString","_hoisted_17","confirmPassword","passwordMatchMessage","_hoisted_18","_hoisted_19","changePassword","closePasswordModal","_hoisted_20","_hoisted_21","value","convertGender","sex","_hoisted_23","_hoisted_24","convertAgeRange","age","_hoisted_26","_hoisted_27","updatedFields","zipcode","_hoisted_28","_hoisted_29","add1","openAddressSearch","_hoisted_30","_hoisted_31","add2","_hoisted_32","_hoisted_33","phone_num","formatPhoneNumber","maxlength","_hoisted_34","cancelUpdate","updateUserInfo","message","_hoisted_35"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\mypageUserInfo.vue"],"sourcesContent":["<template>\r\n    <div class=\"mypage_menu\">\r\n        <myPageSide />\r\n    </div>\r\n    <div class=\"right_box\">\r\n        <h2 class=\"userUpdateTitle\">회원정보 관리</h2>\r\n        <hr class=\"section-divider\" />\r\n\r\n        <div class=\"input-group\">\r\n            <div class=\"input-item\">\r\n                <label for=\"email\">아이디</label>\r\n                <input type=\"text\" id=\"email\" v-model=\"originalData.email\" :readonly=\"true\" />\r\n            </div>\r\n            <div class=\"input-item\">\r\n                <label for=\"name\">이름</label>\r\n                <input type=\"text\" id=\"name\" v-model=\"originalData.name\" :readonly=\"true\" />\r\n            </div>\r\n\r\n            <div>\r\n                <div class=\"input-item\">\r\n                    <label for=\"password\">비밀번호</label>\r\n                    <input type=\"password\" id=\"password\" v-model=\"originalData.password\" @click=\"openPasswordModal\" />\r\n                </div>\r\n\r\n                <!-- 모달 요소 -->\r\n                <div v-if=\"passwordModal\" class=\"modal\">\r\n                    <div class=\"modal-content\">\r\n                        <h3>비밀번호 변경</h3>\r\n                        <label for=\"newPassword\">새 비밀번호</label>\r\n                        <input type=\"password\" id=\"newPassword\" v-model=\"newPassword\" @input=\"checkNewPassword\" />\r\n                        <span v-if=\"passwordValidationMessage\">{{ passwordValidationMessage }}</span>\r\n                        <label for=\"confirmPassword\">비밀번호 확인</label>\r\n                        <input type=\"password\" id=\"confirmPassword\" v-model=\"confirmPassword\" />\r\n                        <span v-if=\"passwordMatchMessage\">{{ passwordMatchMessage }}</span>\r\n                        <div class=\"button-group-center\">\r\n                            <button @click=\"changePassword\">비밀번호 변경</button>\r\n                            <button @click=\"closePasswordModal\">취소</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"input-item\">\r\n                <label for=\"sex\">성별</label>\r\n                <input type=\"text\" id=\"sex\" :value=\"convertGender(originalData.sex)\" :readonly=\"true\" />\r\n            </div>\r\n            <div class=\"input-item\">\r\n                <label for=\"age\">나이대</label>\r\n                <input type=\"number\" id=\"age\" :value=\"convertAgeRange(originalData.age)\" :readonly=\"true\" />\r\n            </div>\r\n            <div class=\"input-item\">\r\n                <label for=\"zipcode\">우편번호</label>\r\n                <input type=\"text\" id=\"zipcode\" v-model=\"updatedFields.zipcode\" :readonly=\"true\" />\r\n            </div>\r\n            <div class=\"input-item\">\r\n                <label for=\"add1\">주소</label>\r\n                <input type=\"text\" id=\"add1\" v-model=\"updatedFields.add1\" @click=\"openAddressSearch\" />\r\n            </div>\r\n            <div class=\"input-item\">\r\n                <label for=\"add2\">상세주소</label>\r\n                <input type=\"text\" id=\"add2\" v-model=\"updatedFields.add2\" />\r\n            </div>\r\n\r\n            <div class=\"input-item\">\r\n                <label for=\"phone_num\">전화번호</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"phone_num\"\r\n                    v-model=\"updatedFields.phone_num\"\r\n                    @input=\"formatPhoneNumber(updatedFields.phone_num)\"\r\n                    maxlength=\"13\"\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"button-group\">\r\n            <button type=\"button\" @click=\"cancelUpdate\">취소</button>\r\n            <button type=\"button\" @click=\"updateUserInfo\">수정</button>\r\n        </div>\r\n\r\n        <div v-if=\"message\" class=\"status-message\">{{ message }}</div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nimport myPageSide from \"../components/myPageSide.vue\";\r\n\r\nexport default {\r\n    components: { myPageSide },\r\n    data() {\r\n        return {\r\n            originalData: {}, // 기존 데이터를 저장할 객체\r\n            updatedFields: {}, // 수정한 데이터를 저장할 객체\r\n            message: \"\",\r\n            passwordModal: false,\r\n            newPassword: \"\",\r\n            confirmPassword: \"\",\r\n            passwordValidationMessage: \"\",\r\n            passwordMatchMessage: \"\",\r\n        };\r\n    },\r\n    created() {\r\n        const email = localStorage.getItem(\"userID\");\r\n        this.fetchUserInfo(email); // 컴포넌트 생성 시 기존 데이터를 불러오는 메소드 호출\r\n    },\r\n    methods: {\r\n        convertAgeRange(age) {\r\n            if (age === \"14~19\" || age === \"14-19\") {\r\n                return \"10\";\r\n            } else if (age === \"20~29\" || age === \"20-29\") {\r\n                return \"20\";\r\n            } else if (age === \"30~39\" || age === \"30-39\") {\r\n                return \"30\";\r\n            } else if (age === \"40~49\" || age === \"40-49\") {\r\n                return \"40\";\r\n            } else if (age === \"50~59\" || age === \"50-59\") {\r\n                return \"50\";\r\n            } else {\r\n                return age;\r\n            }\r\n        },\r\n        async fetchUserInfo(email) {\r\n            try {\r\n                const response = await axios.get(\"mypage/getUserInfo\", {\r\n                    params: { userEmail: email },\r\n                });\r\n\r\n                this.originalData = {\r\n                    ...response.data,\r\n                    //age: response.data.age, // age 프로퍼티에 값을 할당\r\n                    ageRange: this.convertAgeRange(response.data.age), // 나이대 변환\r\n                };\r\n\r\n                this.updatedFields = { ...this.originalData }; // 수정할 정보를 updatedFields에 복사\r\n                console.log(this.updatedFields);\r\n            } catch (error) {\r\n                console.error(\"기존 회원정보 불러오기 오류:\", error);\r\n            }\r\n        },\r\n        async updateUserInfo() {\r\n            console.log(\"!\");\r\n            const email = localStorage.getItem(\"userID\");\r\n\r\n            // POST 요청을 보내기 위한 데이터 구성\r\n            const updatedFields = {\r\n                email: email,\r\n                updatedFields: {\r\n                    add1: this.updatedFields.add1,\r\n                    add2: this.updatedFields.add2,\r\n                    zipcode: this.updatedFields.zipcode,\r\n                    phone_num: this.updatedFields.phone_num,\r\n                    password: this.updatedFields.password,\r\n                },\r\n            };\r\n\r\n            const requestData = {\r\n                email: email,\r\n                updatedFields: updatedFields,\r\n            };\r\n\r\n            try {\r\n                const response = await axios.post(\"mypage/updateUserInfo\", requestData);\r\n                this.message = response.data.message;\r\n                this.fetchUserInfo(localStorage.getItem(\"userID\"));\r\n            } catch (error) {\r\n                console.error(\"회원정보 수정 오류:\", error);\r\n                this.message = \"회원정보 수정에 실패했습니다.\";\r\n            }\r\n        },\r\n        convertGender(genderCode) {\r\n            if (genderCode === \"f\") {\r\n                return \"여자\";\r\n            } else if (genderCode === \"m\") {\r\n                return \"남자\";\r\n            }\r\n        },\r\n        openAddressSearch() {\r\n            new daum.Postcode({\r\n                oncomplete: (data) => {\r\n                    if (data.userSelectedType === \"R\" || data.userSelectedType === \"J\") {\r\n                        // 우편번호와 주소 정보를 업데이트\r\n                        this.updatedFields.zipcode = data.zonecode;\r\n                        this.updatedFields.add1 = data.roadAddress || data.jibunAddress;\r\n                        this.updatedFields.add2 = \"\"; // 상세주소 초기화\r\n                        console.log(this.updatedFields);\r\n\r\n                        // 상세주소 필드로 포커스 이동\r\n                        document.getElementById(\"add2\").focus();\r\n                    }\r\n                },\r\n            }).open();\r\n        },\r\n        cancelUpdate() {\r\n            // 수정 취소 시 원래 데이터로 초기화\r\n            this.updatedFields = { ...this.originalData };\r\n            this.message = \"\"; // 메시지 초기화\r\n        },\r\n\r\n        openPasswordModal() {\r\n            this.passwordModal = true;\r\n        },\r\n        closePasswordModal() {\r\n            this.passwordModal = false;\r\n            this.newPassword = \"\";\r\n            this.confirmPassword = \"\";\r\n        },\r\n        checkNewPassword() {\r\n            const validatePassword = /^(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/;\r\n\r\n            if (this.newPassword === \"\") {\r\n                this.passwordValidationMessage = \"\";\r\n            } else if (!validatePassword.test(this.newPassword)) {\r\n                this.passwordValidationMessage = \"비밀번호는 최소 8자리 이상 영문, 숫자, 특수문자가 각각 1개 이상 포함되어야 합니다.\";\r\n            } else {\r\n                this.passwordValidationMessage = \"\";\r\n            }\r\n        },\r\n\r\n        async changePassword() {\r\n            console.log(\"?\");\r\n            if (this.newPassword === this.confirmPassword) {\r\n                try {\r\n                    const email = localStorage.getItem(\"userID\");\r\n\r\n                    const requestData = {\r\n                        email: email,\r\n                        updatedFields: {\r\n                            password: this.newPassword,\r\n                        },\r\n                    };\r\n\r\n                    const response = await axios.post(\"/mypage/updateUserPw\", requestData);\r\n                    this.message = response.data;\r\n\r\n                    this.closePasswordModal();\r\n                } catch (error) {\r\n                    console.error(\"비밀번호 변경 오류:\", error);\r\n                }\r\n            } else {\r\n                console.error(\"비밀번호가 일치하지 않습니다.\");\r\n            }\r\n        },\r\n        formatPhoneNumber() {\r\n            // 숫자 이외의 문자 제거\r\n            this.updatedFields.phone_num = this.updatedFields.phone_num.replace(/[^\\d-]/g, \"\");\r\n            // 하이픈(-) 삽입\r\n            if (this.updatedFields.phone_num.length > 2) {\r\n                this.updatedFields.phone_num = this.updatedFields.phone_num.replace(/^01([0|1|6|7|8|9])-?(\\d{4})-?(\\d{4})$/, \"01$1-$2-$3\");\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n<style scoped>\r\n.userUpdateTitle {\r\n    font-weight: bold;\r\n    font-size: 30px;\r\n}\r\n/* ... 기존 스타일 ... */\r\n\r\n.input-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    gap: 15px;\r\n}\r\n\r\n.input-item {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 10px;\r\n}\r\n.input-item label {\r\n    display: inline-block;\r\n    width: 120px; /* 레이블의 너비 조정 */\r\n    text-align: left;\r\n}\r\n.input-item input {\r\n    flex: 1; /* 입력 필드 너비 조정 */\r\n    padding: 8px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    font-size: 14px;\r\n    width: 100px; /* 너비를 2/5로 조절 */\r\n    /* readonly 상태일 때의 배경색과 글자색 설정 */\r\n    background-color: #f5f5f5; /* 배경색 */\r\n    color: #999; /* 글자색 */\r\n    pointer-events: none;\r\n}\r\n.input-item input:not([readonly]) {\r\n    /* readonly가 아닌 input에는 배경색과 글자색을 설정하지 않음 */\r\n    background-color: white;\r\n    color: black;\r\n    pointer-events: auto;\r\n}\r\n.button-group {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 20px;\r\n    gap: 20px;\r\n}\r\n\r\n.button-group button {\r\n    padding: 5px 10px; /* 버튼의 내부 여백을 조절하여 크기를 조정 */\r\n    font-size: 16px; /* 버튼의 폰트 크기를 조정 */\r\n}\r\n\r\n.status-message {\r\n    margin-top: 10px;\r\n    font-weight: bold;\r\n}\r\n.section-divider {\r\n    margin-top: 40px;\r\n    margin-bottom: 40px;\r\n}\r\n.modal {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    z-index: 1000;\r\n}\r\n\r\n.modal-content {\r\n    background-color: white;\r\n    padding: 20px;\r\n    border-radius: 5px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n    width: 400px;\r\n}\r\n\r\n.modal h3 {\r\n    font-size: 20px;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.modal label {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n    font-weight: bold;\r\n}\r\n\r\n.modal input {\r\n    width: 100%;\r\n    padding: 8px;\r\n    margin-bottom: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n}\r\n\r\n.modal span {\r\n    color: red;\r\n    font-size: 12px;\r\n    margin-top: 5px;\r\n    display: block;\r\n}\r\n\r\n.modal button {\r\n    padding: 8px 15px;\r\n    background-color: #007bff;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n}\r\n\r\n.modal button + button {\r\n    margin-left: 10px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}