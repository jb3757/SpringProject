{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nimport _imports_0 from '../assets/img/done.png';\nconst _hoisted_1 = {\n  class: \"qna-list\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"done-img\"\n})], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"qna_tilte\"\n};\nconst _hoisted_4 = {\n  class: \"qna_date\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  class: \"qna_con\"\n};\nconst _hoisted_8 = {\n  class: \"qna_reply\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.qnaDoneList, (done, i) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: i\n    }, [_createCommentVNode(\" 대기중 아이콘 \"), _hoisted_2, _createCommentVNode(\" 문의 제목/날짜 \"), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_3, _toDisplayString(done.QNA_TITLE), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, _toDisplayString(done.QNA_DATE), 1 /* TEXT */), _createCommentVNode(\" 버튼 토글-문의 내용/답변 \"), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n      onClick: _cache[0] || (_cache[0] = (...args) => $props.toggleContent && $props.toggleContent(...args)),\n      class: \"con-open\"\n    }, [_createElementVNode(\"img\", {\n      src: _ctx.conOpenBotton,\n      alt: \"con-open/close\"\n    }, null, 8 /* PROPS */, _hoisted_5)]), $props.showQnaContent ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, _toDisplayString(done.QNA_CON), 1 /* TEXT */), _createTextVNode(\"0 \"), _createElementVNode(\"div\", _hoisted_8, _toDisplayString(done.QNA_REPLY), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])])]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementVNode","src","alt","_createElementBlock","_hoisted_1","_Fragment","_renderList","$props","qnaDoneList","done","i","key","_createCommentVNode","_hoisted_2","_hoisted_3","_toDisplayString","QNA_TITLE","_hoisted_4","QNA_DATE","onClick","_cache","args","toggleContent","_ctx","conOpenBotton","showQnaContent","_hoisted_6","_hoisted_7","QNA_CON","_hoisted_8","QNA_REPLY"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\components\\qnaDone.vue"],"sourcesContent":["<script>\r\nexport default {\r\n  props: {\r\n    qnaDoneList: Object,\r\n    toggleContent: Boolean,\r\n    showQnaContent: Boolean,\r\n  },\r\n  /* computed: {\r\n    truncatedContents() {\r\n      const maxChars = 30;\r\n      if (this.done.QNA_TITLE.length > maxChars) {\r\n        return this.done.QNA_TITLE.substring(0, maxChars) + \"...\";\r\n      } else {\r\n        return this.done.QNA_TITLE;\r\n      }\r\n    },\r\n  }, */\r\n};\r\n</script>\r\n\r\n<template>\r\n\r\n  <div class=\"qna-list\">\r\n    <div :key=\"i\" v-for=\"(done, i) in qnaDoneList\">\r\n      <!-- 대기중 아이콘 -->\r\n      <div>\r\n        <img src=\"../assets/img/done.png\" alt=\"done-img\">\r\n      </div>\r\n      <!-- 문의 제목/날짜 -->\r\n      <div>\r\n        <div class=\"qna_tilte\">{{ done.QNA_TITLE}}</div>\r\n        <div class=\"qna_date\">{{ done.QNA_DATE }}</div>\r\n      <!-- 버튼 토글-문의 내용/답변 -->\r\n        <div>\r\n          <button @click=\"toggleContent\" class=\"con-open\">\r\n            <img :src=\"conOpenBotton\" alt=\"con-open/close\" />\r\n          </button>\r\n          <div v-if=\"showQnaContent\">\r\n            <div class=\"qna_con\">{{ done.QNA_CON }}</div>0\r\n            <div class=\"qna_reply\">{{ done.QNA_REPLY }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n</template>"],"mappings":";OA0BaA,UAA4B;;EAJlCC,KAAK,EAAC;AAAU;gCAGjBC,mBAAA,CAEM,c,aADJA,mBAAA,CAAiD;EAA5CC,GAA4B,EAA5BH,UAA4B;EAACI,GAAG,EAAC;;;EAIjCH,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAU;;;;;;EAOZA,KAAK,EAAC;AAAS;;EACfA,KAAK,EAAC;AAAW;;uBAjBhCI,mBAAA,CAsBM,OAtBNC,UAsBM,I,kBArBJD,mBAAA,CAoBME,SAAA,QAAAC,WAAA,CApB4BC,MAAA,CAAAC,WAAW,GAAvBC,IAAI,EAAEC,CAAC;yBAA7BP,mBAAA,CAoBM;MApBAQ,GAAG,EAAED;IAAC,IACVE,mBAAA,aAAgB,EAChBC,UAEM,EACND,mBAAA,cAAiB,EACjBZ,mBAAA,CAaM,cAZJA,mBAAA,CAAgD,OAAhDc,UAAgD,EAAAC,gBAAA,CAAtBN,IAAI,CAACO,SAAS,kBACxChB,mBAAA,CAA+C,OAA/CiB,UAA+C,EAAAF,gBAAA,CAAtBN,IAAI,CAACS,QAAQ,kBACxCN,mBAAA,oBAAuB,EACrBZ,mBAAA,CAQM,cAPJA,mBAAA,CAES;MAFAmB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEd,MAAA,CAAAe,aAAA,IAAAf,MAAA,CAAAe,aAAA,IAAAD,IAAA,CAAa;MAAEtB,KAAK,EAAC;QACnCC,mBAAA,CAAiD;MAA3CC,GAAG,EAAEsB,IAAA,CAAAC,aAAa;MAAEtB,GAAG,EAAC;2CAErBK,MAAA,CAAAkB,cAAc,I,cAAzBtB,mBAAA,CAGM,OAAAuB,UAAA,GAFJ1B,mBAAA,CAA6C,OAA7C2B,UAA6C,EAAAZ,gBAAA,CAArBN,IAAI,CAACmB,OAAO,kB,iBAAS,IAC7C,GAAA5B,mBAAA,CAAiD,OAAjD6B,UAAiD,EAAAd,gBAAA,CAAvBN,IAAI,CAACqB,SAAS,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}