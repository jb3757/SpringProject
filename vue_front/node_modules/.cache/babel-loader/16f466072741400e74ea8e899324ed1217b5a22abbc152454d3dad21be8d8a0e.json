{"ast":null,"code":"import axios from \"axios\";\nimport GnbBar from \"../components/gnbBar.vue\";\nimport TabsWrapper from \"../components/TabsWrapper.vue\";\nimport TabItem from \"../components/TabItem.vue\";\nimport qnaAll from \"../components/qnaAll.vue\";\nimport qnaWaiting from \"../components/qnaWaiting.vue\";\nimport qnaDone from \"../components/qnaDone.vue\";\nexport default {\n  components: {\n    GnbBar,\n    TabsWrapper,\n    TabItem,\n    qnaAll,\n    qnaWaiting,\n    qnaDone\n  },\n  name: \"qnaList\",\n  data() {\n    return {\n      currentTagName: \"전체(11)\",\n      showQnaContent: true,\n      repWaiting: true,\n      repDone: false,\n      conOpenBotton: require(\"../assets/img/qna-open.png\"),\n      conCloseBotton: require(\"../assets/img/qna-close.png\"),\n      nodata: false,\n      qnaAll: []\n    };\n  },\n  created() {\n    this.email = localStorage.getItem(\"userID\");\n    this.qnaAllList();\n  },\n  methods: {\n    toggleContent() {\n      this.showQnaContent = !this.showQnaContent;\n      if (this.conOpenBotton === require(\"../assets/img/qna-open.png\")) {\n        this.conOpenBotton = this.conCloseBotton;\n      } else {\n        this.conOpenBotton = require(\"../assets/img/qna-open.png\");\n      }\n    },\n    async qnaAllList() {\n      this.nodata = false;\n      try {\n        const response = await axios.get(\"/qna/qnaAll\", {\n          email: this.email\n        });\n        this.qnaAll = response.data.qnaAll;\n        console.log(this.qnaAll);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  },\n  computed: {\n    currentList() {\n      return this.repList.filter(el => el.tag == this.currentTagName);\n    }\n  }\n};","map":{"version":3,"names":["axios","GnbBar","TabsWrapper","TabItem","qnaAll","qnaWaiting","qnaDone","components","name","data","currentTagName","showQnaContent","repWaiting","repDone","conOpenBotton","require","conCloseBotton","nodata","created","email","localStorage","getItem","qnaAllList","methods","toggleContent","response","get","console","log","error","computed","currentList","repList","filter","el","tag"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\qnaList.vue"],"sourcesContent":["<style src=\"../assets/css/qnaList.css\"></style>\r\n<template>\r\n  <div>\r\n    <GnbBar />\r\n\r\n    <div class=\"mypage_menu\"></div>\r\n    <div class=\"right_box\">\r\n      <h1 class=\"qna_title\">1:1 문의</h1>\r\n      <!-- 탭시작 -->\r\n      <section class=\"tabWrap\">\r\n        <TabsWrapper>\r\n          <TabItem title=\"전체(11)\">           \r\n            <a href=\"#\">\r\n              <div class=\"qna-btn\" v-if=\"!nodata\">\r\n                1:1 문의하기\r\n              </div>\r\n            </a>\r\n            \r\n            <div class=\"qna-all\">\r\n              <div v-if=\"qnaAll.length === 0\">\r\n                <div id=\"nodata\" class=\"nodata\">작성한 문의글이 없습니다</div>\r\n              </div>\r\n              <qnaAll\r\n                v-if=\"!nodata && qnaAll.length > 0\"\r\n                :qnaAll=\"qnaAll\"\r\n                :showQnaContent=\"showQnaContent\"\r\n                :key=\"qnaAll[0].QNA_ID\"\r\n                :editMode=\"editMode\"\r\n              ></qnaAll>\r\n            </div>\r\n          </TabItem>\r\n          <TabItem title=\"답변 대기(2)\">\r\n            <a href=\"#\">\r\n              <div class=\"qna-btn\" v-if=\"!nodata\">\r\n                1:1 문의하기\r\n              </div>\r\n            </a>\r\n\r\n            <div class=\"qna-all\">\r\n              <div v-if=\"qnaAll.length === 0\">\r\n                <div id=\"nodata\" class=\"nodata\">답변 대기중인 문의글이 없습니다</div>\r\n              </div>\r\n              <qnaWaiting\r\n                v-if=\"!nodata && qnaAll.length > 0\"\r\n                :qnaAll=\"qnaAll\"\r\n                :showQnaContent=\"showQnaContent\"\r\n                :key=\"qnaAll[0].QNA_ID\"\r\n                :editMode=\"editMode\"\r\n              ></qnaWaiting>\r\n            </div>\r\n          </TabItem>\r\n          <TabItem title=\"답변 완료(9)\">\r\n            <a href=\"#\">\r\n              <div class=\"qna-btn\" v-if=\"!nodata\">\r\n                1:1 문의하기\r\n              </div>\r\n            </a>\r\n\r\n            <div class=\"qna-all\">\r\n              <div v-if=\"qnaAll.length === 0\">\r\n                <div id=\"nodata\" class=\"nodata\">답변 완료된 문의글이 없습니다</div>\r\n              </div>\r\n              <qnaDone\r\n                v-if=\"!nodata && qnaAll.length > 0\"\r\n                :qnaAll=\"qnaAll\"\r\n                :showQnaContent=\"showQnaContent\"\r\n                :key=\"qnaAll[0].QNA_ID\"\r\n                :editMode=\"editMode\"\r\n              ></qnaDone>\r\n            </div>\r\n          </TabItem>\r\n        </TabsWrapper>\r\n      </section>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nimport GnbBar from \"../components/gnbBar.vue\";\r\nimport TabsWrapper from \"../components/TabsWrapper.vue\";\r\nimport TabItem from \"../components/TabItem.vue\";\r\nimport qnaAll from \"../components/qnaAll.vue\";\r\nimport qnaWaiting from \"../components/qnaWaiting.vue\";\r\nimport qnaDone from \"../components/qnaDone.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    GnbBar,\r\n    TabsWrapper,\r\n    TabItem,\r\n    qnaAll,\r\n    qnaWaiting,\r\n    qnaDone,\r\n  },\r\n  name: \"qnaList\",\r\n  data() {\r\n    return {\r\n      currentTagName: \"전체(11)\",\r\n      showQnaContent: true,\r\n      repWaiting: true,\r\n      repDone: false,\r\n      conOpenBotton: require(\"../assets/img/qna-open.png\"),\r\n      conCloseBotton: require(\"../assets/img/qna-close.png\"),\r\n      nodata: false,     \r\n      qnaAll: [], \r\n    };\r\n  },\r\n    created() {\r\n      this.email = localStorage.getItem(\"userID\");  \r\n     \r\n      this.qnaAllList();\r\n    },\r\n    methods: {\r\n    toggleContent() {\r\n      this.showQnaContent = !this.showQnaContent;\r\n\r\n      if (this.conOpenBotton === require(\"../assets/img/qna-open.png\")) {\r\n        this.conOpenBotton = this.conCloseBotton;\r\n      } else {\r\n        this.conOpenBotton = require(\"../assets/img/qna-open.png\");\r\n      }\r\n    },  \r\n    async qnaAllList() {\r\n      this.nodata = false;\r\n    try {\r\n      const response = await axios.get(\"/qna/qnaAll\", { email: this.email });\r\n      this.qnaAll = response.data.qnaAll;\r\n      console.log(this.qnaAll);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  },  \r\n    \r\n  },\r\n  computed: {\r\n    currentList() {\r\n      return this.repList.filter((el) => el.tag == this.currentTagName);\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AA6EA,OAAOA,KAAI,MAAO,OAAO;AAEzB,OAAOC,MAAK,MAAO,0BAA0B;AAC7C,OAAOC,WAAU,MAAO,+BAA+B;AACvD,OAAOC,OAAM,MAAO,2BAA2B;AAC/C,OAAOC,MAAK,MAAO,0BAA0B;AAC7C,OAAOC,UAAS,MAAO,8BAA8B;AACrD,OAAOC,OAAM,MAAO,2BAA2B;AAE/C,eAAe;EACbC,UAAU,EAAE;IACVN,MAAM;IACNC,WAAW;IACXC,OAAO;IACPC,MAAM;IACNC,UAAU;IACVC;EACF,CAAC;EACDE,IAAI,EAAE,SAAS;EACfC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,QAAQ;MACxBC,cAAc,EAAE,IAAI;MACpBC,UAAU,EAAE,IAAI;MAChBC,OAAO,EAAE,KAAK;MACdC,aAAa,EAAEC,OAAO,CAAC,4BAA4B,CAAC;MACpDC,cAAc,EAAED,OAAO,CAAC,6BAA6B,CAAC;MACtDE,MAAM,EAAE,KAAK;MACbb,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACCc,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAE3C,IAAI,CAACC,UAAU,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACTC,aAAaA,CAAA,EAAG;MACd,IAAI,CAACb,cAAa,GAAI,CAAC,IAAI,CAACA,cAAc;MAE1C,IAAI,IAAI,CAACG,aAAY,KAAMC,OAAO,CAAC,4BAA4B,CAAC,EAAE;QAChE,IAAI,CAACD,aAAY,GAAI,IAAI,CAACE,cAAc;MAC1C,OAAO;QACL,IAAI,CAACF,aAAY,GAAIC,OAAO,CAAC,4BAA4B,CAAC;MAC5D;IACF,CAAC;IACD,MAAMO,UAAUA,CAAA,EAAG;MACjB,IAAI,CAACL,MAAK,GAAI,KAAK;MACrB,IAAI;QACF,MAAMQ,QAAO,GAAI,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,aAAa,EAAE;UAAEP,KAAK,EAAE,IAAI,CAACA;QAAM,CAAC,CAAC;QACtE,IAAI,CAACf,MAAK,GAAIqB,QAAQ,CAAChB,IAAI,CAACL,MAAM;QAClCuB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACxB,MAAM,CAAC;MAC1B,EAAE,OAAOyB,KAAK,EAAE;QACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MACpB;IACF;EAEA,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACC,OAAO,CAACC,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACC,GAAE,IAAK,IAAI,CAACzB,cAAc,CAAC;IACnE;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}