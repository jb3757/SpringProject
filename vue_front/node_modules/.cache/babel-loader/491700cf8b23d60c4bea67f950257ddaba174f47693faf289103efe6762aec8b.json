{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport GnbBar from '../components/gnbBar.vue';\nexport default {\n  components: {\n    GnbBar\n  },\n  data() {\n    return {\n      qna: {\n        email: \"\",\n        qna_id: \"\",\n        qna_title: \"\",\n        qna_con: \"\",\n        qna_rep: 0\n      },\n      qna_id: \"\"\n    };\n  },\n  created() {\n    this.qna.email = localStorage.getItem(\"userID\");\n    this.qna.qna_id = this.$route.params.id; // 파라미터에서 아이디 받아오기\n    this.getOriginalData();\n  },\n  methods: {\n    getOriginalData() {\n      axios({\n        url: \"/qna/qnaOriginalData\",\n        method: \"post\",\n        data: {\n          QNA_ID: this.qna.qna_id\n        }\n      }).then(res => {\n        this.qna.qna_title = res.data[0].QNA_TITLE;\n        this.qna.qna_con = res.data[0].QNA_CON;\n      });\n    },\n    async qnaEditData() {\n      if (!this.qna.qna_title || !this.qna.qna_con) {\n        alert(\"제목과 내용을 모두 입력해주세요.\");\n        return;\n      }\n      const editData = {\n        qna_title: this.qna.qna_title,\n        qna_con: this.qna.qna_con,\n        qna_id: this.qna.qna_id\n      };\n      axios({\n        url: \"/qna/qnaEdit\",\n        method: \"post\",\n        data: editData\n      }).then(res => {\n        console.log(editData);\n        if (res.data) {\n          alert('문의 내용이 수정되었습니다.');\n          console.log(editData);\n          this.$router.push({\n            path: '/qna'\n          });\n          console.log('yeah');\n        } else {\n          alert('문의 수정에 실패했습니다.\\n다시 시도해주세요.');\n        }\n      });\n      /* if(!this.qna.qna_title || !this.qna.qna_con) {\r\n        alert(\"제목과 내용을 모두 입력해주세요.\");\r\n        return;\r\n      }\r\n        const editData = {\r\n        qna_id: this.qna.qna_id,\r\n        qna_title: this.qna.qna_title,\r\n        qna_con: this.qna.qna_con\r\n      }\r\n        axios.post('/qna/qnaEdit', editData)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          alert('문의 내용이 수정되었습니다.');\r\n          console.log(editData);\r\n          this.$router.push({ path: '/qna' });\r\n        } else {\r\n          alert('문의 수정에 실패했습니다.\\n다시 시도해주세요.');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      }); */\n    }\n    /* async qnaEdit() {\r\n      const editData = {\r\n        QNA_TITLE: this.qna_title,\r\n        QNA_CON: this.qna_con,\r\n        QNA_ID: this.qna_id\r\n      }\r\n        axios.post(\"/qna/qnaEdit\", editData)\r\n          .then(response => {\r\n            window.location.reload();\r\n          })\r\n          .catch(error => {\r\n            console.error(\"Error deleting Q&A\", error);\r\n          });\r\n    }, */\n  }\n};","map":{"version":3,"names":["axios","GnbBar","components","data","qna","email","qna_id","qna_title","qna_con","qna_rep","created","localStorage","getItem","$route","params","id","getOriginalData","methods","url","method","QNA_ID","then","res","QNA_TITLE","QNA_CON","qnaEditData","alert","editData","console","log","$router","push","path"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\qnaEdit.vue"],"sourcesContent":["<style src=\"../assets/css/qnaEdit.css\"></style>\r\n<template>\r\n  <div>\r\n    <GnbBar />\r\n\r\n    <div class=\"mypage_menu\"></div>\r\n    <div class=\"right_box\">\r\n      <h1 class=\"qna_title_big\">1:1 문의 수정</h1>\r\n      <div class=\"write_box\">\r\n        <div class=\"title_write\">\r\n          <h2 class=\"title_text\">제목</h2>\r\n          <input class=\"title_input\" type=\"text\" v-model=\"this.qna.qna_title\">\r\n        </div>\r\n        <div class=\"con_write\">\r\n          <h2 class=\"con_text\">내용</h2>\r\n          <input class=\"con_input\" type=\"text\" v-model=\"this.qna.qna_con\">\r\n        </div>\r\n      </div>\r\n      <div class=\"btn_box\">\r\n        <button class=\"btn_cancel\">취소</button>\r\n        <button class=\"btn_accept\" @click=\"qnaEditData\">문의 수정</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nimport GnbBar from '../components/gnbBar.vue'\r\n\r\nexport default {\r\n  components: { \r\n    GnbBar \r\n  },\r\n  data() {\r\n    return {\r\n      qna: {\r\n        email: \"\",\r\n        qna_id: \"\",\r\n        qna_title: \"\",\r\n        qna_con: \"\",\r\n        qna_rep: 0\r\n      },\r\n      qna_id: \"\",\r\n    }\r\n  },\r\n  created() {\r\n    this.qna.email = localStorage.getItem(\"userID\");\r\n    this.qna.qna_id = this.$route.params.id; // 파라미터에서 아이디 받아오기\r\n    this.getOriginalData();\r\n  },\r\n  methods: {\r\n    getOriginalData() {\r\n      axios({\r\n          url: \"/qna/qnaOriginalData\",\r\n          method: \"post\",\r\n          data: { QNA_ID: this.qna.qna_id },\r\n      }).then((res) => {\r\n        this.qna.qna_title = res.data[0].QNA_TITLE;\r\n        this.qna.qna_con = res.data[0].QNA_CON;\r\n      });\r\n    },\r\n    async qnaEditData() {\r\n      if(!this.qna.qna_title || !this.qna.qna_con) {\r\n        alert(\"제목과 내용을 모두 입력해주세요.\");\r\n        return;\r\n      }\r\n\r\n      const editData = {\r\n        qna_title: this.qna.qna_title,\r\n        qna_con: this.qna.qna_con,\r\n        qna_id: this.qna.qna_id,\r\n      }\r\n      axios({\r\n          url: \"/qna/qnaEdit\",\r\n          method: \"post\",\r\n          data: editData,\r\n      }).then((res) => {\r\n        console.log(editData);\r\n        if (res.data) {\r\n          alert('문의 내용이 수정되었습니다.');\r\n          console.log(editData);\r\n          this.$router.push({ path: '/qna' });          \r\n          console.log('yeah');\r\n        } else {\r\n          alert('문의 수정에 실패했습니다.\\n다시 시도해주세요.');\r\n        }\r\n      });\r\n      /* if(!this.qna.qna_title || !this.qna.qna_con) {\r\n        alert(\"제목과 내용을 모두 입력해주세요.\");\r\n        return;\r\n      }\r\n\r\n      const editData = {\r\n        qna_id: this.qna.qna_id,\r\n        qna_title: this.qna.qna_title,\r\n        qna_con: this.qna.qna_con\r\n      }\r\n\r\n      axios.post('/qna/qnaEdit', editData)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          alert('문의 내용이 수정되었습니다.');\r\n          console.log(editData);\r\n          this.$router.push({ path: '/qna' });\r\n        } else {\r\n          alert('문의 수정에 실패했습니다.\\n다시 시도해주세요.');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      }); */\r\n    },\r\n    /* async qnaEdit() {\r\n      const editData = {\r\n        QNA_TITLE: this.qna_title,\r\n        QNA_CON: this.qna_con,\r\n        QNA_ID: this.qna_id\r\n      }\r\n\r\n      axios.post(\"/qna/qnaEdit\", editData)\r\n          .then(response => {\r\n            window.location.reload();\r\n          })\r\n          .catch(error => {\r\n            console.error(\"Error deleting Q&A\", error);\r\n          });\r\n    }, */\r\n  }\r\n  \r\n}\r\n</script>"],"mappings":";AA2BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,OAAOC,MAAK,MAAO,0BAAyB;AAE5C,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE;QACHC,KAAK,EAAE,EAAE;QACTC,MAAM,EAAE,EAAE;QACVC,SAAS,EAAE,EAAE;QACbC,OAAO,EAAE,EAAE;QACXC,OAAO,EAAE;MACX,CAAC;MACDH,MAAM,EAAE;IACV;EACF,CAAC;EACDI,OAAOA,CAAA,EAAG;IACR,IAAI,CAACN,GAAG,CAACC,KAAI,GAAIM,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC/C,IAAI,CAACR,GAAG,CAACE,MAAK,GAAI,IAAI,CAACO,MAAM,CAACC,MAAM,CAACC,EAAE,EAAE;IACzC,IAAI,CAACC,eAAe,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACPD,eAAeA,CAAA,EAAG;MAChBhB,KAAK,CAAC;QACFkB,GAAG,EAAE,sBAAsB;QAC3BC,MAAM,EAAE,MAAM;QACdhB,IAAI,EAAE;UAAEiB,MAAM,EAAE,IAAI,CAAChB,GAAG,CAACE;QAAO;MACpC,CAAC,CAAC,CAACe,IAAI,CAAEC,GAAG,IAAK;QACf,IAAI,CAAClB,GAAG,CAACG,SAAQ,GAAIe,GAAG,CAACnB,IAAI,CAAC,CAAC,CAAC,CAACoB,SAAS;QAC1C,IAAI,CAACnB,GAAG,CAACI,OAAM,GAAIc,GAAG,CAACnB,IAAI,CAAC,CAAC,CAAC,CAACqB,OAAO;MACxC,CAAC,CAAC;IACJ,CAAC;IACD,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAG,CAAC,IAAI,CAACrB,GAAG,CAACG,SAAQ,IAAK,CAAC,IAAI,CAACH,GAAG,CAACI,OAAO,EAAE;QAC3CkB,KAAK,CAAC,oBAAoB,CAAC;QAC3B;MACF;MAEA,MAAMC,QAAO,GAAI;QACfpB,SAAS,EAAE,IAAI,CAACH,GAAG,CAACG,SAAS;QAC7BC,OAAO,EAAE,IAAI,CAACJ,GAAG,CAACI,OAAO;QACzBF,MAAM,EAAE,IAAI,CAACF,GAAG,CAACE;MACnB;MACAN,KAAK,CAAC;QACFkB,GAAG,EAAE,cAAc;QACnBC,MAAM,EAAE,MAAM;QACdhB,IAAI,EAAEwB;MACV,CAAC,CAAC,CAACN,IAAI,CAAEC,GAAG,IAAK;QACfM,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrB,IAAIL,GAAG,CAACnB,IAAI,EAAE;UACZuB,KAAK,CAAC,iBAAiB,CAAC;UACxBE,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;UACrB,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC;YAAEC,IAAI,EAAE;UAAO,CAAC,CAAC;UACnCJ,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;QACrB,OAAO;UACLH,KAAK,CAAC,4BAA4B,CAAC;QACrC;MACF,CAAC,CAAC;MACF;;;;;;;;;;;;;;;;;;;;;;IAwBF;IACA;;;;;;;;;;;;;;EAeF;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}