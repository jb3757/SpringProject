{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass } from \"vue\";\nimport _imports_0 from '../assets/img/heartFill.png';\nimport _imports_1 from '../assets/img/heart.png';\nimport _imports_2 from '../assets/img/cart2.png';\nconst _hoisted_1 = {\n  class: \"best\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"best_header\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"추천\")], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0,\n  class: \"main_container_blur\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"로그인하시면 취향에 맞는 책을 보여드려요\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"/login\"\n}, \"로그인하고 책 추천받기\", -1 /* HOISTED */);\nconst _hoisted_6 = [_hoisted_4, _hoisted_5];\nconst _hoisted_7 = {\n  ref: \"mainBlur\",\n  class: \"best_items blur\"\n};\nconst _hoisted_8 = {\n  class: \"best_item_img\"\n};\nconst _hoisted_9 = [\"href\"];\nconst _hoisted_10 = [\"src\"];\nconst _hoisted_11 = {\n  class: \"best_item_info\"\n};\nconst _hoisted_12 = {\n  class: \"best_item_info_title\"\n};\nconst _hoisted_13 = [\"href\"];\nconst _hoisted_14 = {\n  class: \"best_item_info_author\"\n};\nconst _hoisted_15 = {\n  class: \"best_item_info_price\"\n};\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"span\", null, \"원\", -1 /* HOISTED */);\nconst _hoisted_17 = {\n  class: \"best_item_info_summary\"\n};\nconst _hoisted_18 = {\n  class: \"best_item_info_star\"\n};\nconst _hoisted_19 = {\n  key: 0,\n  class: \"best_item_info_star_num\"\n};\nconst _hoisted_20 = {\n  key: 1,\n  class: \"best_item_info_star_num\"\n};\nconst _hoisted_21 = {\n  class: \"best_item_order\"\n};\nconst _hoisted_22 = [\"onClick\"];\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"p\", null, [/*#__PURE__*/_createElementVNode(\"span\", null, \"내일(7/28)\"), /*#__PURE__*/_createTextVNode(\" 도착예정\")], -1 /* HOISTED */);\nconst _hoisted_24 = {\n  class: \"best_item_btn\"\n};\nconst _hoisted_25 = [\"onClick\"];\nconst _hoisted_26 = [\"onClick\"];\nconst _hoisted_27 = [\"onClick\"];\nconst _hoisted_28 = {\n  class: \"best_item\"\n};\nconst _hoisted_29 = {\n  class: \"best_item_img\"\n};\nconst _hoisted_30 = {\n  href: \"\"\n};\nconst _hoisted_31 = [\"src\"];\nconst _hoisted_32 = {\n  class: \"best_item_info\"\n};\nconst _hoisted_33 = {\n  class: \"best_item_info_title\"\n};\nconst _hoisted_34 = {\n  href: \"\"\n};\nconst _hoisted_35 = {\n  class: \"best_item_info_author\"\n};\nconst _hoisted_36 = {\n  class: \"best_item_info_price\"\n};\nconst _hoisted_37 = /*#__PURE__*/_createElementVNode(\"span\", null, \"원\", -1 /* HOISTED */);\nconst _hoisted_38 = {\n  class: \"best_item_info_summary\"\n};\nconst _hoisted_39 = {\n  class: \"best_item_info_star\"\n};\nconst _hoisted_40 = {\n  key: 0,\n  class: \"best_item_info_star_num\"\n};\nconst _hoisted_41 = {\n  key: 1,\n  class: \"best_item_info_star_num\"\n};\nconst _hoisted_42 = {\n  class: \"best_item_order\"\n};\nconst _hoisted_43 = [\"onClick\"];\nconst _hoisted_44 = /*#__PURE__*/_createElementVNode(\"p\", null, [/*#__PURE__*/_createElementVNode(\"span\", null, \"내일(7/28)\"), /*#__PURE__*/_createTextVNode(\" 도착예정\")], -1 /* HOISTED */);\nconst _hoisted_45 = {\n  class: \"best_item_btn\"\n};\nconst _hoisted_46 = [\"onClick\"];\nconst _hoisted_47 = [\"onClick\"];\nconst _hoisted_48 = [\"onClick\"];\nconst _hoisted_49 = {\n  class: \"booklist_paging\"\n};\nconst _hoisted_50 = [\"disabled\"];\nconst _hoisted_51 = [\"disabled\"];\nconst _hoisted_52 = [\"onClick\"];\nconst _hoisted_53 = [\"disabled\"];\nconst _hoisted_54 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_GnbBar = _resolveComponent(\"GnbBar\");\n  const _component_StarIcon = _resolveComponent(\"StarIcon\");\n  const _component_Floating = _resolveComponent(\"Floating\");\n  const _component_ScrollTop = _resolveComponent(\"ScrollTop\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_GnbBar, {\n    ref: \"childComponent\"\n  }, null, 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _ctx.logined == false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _hoisted_6)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_7, [_createCommentVNode(\" 로그인시 \"), _ctx.logined == true ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList(_ctx.displayedPosts, (item, i) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: i,\n      class: \"best_item\"\n    }, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"a\", {\n      href: `/detail/${item.BOOK_ID}`\n    }, [_createElementVNode(\"img\", {\n      src: item.BOOK_COVER,\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_10)], 8 /* PROPS */, _hoisted_9)]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"h2\", _hoisted_12, [_createElementVNode(\"a\", {\n      href: `/detail/${item.BOOK_ID}`\n    }, _toDisplayString(item.BOOK_TITLE), 9 /* TEXT, PROPS */, _hoisted_13)]), _createElementVNode(\"span\", _hoisted_14, _toDisplayString(item.BOOK_AUTHOR) + \" | \" + _toDisplayString(item.BOOK_PUBDATE), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"span\", null, _toDisplayString($options.formatNumber(item.BOOK_PRICE)), 1 /* TEXT */), _hoisted_16]), _createElementVNode(\"p\", _hoisted_17, _toDisplayString(item.BOOK_DESCRIPTION), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_18, [item.reviewpoint == 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_19, \"0.0\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_20, _toDisplayString($options.formatReviewScore(item.reviewpoint)), 1 /* TEXT */)), _createVNode(_component_StarIcon, {\n      rating: $options.convertRatingToHalfStars($data.reviewScore[i])\n    }, null, 8 /* PROPS */, [\"rating\"])])]), _createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"a\", {\n      onClick: $event => $options.goToPay(item.BOOK_ID, item.BOOK_PRICE),\n      href: \"#\"\n    }, \"결제하러 가기\", 8 /* PROPS */, _hoisted_22), _hoisted_23]), _createElementVNode(\"div\", _hoisted_24, [item.isLiked == true ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 0,\n      onClick: $event => $options.likeToggle(item.BOOK_ID),\n      src: _imports_0,\n      alt: \"Heart Filled\"\n    }, null, 8 /* PROPS */, _hoisted_25)) : item.isLiked == false ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 1,\n      onClick: $event => $options.likeToggle(item.BOOK_ID),\n      src: _imports_1,\n      alt: \"Heart\"\n    }, null, 8 /* PROPS */, _hoisted_26)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"img\", {\n      onClick: $event => $options.addToCart(item.BOOK_ID),\n      src: _imports_2,\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_27)])]);\n  }), 128 /* KEYED_FRAGMENT */)) : _ctx.logined == false ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 비로그인시 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.bestBook, (item, i) => {\n    return _openBlock(), _createElementBlock(\"div\", _hoisted_28, [_createElementVNode(\"div\", _hoisted_29, [_createElementVNode(\"a\", _hoisted_30, [_createElementVNode(\"img\", {\n      src: item.BOOK_COVER,\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_31)])]), _createElementVNode(\"div\", _hoisted_32, [_createElementVNode(\"h2\", _hoisted_33, [_createElementVNode(\"a\", _hoisted_34, _toDisplayString(item.BOOK_TITLE), 1 /* TEXT */)]), _createElementVNode(\"span\", _hoisted_35, _toDisplayString(item.BOOK_AUTHOR) + \" | \" + _toDisplayString(item.PUBDATE), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_36, [_createElementVNode(\"span\", null, _toDisplayString($options.formatNumber(item.BOOK_PRICE)), 1 /* TEXT */), _hoisted_37]), _createElementVNode(\"p\", _hoisted_38, _toDisplayString(item.BOOK_DESCRIPTION), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_39, [item.reviewpoint == 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_40, \"0.0\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_41, _toDisplayString($options.formatReviewScore(10)), 1 /* TEXT */)), _createVNode(_component_StarIcon, {\n      rating: $options.convertRatingToHalfStars(10)\n    }, null, 8 /* PROPS */, [\"rating\"])])]), _createElementVNode(\"div\", _hoisted_42, [_createElementVNode(\"a\", {\n      onClick: $event => $options.goToPay(item.BOOK_ID, item.BOOK_PRICE),\n      href: \"#\"\n    }, \"결제하러 가기\", 8 /* PROPS */, _hoisted_43), _hoisted_44]), _createElementVNode(\"div\", _hoisted_45, [item.isLiked == true ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 0,\n      onClick: $event => $options.likeToggle(item.BOOK_ID),\n      src: _imports_0,\n      alt: \"Heart Filled\"\n    }, null, 8 /* PROPS */, _hoisted_46)) : item.isLiked == false ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 1,\n      onClick: $event => $options.likeToggle(item.BOOK_ID),\n      src: _imports_1,\n      alt: \"Heart\"\n    }, null, 8 /* PROPS */, _hoisted_47)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"img\", {\n      onClick: $event => $options.addToCart(item.BOOK_ID),\n      src: _imports_2,\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_48)])]);\n  }), 256 /* UNKEYED_FRAGMENT */))], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_49, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.changePage('first')),\n    disabled: $data.currentPage === 1\n  }, \"맨앞\", 8 /* PROPS */, _hoisted_50), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.changePage($data.currentPage - 1)),\n    disabled: $data.currentPage === 1\n  }, \"이전\", 8 /* PROPS */, _hoisted_51), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.pageNumbers, pageNumber => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: pageNumber,\n      onClick: $event => $options.changePage(pageNumber),\n      class: _normalizeClass({\n        active: pageNumber === $data.currentPage\n      })\n    }, _toDisplayString(pageNumber), 11 /* TEXT, CLASS, PROPS */, _hoisted_52);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.changePage($data.currentPage + 1)),\n    disabled: $data.currentPage === $options.totalPages\n  }, \"다음\", 8 /* PROPS */, _hoisted_53), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => $options.changePage('last')),\n    disabled: $data.currentPage === $options.totalPages\n  }, \"맨뒤\", 8 /* PROPS */, _hoisted_54)]), _createCommentVNode(\" 플로팅\"), _createVNode(_component_Floating), _createCommentVNode(\" 스크롤 TOP \"), _createVNode(_component_ScrollTop)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","class","_createElementVNode","href","_hoisted_4","_hoisted_5","ref","_createVNode","_component_GnbBar","_hoisted_1","_hoisted_2","_ctx","logined","_createElementBlock","_hoisted_3","_hoisted_6","_hoisted_7","_createCommentVNode","_Fragment","key","_renderList","displayedPosts","item","i","_hoisted_8","BOOK_ID","src","BOOK_COVER","alt","_hoisted_11","_hoisted_12","BOOK_TITLE","_hoisted_13","_hoisted_14","_toDisplayString","BOOK_AUTHOR","BOOK_PUBDATE","_hoisted_15","$options","formatNumber","BOOK_PRICE","_hoisted_16","_hoisted_17","BOOK_DESCRIPTION","_hoisted_18","reviewpoint","_hoisted_19","_hoisted_20","formatReviewScore","_component_StarIcon","rating","convertRatingToHalfStars","$data","reviewScore","_hoisted_21","onClick","$event","goToPay","_hoisted_22","_hoisted_23","_hoisted_24","isLiked","likeToggle","addToCart","bestBook","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","PUBDATE","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_49","_cache","changePage","disabled","currentPage","_hoisted_50","_hoisted_51","pageNumbers","pageNumber","_normalizeClass","active","_hoisted_52","totalPages","_hoisted_53","_hoisted_54","_component_Floating","_component_ScrollTop"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\recommendList.vue"],"sourcesContent":["<style src=\"../assets/css/bestList.css\"></style>\r\n\r\n<template>\r\n    <GnbBar ref=\"childComponent\" />\r\n    <div class=\"best\">\r\n        <div class=\"best_header\">\r\n            <h2>추천</h2>\r\n        </div>\r\n        <div v-if=\"logined == false\" class=\"main_container_blur\">\r\n            <h2>로그인하시면 취향에 맞는 책을 보여드려요</h2>\r\n            <a href=\"/login\">로그인하고 책 추천받기</a>\r\n        </div>\r\n        <div ref=\"mainBlur\" class=\"best_items blur\">\r\n            <!-- 로그인시 -->\r\n            <div v-if=\"logined == true\" v-for=\"(item, i) in displayedPosts\" :key=\"i\" class=\"best_item\">\r\n                <div class=\"best_item_img\">\r\n                    <a :href=\"`/detail/${item.BOOK_ID}`\"><img :src=\"item.BOOK_COVER\" alt=\"\" /></a>\r\n                </div>\r\n                <div class=\"best_item_info\">\r\n                    <h2 class=\"best_item_info_title\">\r\n                        <a :href=\"`/detail/${item.BOOK_ID}`\">{{ item.BOOK_TITLE }}</a>\r\n                    </h2>\r\n                    <span class=\"best_item_info_author\">{{ item.BOOK_AUTHOR }} | {{ item.BOOK_PUBDATE }}</span>\r\n                    <div class=\"best_item_info_price\">\r\n                        <span>{{ formatNumber(item.BOOK_PRICE) }}</span>\r\n                        <span>원</span>\r\n                    </div>\r\n                    <p class=\"best_item_info_summary\">\r\n                        {{ item.BOOK_DESCRIPTION }}\r\n                    </p>\r\n                    <div class=\"best_item_info_star\">\r\n                        <span v-if=\"item.reviewpoint == 0\" class=\"best_item_info_star_num\">0.0</span>\r\n                        <span v-else class=\"best_item_info_star_num\">{{ formatReviewScore(item.reviewpoint) }}</span>\r\n                        <StarIcon :rating=\"convertRatingToHalfStars(reviewScore[i])\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"best_item_order\">\r\n                    <a @click=\"goToPay(item.BOOK_ID, item.BOOK_PRICE)\" href=\"#\">결제하러 가기</a>\r\n                    <p><span>내일(7/28)</span> 도착예정</p>\r\n                </div>\r\n                <div class=\"best_item_btn\">\r\n                    <img v-if=\"item.isLiked == true\" @click=\"likeToggle(item.BOOK_ID)\" src=\"../assets/img/heartFill.png\" alt=\"Heart Filled\" />\r\n                    <img v-else-if=\"item.isLiked == false\" @click=\"likeToggle(item.BOOK_ID)\" src=\"../assets/img/heart.png\" alt=\"Heart\" />\r\n                    <img @click=\"addToCart(item.BOOK_ID)\" src=\"../assets/img/cart2.png\" alt=\"\" />\r\n                </div>\r\n            </div>\r\n            <!-- 비로그인시 -->\r\n            <div v-else-if=\"logined == false\" v-for=\"(item, i) in bestBook\" class=\"best_item\">\r\n                <div class=\"best_item_img\">\r\n                    <a href=\"\"><img :src=\"item.BOOK_COVER\" alt=\"\" /></a>\r\n                </div>\r\n                <div class=\"best_item_info\">\r\n                    <h2 class=\"best_item_info_title\">\r\n                        <a href=\"\">{{ item.BOOK_TITLE }}</a>\r\n                    </h2>\r\n                    <span class=\"best_item_info_author\">{{ item.BOOK_AUTHOR }} | {{ item.PUBDATE }}</span>\r\n                    <div class=\"best_item_info_price\">\r\n                        <span>{{ formatNumber(item.BOOK_PRICE) }}</span>\r\n                        <span>원</span>\r\n                    </div>\r\n                    <p class=\"best_item_info_summary\">\r\n                        {{ item.BOOK_DESCRIPTION }}\r\n                    </p>\r\n                    <div class=\"best_item_info_star\">\r\n                        <span v-if=\"item.reviewpoint == 0\" class=\"best_item_info_star_num\">0.0</span>\r\n                        <span v-else class=\"best_item_info_star_num\">{{ formatReviewScore(10) }}</span>\r\n                        <StarIcon :rating=\"convertRatingToHalfStars(10)\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"best_item_order\">\r\n                    <a @click=\"goToPay(item.BOOK_ID, item.BOOK_PRICE)\" href=\"#\">결제하러 가기</a>\r\n                    <p><span>내일(7/28)</span> 도착예정</p>\r\n                </div>\r\n                <div class=\"best_item_btn\">\r\n                    <img v-if=\"item.isLiked == true\" @click=\"likeToggle(item.BOOK_ID)\" src=\"../assets/img/heartFill.png\" alt=\"Heart Filled\" />\r\n                    <img v-else-if=\"item.isLiked == false\" @click=\"likeToggle(item.BOOK_ID)\" src=\"../assets/img/heart.png\" alt=\"Heart\" />\r\n                    <img @click=\"addToCart(item.BOOK_ID)\" src=\"../assets/img/cart2.png\" alt=\"\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"booklist_paging\">\r\n            <button @click=\"changePage('first')\" :disabled=\"currentPage === 1\">맨앞</button>\r\n            <button @click=\"changePage(currentPage - 1)\" :disabled=\"currentPage === 1\">이전</button>\r\n            <button\r\n                v-for=\"pageNumber in pageNumbers\"\r\n                :key=\"pageNumber\"\r\n                @click=\"changePage(pageNumber)\"\r\n                :class=\"{ active: pageNumber === currentPage }\"\r\n            >\r\n                {{ pageNumber }}\r\n            </button>\r\n            <button @click=\"changePage(currentPage + 1)\" :disabled=\"currentPage === totalPages\">다음</button>\r\n            <button @click=\"changePage('last')\" :disabled=\"currentPage === totalPages\">맨뒤</button>\r\n        </div>\r\n        <!-- 플로팅-->\r\n        <Floating />\r\n        <!-- 스크롤 TOP -->\r\n        <ScrollTop />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport GnbBar from \"../components/gnbBar.vue\";\r\nimport Floating from \"../components/floating.vue\";\r\nimport StarIcon from \"../components/star.vue\"; // 별점 아이콘 컴포넌트의 경로를 수정해주세요.\r\nimport ScrollTop from \"@/components/scrollTop.vue\";\r\n\r\nimport { isLogindDisplay } from \"../mixins/main.js\";\r\n\r\nimport axios from \"axios\";\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\naxios.defaults.headers.post[\"Contents-Type\"] = \"application/json;charset=utf-8\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nexport default {\r\n    mixins: [isLogindDisplay],\r\n    name: \"\",\r\n    components: { GnbBar, StarIcon, Floating, ScrollTop },\r\n    data() {\r\n        return {\r\n            recListData: [],\r\n            reviewScore: [], // 리뷰 점수를 얻어온다고 가정\r\n            email: \"\",\r\n            bookId: \"\",\r\n\r\n            bestBook: [],\r\n\r\n            //좋아요 여부\r\n            isLiked: false,\r\n            likeBook: [],\r\n\r\n            // 페이징\r\n            perPage: 10, //한 페이지에 보여줄 게시물 수\r\n            currentPage: 1, // 현재 페이지 번호\r\n            totalPages: 1, // 총 페이지 수\r\n            maxDisplayedPages: 9, // 표시할 최대 페이지 수 (현재 페이지를 중심으로 좌우로 표시)\r\n        };\r\n    },\r\n\r\n    setup() {},\r\n    created() {\r\n        this.email = localStorage.getItem(\"userID\");\r\n        this.getLikeBook();\r\n        this.getRecList();\r\n        this.getBestBook();\r\n    },\r\n    mounted() {},\r\n    unmounted() {},\r\n    computed: {\r\n        totalPages() {\r\n            // 전체 페이지 수 계산\r\n            this.totalPages = Math.ceil(this.recListData.length / this.perPage);\r\n            return Math.ceil(this.recListData.length / this.perPage);\r\n        },\r\n        pageNumbers() {\r\n            const start = Math.max(1, this.currentPage - Math.floor(this.maxDisplayedPages / 2));\r\n            const end = Math.min(this.totalPages, start + this.maxDisplayedPages - 1);\r\n            return Array.from({ length: end - start + 1 }, (_, i) => start + i);\r\n        },\r\n    },\r\n    methods: {\r\n        changePage(pageNumber) {\r\n            if (pageNumber === \"first\") {\r\n                // 맨 앞 페이지로 이동\r\n                pageNumber = 1;\r\n            } else if (pageNumber === \"last\") {\r\n                // 맨 뒤 페이지로 이동\r\n                pageNumber = this.totalPages;\r\n            } else {\r\n                pageNumber = parseInt(pageNumber); // 페이지 번호로 변환\r\n            }\r\n\r\n            window.scrollTo({ top: 0, behavior: \"auto\" });\r\n            if (pageNumber >= 1 && pageNumber <= this.totalPages) {\r\n                this.currentPage = pageNumber;\r\n                // 페이지 변경 시 추가 로직 수행\r\n                // 예: API 호출하여 해당 페이지 데이터 가져오기\r\n                // displayedPosts 업데이트\r\n                this.displayedPosts = this.recListData.slice((this.currentPage - 1) * this.perPage, this.currentPage * this.perPage);\r\n            }\r\n        },\r\n        async getRecList() {\r\n            if (localStorage.getItem(\"userID\")) {\r\n                try {\r\n                    const response = await axios.post(\"http://localhost:3000/booklist/getRecList\", {\r\n                        email: this.email,\r\n                    });\r\n\r\n                    this.recListData = response.data.map((book) => ({\r\n                        ...book,\r\n                        isLiked: this.likeBook.includes(book.BOOK_ID),\r\n                    }));\r\n\r\n                    for (const book of response.data) {\r\n                        this.reviewScore.push(book.reviewpoint / 2);\r\n                    }\r\n                    // displayedPosts에 categoryData 데이터 복사\r\n                    this.displayedPosts = this.recListData.slice((this.currentPage - 1) * this.perPage, this.currentPage * this.perPage);\r\n                } catch (error) {\r\n                    alert(error);\r\n                }\r\n            }\r\n        },\r\n        //회원이 좋아요한 책 ID 가져오기\r\n        async getLikeBook() {\r\n            await axios({\r\n                url: \"http://localhost:3000/bookList/checkLikeList\",\r\n                method: \"POST\",\r\n                data: {\r\n                    email: this.email,\r\n                },\r\n            }).then((res) => {\r\n                this.likeBook = res.data;\r\n            });\r\n        },\r\n        async likeToggle(bookId) {\r\n            if (localStorage.getItem(\"userID\")) {\r\n                this.bookId = bookId;\r\n                await axios({\r\n                    url: \"http://localhost:3000/detail/likeOrDislike\",\r\n                    method: \"POST\",\r\n                    data: {\r\n                        email: this.email,\r\n                        bookId: this.bookId,\r\n                    },\r\n                }).then((res) => {\r\n                    console.log(res.data, \"좋아요 추가삭제\");\r\n                    this.getLikeBook();\r\n                    this.getRecList();\r\n                });\r\n            } else {\r\n                const conResult = confirm(\"로그인이 필요합니다. \\n 로그인 하시겠습니까?\");\r\n                conResult ? (window.location.href = \"/login\") : null;\r\n            }\r\n        },\r\n        async getBestBook() {\r\n            await axios({\r\n                url: \"http://localhost:3000/main/getBestBook\",\r\n                method: \"POST\",\r\n                data: {},\r\n            })\r\n                .then((res) => {\r\n                    for (var i in res.data) {\r\n                        this.bestBook.push(res.data[i]);\r\n                    }\r\n                    console.log(this.bestBook, \"베스트북\");\r\n                })\r\n                .catch((err) => {\r\n                    alert(err);\r\n                });\r\n        },\r\n        //입력된 숫자를 주어진 범위에 따라 적절한 별점으로 변환\r\n        convertRatingToHalfStars(number) {\r\n            if (Number.isInteger(number)) {\r\n                if (number >= 1 && number <= 5) {\r\n                    return number;\r\n                } else {\r\n                    return 0; // 범위를 벗어나는 경우\r\n                }\r\n            } else {\r\n                const integerPart = Math.floor(number);\r\n                const decimalPart = number - integerPart;\r\n\r\n                if (decimalPart < 0.5) {\r\n                    return integerPart;\r\n                } else {\r\n                    return integerPart + 0.5;\r\n                }\r\n            }\r\n        },\r\n        formatReviewScore(number) {\r\n            if (Number.isInteger(number)) {\r\n                return number.toFixed(1); // 정수인 경우 소수점 자리를 1로 설정하여 변환\r\n            } else {\r\n                return number.toString(); // 소수인 경우 그대로 문자열로 변환\r\n            }\r\n        },\r\n        formatNumber(number) {\r\n            // 숫자를 천 단위마다 쉼표가 있는 형식으로 변환\r\n            return new Intl.NumberFormat().format(number);\r\n        },\r\n        //장바구니에 추가\r\n        async addToCart(bookId) {\r\n            if (localStorage.getItem(\"userID\")) {\r\n                this.bookId = bookId;\r\n                await axios({\r\n                    url: \"http://localhost:3000/detail/gotoCart\",\r\n                    method: \"POST\",\r\n                    data: {\r\n                        email: this.email,\r\n                        bookId: this.bookId,\r\n                    },\r\n                }).then((res) => {\r\n                    alert(\"장바구니에 추가되었습니다.\");\r\n                    this.$refs.childComponent.getCartNum();\r\n                });\r\n            } else {\r\n                const conResult = confirm(\"로그인이 필요합니다. \\n 로그인 하시겠습니까?\");\r\n                conResult ? (window.location.href = \"/login\") : null;\r\n            }\r\n        },\r\n        // 결제하기 버튼 클릭시 서버로 보낼 데이터\r\n        async goToPay(bookId, bookPrice) {\r\n            const totalPoint = bookPrice * 0.05;\r\n            const bookfee = bookPrice >= 50000 ? 0 : 2500;\r\n            await axios({\r\n                url: \"http://localhost:3000/detail/gotoPay\",\r\n                method: \"POST\",\r\n                data: {\r\n                    bookId: bookId,\r\n                    bookNum: 1,\r\n                    email: this.email,\r\n                    total_pay: bookPrice,\r\n                    total_point: totalPoint,\r\n                    fee: bookfee,\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    console.log(res.data.payID);\r\n                    this.$router.push({ name: \"paymentPage\", query: { payid: res.data.payID } });\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Error goToPay :\", error);\r\n                });\r\n        },\r\n    },\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}