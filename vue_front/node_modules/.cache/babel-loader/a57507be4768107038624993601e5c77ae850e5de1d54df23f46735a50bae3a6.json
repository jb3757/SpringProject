{"ast":null,"code":"import axios from \"axios\";\nimport myPageSide from \"../components/myPageSide.vue\";\nimport myPage_top from \"../components/myPage_top.vue\";\nimport TabsWrapper from \"../components/TabsWrapper.vue\";\nimport TabItem from \"../components/TabItem.vue\";\n\n// Format the date in YY-MM-DD format\nconst formattedDate = date => {\n  const year = date.getFullYear().toString().substr(-2);\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n  const day = date.getDate().toString().padStart(2, \"0\");\n  return `${year}-${month}-${day}`;\n};\nexport default {\n  components: {\n    myPageSide,\n    myPage_top,\n    TabsWrapper,\n    TabItem\n  },\n  data() {\n    return {\n      reviewList: [],\n      book_cover: \"\",\n      orderitem_confirmed_At: \"\",\n      book_title: \"\",\n      book_author: \"\",\n      point: \"300P\",\n      currentPage: 1,\n      itemsPerPage: 10\n    };\n  },\n  async mounted() {\n    try {\n      const email = localStorage.getItem(\"userID\");\n      const response = await axios.get(`mypage/notYetReview/${email}`);\n      this.reviewList = response.data; // API에서 받아온 모든 데이터를 reviewList에 할당\n\n      console.log(this.reviewList);\n      if (this.reviewList.length > 0) {\n        const data = this.reviewList[0]; // 첫 번째 데이터를 가져와서 사용\n        this.book_cover = data.book_cover;\n        this.book_title = data.book_title;\n        this.book_author = data.book_author;\n        const orderConfirmedDate = new Date(data.ORDERITEM_CONFIRMED_AT);\n        this.orderitem_confirmed_At = formattedDate(orderConfirmedDate);\n        this.deadline = formattedDate(new Date(orderConfirmedDate.getTime() + 30 * 24 * 60 * 60 * 1000));\n        console.log(\"구매확정일:\", this.orderitem_confirmed_At);\n        console.log(\"작성기한:\", this.deadline);\n      } else {\n        console.log(\"No data found in the response.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.reviewList.length / this.itemsPerPage);\n    },\n    displayedReviews() {\n      const startIndex = (this.currentPage - 1) * this.itemsPerPage;\n      const endIndex = startIndex + this.itemsPerPage;\n      return this.reviewList.slice(startIndex, endIndex);\n    }\n  },\n  methods: {\n    formattedDate(date) {\n      const orderConfirmedDate = new Date(date);\n      const year = orderConfirmedDate.getFullYear().toString().substr(-2);\n      const month = (orderConfirmedDate.getMonth() + 1).toString().padStart(2, \"0\");\n      const day = orderConfirmedDate.getDate().toString().padStart(2, \"0\");\n      return `${year}-${month}-${day}`;\n    },\n    calculateDeadline(confirmDate) {\n      const orderConfirmedDate = new Date(confirmDate);\n      return formattedDate(new Date(orderConfirmedDate.getTime() + 30 * 24 * 60 * 60 * 1000));\n    }\n  },\n  changePage(pageNumber) {\n    this.currentPage = pageNumber;\n  }\n};","map":{"version":3,"names":["axios","myPageSide","myPage_top","TabsWrapper","TabItem","formattedDate","date","year","getFullYear","toString","substr","month","getMonth","padStart","day","getDate","components","data","reviewList","book_cover","orderitem_confirmed_At","book_title","book_author","point","currentPage","itemsPerPage","mounted","email","localStorage","getItem","response","get","console","log","length","orderConfirmedDate","Date","ORDERITEM_CONFIRMED_AT","deadline","getTime","error","computed","totalPages","Math","ceil","displayedReviews","startIndex","endIndex","slice","methods","calculateDeadline","confirmDate","changePage","pageNumber"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\mypageReview.vue"],"sourcesContent":["<template>\r\n    <myPage_top />\r\n    <div class=\"mypage_menu\">\r\n        <myPageSide />\r\n    </div>\r\n\r\n    <div class=\"right_box\">\r\n        <section class=\"tabWrap\">\r\n            <TabsWrapper>\r\n                <TabItem title=\"작성가능한 리뷰\">\r\n                    <div>\r\n                        <div v-for=\"(review, index) in reviewList\" :key=\"index\" class=\"review-info\">\r\n                            <div class=\"info-item book-cover\">\r\n                                <div class=\"info-title\"></div>\r\n                                <img :src=\"review.book_cover\" alt=\"북커버 이미지\" class=\"info-content\" />\r\n                            </div>\r\n                            <div class=\"info-item1\">\r\n                                <div class=\"info-title\">구매확정일 : {{ formattedDate(review.ORDERITEM_CONFIRMED_AT) }}</div>\r\n\r\n                                <div class=\"info-title.book-title\">{{ review.book_title }}</div>\r\n\r\n                                <div class=\"info-title.book-author\">{{ review.book_author }}</div>\r\n                            </div>\r\n\r\n                            <div class=\"info-item2\">\r\n                                <a href=\"/detail\"><button class=\"review-button\">리뷰 쓰기</button></a>\r\n                                <div class=\"info-title.deadline\">작성기한</div>\r\n                                <div class=\"info-content.deadline\">{{ calculateDeadline(review.ORDERITEM_CONFIRMED_AT) }}</div>\r\n                                <div class=\"info-title.point\">포인트</div>\r\n                                <div class=\"info-content.point\">300P</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"pagination\">\r\n                        <button v-for=\"pageNumber in totalPages\" :key=\"pageNumber\" @click=\"changePage(pageNumber)\">\r\n                            {{ pageNumber }}\r\n                        </button>\r\n                    </div>\r\n                </TabItem>\r\n                <TabItem title=\"작성한 리뷰\">\r\n                    <!-- 여기에 작성한 리뷰 내용 추가 -->\r\n                </TabItem>\r\n            </TabsWrapper>\r\n        </section>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport myPageSide from \"../components/myPageSide.vue\";\r\nimport myPage_top from \"../components/myPage_top.vue\";\r\nimport TabsWrapper from \"../components/TabsWrapper.vue\";\r\nimport TabItem from \"../components/TabItem.vue\";\r\n\r\n// Format the date in YY-MM-DD format\r\nconst formattedDate = (date) => {\r\n    const year = date.getFullYear().toString().substr(-2);\r\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = date.getDate().toString().padStart(2, \"0\");\r\n    return `${year}-${month}-${day}`;\r\n};\r\n\r\nexport default {\r\n    components: { myPageSide, myPage_top, TabsWrapper, TabItem },\r\n    data() {\r\n        return {\r\n            reviewList: [],\r\n            book_cover: \"\",\r\n            orderitem_confirmed_At: \"\",\r\n            book_title: \"\",\r\n            book_author: \"\",\r\n            point: \"300P\",\r\n            currentPage: 1,\r\n            itemsPerPage: 10,\r\n        };\r\n    },\r\n    async mounted() {\r\n        try {\r\n            const email = localStorage.getItem(\"userID\");\r\n            const response = await axios.get(`mypage/notYetReview/${email}`);\r\n            this.reviewList = response.data; // API에서 받아온 모든 데이터를 reviewList에 할당\r\n\r\n            console.log(this.reviewList);\r\n\r\n            if (this.reviewList.length > 0) {\r\n                const data = this.reviewList[0]; // 첫 번째 데이터를 가져와서 사용\r\n                this.book_cover = data.book_cover;\r\n                this.book_title = data.book_title;\r\n                this.book_author = data.book_author;\r\n\r\n                const orderConfirmedDate = new Date(data.ORDERITEM_CONFIRMED_AT);\r\n                this.orderitem_confirmed_At = formattedDate(orderConfirmedDate);\r\n                this.deadline = formattedDate(new Date(orderConfirmedDate.getTime() + 30 * 24 * 60 * 60 * 1000));\r\n\r\n                console.log(\"구매확정일:\", this.orderitem_confirmed_At);\r\n                console.log(\"작성기한:\", this.deadline);\r\n            } else {\r\n                console.log(\"No data found in the response.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        }\r\n    },\r\n    computed: {\r\n        totalPages() {\r\n            return Math.ceil(this.reviewList.length / this.itemsPerPage);\r\n        },\r\n        displayedReviews() {\r\n            const startIndex = (this.currentPage - 1) * this.itemsPerPage;\r\n            const endIndex = startIndex + this.itemsPerPage;\r\n            return this.reviewList.slice(startIndex, endIndex);\r\n        },\r\n    },\r\n    methods: {\r\n        formattedDate(date) {\r\n            const orderConfirmedDate = new Date(date);\r\n            const year = orderConfirmedDate.getFullYear().toString().substr(-2);\r\n            const month = (orderConfirmedDate.getMonth() + 1).toString().padStart(2, \"0\");\r\n            const day = orderConfirmedDate.getDate().toString().padStart(2, \"0\");\r\n            return `${year}-${month}-${day}`;\r\n        },\r\n        calculateDeadline(confirmDate) {\r\n            const orderConfirmedDate = new Date(confirmDate);\r\n            return formattedDate(new Date(orderConfirmedDate.getTime() + 30 * 24 * 60 * 60 * 1000));\r\n        },\r\n    },\r\n    changePage(pageNumber) {\r\n        this.currentPage = pageNumber;\r\n    },\r\n};\r\n</script>\r\n<style scoped>\r\n.review-info {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 10px;\r\n    height: 200px;\r\n    border-bottom: 1px solid rgba(199, 195, 195, 0.267); /* 아래쪽에만 border 추가 */\r\n}\r\n\r\n.info-item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n}\r\n\r\n.info-title {\r\n    font-weight: bold;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.info-item.book-cover {\r\n    display: flex;\r\n\r\n    justify-content: flex-start; /* 변경: 북커버 이미지를 왼쪽 정렬 */\r\n\r\n    margin-right: 20px; /* 변경: 오른쪽 간격 추가 */\r\n}\r\n\r\n.review-button {\r\n    background-color: #5552f7;\r\n    color: white;\r\n    border: none;\r\n    padding: 5px 10px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n}\r\n.pagination {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 20px;\r\n}\r\n\r\n.pagination button {\r\n    margin: 0 5px;\r\n    padding: 5px 10px;\r\n    background-color: #f0f0f0;\r\n    border: none;\r\n    cursor: pointer;\r\n}\r\n\r\n.pagination button:hover {\r\n    background-color: #ddd;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}