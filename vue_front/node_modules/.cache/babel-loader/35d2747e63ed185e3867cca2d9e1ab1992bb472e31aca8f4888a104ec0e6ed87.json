{"ast":null,"code":"export default {\n  name: \"qnaTab\",\n  data() {\n    return {\n      currentTagName: \"all\",\n      tabList: [{\n        name: \"전체\",\n        tag: \"all\"\n      }, {\n        name: \"답변 대기\",\n        tag: \"waiting\"\n      }, {\n        name: \"답변 완료\",\n        tag: \"done\"\n      }],\n      repList: [{\n        title: \"1\",\n        tag: \"all\"\n      }, {\n        title: \"2\",\n        tag: \"waiting\"\n      }, {\n        title: \"3\",\n        tag: \"done\"\n      }],\n      showQnaContent: false,\n      repWaiting: true,\n      repDone: false,\n      conOpenBotton: require(\"../assets/img/qna-open.png\"),\n      conCloseBotton: require(\"../assets/img/qna-close.png\")\n    };\n  },\n  methods: {\n    toggleContent() {\n      this.showQnaContent = !this.showQnaContent;\n      if (this.conOpenBotton === require(\"../assets/img/qna-open.png\")) {\n        this.conOpenBotton = this.conCloseBotton;\n      } else {\n        this.conOpenBotton = require(\"../assets/img/qna-open.png\");\n      }\n    }\n  },\n  computed: {\n    currentList() {\n      return this.repList.filter(el => el.tag == this.currentTagName);\n    }\n  }\n};","map":{"version":3,"names":["name","data","currentTagName","tabList","tag","repList","title","showQnaContent","repWaiting","repDone","conOpenBotton","require","conCloseBotton","methods","toggleContent","computed","currentList","filter","el"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\qnaList.vue"],"sourcesContent":["<template>    \r\n  <div class=\"wrap\">\r\n    <h1>1:1 문의</h1>\r\n    <div class=\"tab\">\r\n      <!-- 탭메뉴 출력 -->\r\n      <button\r\n      v-for=\"(tab, index) in tabList\"\r\n      :key=\"index\"\r\n      @click.prevent=\"currentTagName = tab.tag\"\r\n      :class=\"{ active: currentTagName === tab.tag }\"\r\n      >\r\n        {{ tab.name }}\r\n      </button>\r\n    </div>\r\n    <ul class=\"tab-content\">\r\n      <li v-for=\"(item, index) in currentList\" :key=\"index\">\r\n        <!-- 탭 내부 내용 출력 -->\r\n        <div class=\"tab-rep\" :class=\"{all : item.tag == 'all', waiting: item.tag == 'waiting', done: item.tag == 'done'}\"></div>\r\n          <button>편집{{ item.title }}</button>\r\n          <button>1:1 문의하기{{ item.title }}</button>\r\n          <h1>{{ item.title }}</h1>\r\n          <div class=\"qna-list\">\r\n            <div class=\"qna-content\">\r\n              <div class=\"qna_rep\">\r\n                <!-- 대기중/완료 아이콘 -->\r\n                <div v-if=\"repWaiting\">\r\n                  <img src=\"../assets/img/waiting.png\" alt=\"waiting-img\">\r\n                </div>\r\n                <div v-if=\"repDone\">\r\n                  <img src=\"../assets/img/done.png\" alt=\"done-img\">\r\n                </div>\r\n              </div>\r\n              <!-- 문의 제목/날짜 -->\r\n              <div class=\"qna_tilte\">제목{{ item.title }}{{ QNA_TITLE }}</div>\r\n              <div class=\"qna_date\">날짜{{ item.title }}{{ QNA_DATE }}</div>\r\n            </div>\r\n            <div>\r\n              <!-- 버튼 토글-문의 내용/답변 내용 -->\r\n              <button @click=\"toggleContent\" class=\"con-open\">\r\n                <img :src=\"conOpenBotton\" alt=\"con-open/close\" />\r\n              </button>\r\n              <div v-if=\"showQnaContent\">\r\n                <div class=\"qna_con\">내용{{ item.title }}{{ QNA_CON }}</div>\r\n                <div class=\"qna_reply\">답변{{ item.title }}{{ QNA_REPLY }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"qnaTab\",\r\n  data() {\r\n    return {\r\n      currentTagName: \"all\",\r\n      tabList: [\r\n        { name: \"전체\", tag: \"all\" },\r\n        { name: \"답변 대기\", tag: \"waiting\" },\r\n        { name: \"답변 완료\", tag: \"done\" },\r\n      ],\r\n      repList: [\r\n        { title: \"1\", tag: \"all\" },\r\n        { title: \"2\", tag: \"waiting\" },\r\n        { title: \"3\", tag: \"done\" },\r\n      ],\r\n      showQnaContent: false,\r\n      repWaiting: true,\r\n      repDone: false,\r\n      conOpenBotton: require(\"../assets/img/qna-open.png\"),\r\n      conCloseBotton: require(\"../assets/img/qna-close.png\"),\r\n    };\r\n  },\r\n  methods: {\r\n    toggleContent() {\r\n      this.showQnaContent = !this.showQnaContent;\r\n\r\n      if (this.conOpenBotton === require(\"../assets/img/qna-open.png\")) {\r\n        this.conOpenBotton = this.conCloseBotton;\r\n      } else {\r\n        this.conOpenBotton = require(\"../assets/img/qna-open.png\");\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    currentList() {\r\n      return this.repList.filter((el) => el.tag == this.currentTagName);\r\n    },\r\n  },\r\n  };\r\n</script>"],"mappings":"AAoDA,eAAe;EACbA,IAAI,EAAE,QAAQ;EACdC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,KAAK;MACrBC,OAAO,EAAE,CACP;QAAEH,IAAI,EAAE,IAAI;QAAEI,GAAG,EAAE;MAAM,CAAC,EAC1B;QAAEJ,IAAI,EAAE,OAAO;QAAEI,GAAG,EAAE;MAAU,CAAC,EACjC;QAAEJ,IAAI,EAAE,OAAO;QAAEI,GAAG,EAAE;MAAO,CAAC,CAC/B;MACDC,OAAO,EAAE,CACP;QAAEC,KAAK,EAAE,GAAG;QAAEF,GAAG,EAAE;MAAM,CAAC,EAC1B;QAAEE,KAAK,EAAE,GAAG;QAAEF,GAAG,EAAE;MAAU,CAAC,EAC9B;QAAEE,KAAK,EAAE,GAAG;QAAEF,GAAG,EAAE;MAAO,CAAC,CAC5B;MACDG,cAAc,EAAE,KAAK;MACrBC,UAAU,EAAE,IAAI;MAChBC,OAAO,EAAE,KAAK;MACdC,aAAa,EAAEC,OAAO,CAAC,4BAA4B,CAAC;MACpDC,cAAc,EAAED,OAAO,CAAC,6BAA6B;IACvD,CAAC;EACH,CAAC;EACDE,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd,IAAI,CAACP,cAAa,GAAI,CAAC,IAAI,CAACA,cAAc;MAE1C,IAAI,IAAI,CAACG,aAAY,KAAMC,OAAO,CAAC,4BAA4B,CAAC,EAAE;QAChE,IAAI,CAACD,aAAY,GAAI,IAAI,CAACE,cAAc;MAC1C,OAAO;QACL,IAAI,CAACF,aAAY,GAAIC,OAAO,CAAC,4BAA4B,CAAC;MAC5D;IACF;EACF,CAAC;EACDI,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACX,OAAO,CAACY,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACd,GAAE,IAAK,IAAI,CAACF,cAAc,CAAC;IACnE;EACF;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}