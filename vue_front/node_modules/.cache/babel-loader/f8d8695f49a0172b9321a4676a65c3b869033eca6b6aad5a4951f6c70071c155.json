{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\naxios.defaults.baseURL = \"http://localhost:3000\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\nimport SideBar from '../components/adminSidebar.vue';\nexport default {\n  name: '',\n  components: {\n    SideBar\n  },\n  data() {\n    return {\n      orderData: [],\n      orderDetailData: {\n        id: \"\",\n        email: \"\",\n        date: \"\",\n        name: \"\",\n        tel: \"\",\n        zipCode: \"\",\n        add: \"\",\n        addDetail: \"\",\n        orderPay: \"\",\n        state: \"\"\n      },\n      displayedPosts: [\n        // 로우 데이터 초기화\n      ],\n      //체크박스\n      orderChecked: [],\n      selectAll: false,\n      // 전체 선택 체크박스의 선택 상태\n\n      //답변내용\n      answerDetail: \"\",\n      //정렬\n      filterValue: \"답변 대기\",\n      // 페이징\n      perPage: 10,\n      // 한 페이지에 보여줄 게시물 수\n      currentPage: 1,\n      // 현재 페이지 번호\n      maxDisplayedPages: 9 // 표시할 최대 페이지 수 (현재 페이지를 중심으로 좌우로 표시)\n    };\n  },\n\n  setup() {},\n  created() {},\n  mounted() {\n    this.getOrderData();\n  },\n  unmounted() {},\n  watch: {\n    // selectAll 변수 감시\n    selectAll(newStatus) {\n      // 모든 체크박스 상태 업데이트\n      this.selectList = this.selectList.map(() => newStatus);\n    }\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.orderData.length / this.perPage);\n    },\n    displayedPosts() {\n      const start = Math.max(0, (this.currentPage - 1) * this.perPage);\n      const end = Math.min(this.orderData.length, this.currentPage * this.perPage);\n      return this.orderData.slice(start, end);\n    },\n    pageNumbers() {\n      const start = Math.max(1, this.currentPage - Math.floor(this.maxDisplayedPages / 2));\n      const end = Math.min(this.totalPages, start + this.maxDisplayedPages - 1);\n      return Array.from({\n        length: end - start + 1\n      }, (_, i) => start + i);\n    }\n  },\n  methods: {\n    async getOrderData() {\n      await axios({\n        url: \"http://localhost:3000/admin/adminOrderList\",\n        method: \"POST\",\n        data: {}\n      }).then(res => {\n        this.orderData = res.data;\n        console.log(this.orderData);\n      }).catch(err => {\n        alert(err);\n      });\n    },\n    async getOrderDetailData(orderId) {\n      await axios({\n        url: \"http://localhost:3000/admin/adminOrderDetail\",\n        method: \"POST\",\n        data: {\n          order_id: orderId\n        }\n      }).then(res => {\n        this.orderDetailData.id = res.data[0].ORDER_ID;\n        this.orderDetailData.email = res.data[0].ORDER_USER_EMAIL;\n        this.orderDetailData.date = res.data[0].ORDER_DATE;\n        this.orderDetailData.name = res.data[0].ORDER_NAME;\n        this.orderDetailData.tel = res.data[0].ORDER_TEL;\n        this.orderDetailData.zipCode = res.data[0].ORDER_ZIPCODE;\n        this.orderDetailData.add = res.data[0].ORDER_ADD;\n        this.orderDetailData.addDetail = res.data[0].ORDER_ADDDETAIL;\n        this.orderDetailData.orderPay = res.data[0].ORDER_PAY;\n        this.orderDetailData.state = res.data[0].ORDER_STATE;\n        console.log(this.orderDetailData);\n      }).catch(err => {\n        alert(err);\n      });\n    },\n    async getBookDetailData(orderId) {\n      await axios({\n        url: \"http://localhost:3000/admin/adminOrderItemDetail\",\n        method: \"POST\",\n        data: {\n          order_id: orderId\n        }\n      }).then(res => {\n        this.orderDetailData.bookId = res.data[0].ORDERITEM_BOOK_ID;\n        this.orderDetailData.bookPrice = res.data[0].ORDERITEM_PRICE;\n        console.log(this.orderDetailData, \"이거이거\");\n      }).catch(err => {\n        alert(err);\n      });\n    },\n    allChecked() {\n      console.log(item.isChcked, \"전체선택 보려고 만든 콘솔\");\n    },\n    checkedState(orderId, isChcked) {\n      this.orderChecked.push(orderId);\n      console.log(orderId, \"오더ID\");\n      console.log(isChcked, \"체크여부\");\n      console.log(this.orderChecked, \"서버로 보낼 오더ID\");\n    },\n    async changeOrderState(orderId) {\n      this.orderChecked.push(orderId);\n      await axios({\n        url: \"http://localhost:3000/admin/adminStatusChange\",\n        method: \"POST\",\n        data: {\n          order_id: this.orderChecked\n        }\n      }).then(res => {\n        alert(\"배송중으로 변경되었습니다.\");\n        this.orderChecked = []; //체크박스 배열 초기화\n        this.getOrderData();\n      }).catch(err => {\n        alert(err);\n      });\n    },\n    formatNumber(number) {\n      // 숫자를 천 단위마다 쉼표가 있는 형식으로 변환\n      return new Intl.NumberFormat().format(number);\n    },\n    changePage(pageNumber) {\n      if (pageNumber === 'first') {\n        pageNumber = 1;\n      } else if (pageNumber === 'last') {\n        pageNumber = this.totalPages;\n      } else {\n        pageNumber = parseInt(pageNumber);\n      }\n      window.scrollTo({\n        top: 0,\n        behavior: 'auto'\n      });\n      if (pageNumber >= 1 && pageNumber <= this.totalPages) {\n        this.currentPage = pageNumber;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","defaults","baseURL","headers","post","SideBar","name","components","data","orderData","orderDetailData","id","email","date","tel","zipCode","add","addDetail","orderPay","state","displayedPosts","orderChecked","selectAll","answerDetail","filterValue","perPage","currentPage","maxDisplayedPages","setup","created","mounted","getOrderData","unmounted","watch","newStatus","selectList","map","computed","totalPages","Math","ceil","length","start","max","end","min","slice","pageNumbers","floor","Array","from","_","i","methods","url","method","then","res","console","log","catch","err","alert","getOrderDetailData","orderId","order_id","ORDER_ID","ORDER_USER_EMAIL","ORDER_DATE","ORDER_NAME","ORDER_TEL","ORDER_ZIPCODE","ORDER_ADD","ORDER_ADDDETAIL","ORDER_PAY","ORDER_STATE","getBookDetailData","bookId","ORDERITEM_BOOK_ID","bookPrice","ORDERITEM_PRICE","allChecked","item","isChcked","checkedState","push","changeOrderState","formatNumber","number","Intl","NumberFormat","format","changePage","pageNumber","parseInt","window","scrollTo","top","behavior"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\components\\adminOrderManage.vue"],"sourcesContent":["<style scoped src=\"../../sb-admin-2/vendor/datatables/dataTables.bootstrap4.min.css\"></style>\r\n<style scoped src=\"../assets/css/sbadmin.css\"></style>\r\n\r\n\r\n<template>\r\n    <body id=\"page-top\">\r\n\r\n        <!-- Page Wrapper -->\r\n        <div id=\"wrapper\">\r\n\r\n            <!-- Sidebar -->\r\n            <SideBar />\r\n            <!-- End Sidebar -->\r\n\r\n            <!-- Content Wrapper -->\r\n            <div id=\"content-wrapper\" class=\"d-flex flex-column\">\r\n\r\n                <!-- Main Content -->\r\n                <div id=\"content\">\r\n\r\n                    <!-- Topbar -->\r\n                    <nav\r\n                        class=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow d-flex align-items-center justify-content-center\">\r\n                        <h1 class=\"\">MOONMOON</h1>\r\n                    </nav>\r\n                    <!-- End of Topbar -->\r\n\r\n                    <!-- Begin Page Content -->\r\n                    <div class=\"container-fluid\">\r\n\r\n                        <!-- Page Heading -->\r\n                        <div class=\"d-flex align-items-center justify-content-between mb-3\">\r\n                            <h1 class=\"h3 mb-2 text-gray-800 col-4\">주문 관리</h1>\r\n\r\n                        </div>\r\n\r\n                        <!-- DataTales Example -->\r\n                        <div class=\"card shadow mb-4\">\r\n                            <div class=\"card-header py-3 d-flex align-items-center justify-content-between\">\r\n                                <h6 class=\"m-0 font-weight-bold text-primary\">주문 목록</h6>\r\n\r\n                                <div class=\"btn-group\">\r\n                                    <select class=\"btn btn-secondary dropdown-toggle\" @change=\"getQnaData\"\r\n                                        v-model=\"filterValue\">\r\n                                        <option class=\"dropdown-item btn cursor-pointer\" value=\"답변 대기\">답변 대기</option>\r\n                                        <option class=\"dropdown-item btn cursor-pointer\" value=\"답변 완료\">답변 완료</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"card-body\">\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\r\n                                        <thead>\r\n                                            <tr style=\"font-weight: bold;\">\r\n                                                <th>주문 번호</th>\r\n                                                <th>고객 이메일</th>\r\n                                                <th>주문 날짜</th>\r\n                                                <th>주문 상태</th>\r\n                                                <th>주문 정보</th>\r\n                                                <!-- 전체선택 체크박스 -->\r\n                                                <th class=\" border-0 d-flex align-items-center justify-content-center\">\r\n                                                    <button @click=\"changeOrderState\" type=\"button\" class=\"btn btn-primary\">\r\n                                                        전체 변경\r\n                                                    </button>\r\n                                                </th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tfoot>\r\n                                            <tr style=\"font-weight: bold;\">\r\n                                                <th>주문 번호</th>\r\n                                                <th>고객 이메일</th>\r\n                                                <th>주문 날짜</th>\r\n                                                <th>주문 상태</th>\r\n                                                <th>주문 정보</th>\r\n                                            </tr>\r\n                                        </tfoot>\r\n                                        <tbody>\r\n                                            <tr ref=\"userData\" v-for=\"(item, i) in displayedPosts\" :key=\"i\">\r\n\r\n                                                <td class=\"col-1 align-middle\" style=\"font-size: small;\">\r\n                                                    {{\r\n                                                        item.ORDER_ID }}</td>\r\n                                                <td class=\"col-3 align-middle\" style=\"font-size: small;\">\r\n                                                    {{ item.ORDER_USER_EMAIL }}</td>\r\n                                                <td class=\"col-3 align-middle\" style=\"font-size: small;\">\r\n                                                    {{ item.ORDER_DATE }}</td>\r\n                                                <td class=\"col-1 align-middle\" style=\"font-size: small;\">\r\n                                                    {{ item.ORDER_STATE }}</td>\r\n                                                <td class=\"col-1 align-middle\" style=\"font-size: small;\">\r\n                                                    <button\r\n                                                        @click=\"getOrderDetailData(item.ORDER_ID), getBookDetailData(item.ORDER_ID)\"\r\n                                                        type=\"button\"\r\n                                                        class=\"btn btn-info align-middle ml-2 d-flex align-items-center justify-content-between\"\r\n                                                        data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\r\n                                                        주문정보\r\n                                                    </button>\r\n                                                </td>\r\n                                                <!-- 체크박스 -->\r\n                                                <td class=\"col-1 border-0 align-middle text-center\"\r\n                                                    style=\"font-size: small;\">\r\n                                                    <div\r\n                                                        class=\"form-check d-flex flex-column align-items-center justify-content-center mx-2\">\r\n                                                        <input @change=\"checkedState(item.ORDER_ID, item.isChcked)\"\r\n                                                            class=\"form-check-input\" type=\"checkbox\" v-model=\"item.isChcked\"\r\n                                                            id=\"flexCheckDefault\" style=\"width: 20px; height: 20px;\">\r\n                                                        <label class=\"form-check-label\" for=\"flexCheckDefault\"></label>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td class=\"col-1 border-0 align-middle text-center\">\r\n                                                    <button @click=\"changeOrderState(item.ORDER_ID)\" type=\"button\"\r\n                                                        class=\"btn btn-primary border-0 align-middle text-center\">\r\n                                                        주문 변경\r\n                                                    </button>\r\n                                                </td>\r\n                                                <!-- 모달 -->\r\n                                                <div class=\"modal fade position-fixed\" id=\"exampleModal\" tabindex=\"-1\"\r\n                                                    aria-labelledby=\"exampleModalLabel\" :aria-hidden=\"!isModalOpen\">\r\n                                                    <div class=\"modal-dialog modal-lg\" style=\"top: 15%; left: 0\">\r\n                                                        <div class=\"modal-content\">\r\n                                                            <div\r\n                                                                class=\"modal-header d-flex align-items-center justify-content-center\">\r\n                                                                <h1 class=\"modal-title fs-5 text-center\"\r\n                                                                    id=\"exampleModalLabel\">주문상세</h1>\r\n                                                            </div>\r\n                                                            <div class=\"modal-body\">\r\n                                                                <h4>주문번호 : <span>{{ orderDetailData.id }}</span></h4>\r\n                                                                <h4>주문자명 : <span>{{ orderDetailData.name }}</span></h4>\r\n                                                                <h4>주문 날짜 : <span>{{ orderDetailData.date }}</span></h4>\r\n                                                                <h4>주문자 이메일 : <span>{{ orderDetailData.email }}</span></h4>\r\n                                                                <h4>주문자 연락처 : <span>{{ orderDetailData.tel }}</span></h4>\r\n                                                                <h4>배송지 주소 : <span>{{ orderDetailData.add }}\r\n                                                                        {{ orderDetailData.addDetail }}</span></h4>\r\n                                                                <h4>우편번호 : <span>{{ orderDetailData.zipCode }}</span></h4>\r\n                                                                <h4>결제금액 : <span>{{ orderDetailData.orderPay }}</span></h4>\r\n                                                                <h4>배송상태 : <span>{{ orderDetailData.state }}</span></h4>\r\n                                                                <hr>\r\n                                                                <h4>책 번호 : <span>{{ orderDetailData.bookId }}</span></h4>\r\n                                                                <h4>가격 : <span>{{ orderDetailData.bookPrice }}</span></h4>\r\n\r\n                                                            </div>\r\n                                                            <div class=\"modal-footer\">\r\n                                                                <button type=\"button\" class=\"btn btn-secondary\"\r\n                                                                    data-bs-dismiss=\"modal\">닫기</button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </tr>\r\n\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <!-- /.container-fluid -->\r\n                    <nav class=\"d-flex align-items-center justify-content-center\" aria-label=\"Page navigation example\">\r\n                        <ul class=\"pagination\">\r\n                            <li class=\"page-item\">\r\n                                <button class=\"page-link\" @click=\"changePage('first')\"\r\n                                    :disabled=\"currentPage === 1\">맨앞</button>\r\n                            </li>\r\n                            <li class=\"page-item\">\r\n                                <button class=\"page-link\" @click=\"changePage(currentPage - 1)\"\r\n                                    :disabled=\"currentPage === 1\">이전</button>\r\n                            </li>\r\n                            <li class=\"page-item d-flex\">\r\n                                <button class=\"page-link\" v-for=\"pageNumber in pageNumbers\" :key=\"pageNumber\"\r\n                                    @click=\"changePage(pageNumber)\"\r\n                                    :class=\"{ 'active': pageNumber === currentPage, 'disabled': pageNumber === currentPage || currentPage === 1 || currentPage === totalPages }\">\r\n                                    {{ pageNumber }}\r\n                                </button>\r\n                            </li>\r\n                            <li class=\"page-item\">\r\n                                <button class=\"page-link\" @click=\"changePage(currentPage + 1)\"\r\n                                    :disabled=\"currentPage === totalPages\">다음</button>\r\n                            </li>\r\n                            <li class=\"page-item\">\r\n                                <button class=\"page-link\" @click=\"changePage('last')\"\r\n                                    :disabled=\"currentPage === totalPages\">맨뒤</button>\r\n                            </li>\r\n                        </ul>\r\n\r\n                    </nav>\r\n                </div>\r\n                <!-- End of Main Content -->\r\n\r\n                <!-- Footer -->\r\n                <footer class=\"sticky-footer bg-white\">\r\n                    <div class=\"container my-auto\">\r\n                        <div class=\"copyright text-center my-auto\">\r\n                            <span>Copyright &copy; Your Website 2020</span>\r\n                        </div>\r\n                    </div>\r\n                </footer>\r\n                <!-- End of Footer -->\r\n\r\n            </div>\r\n            <!-- End of Content Wrapper -->\r\n\r\n        </div>\r\n        <!-- End of Page Wrapper -->\r\n\r\n        <!-- Scroll to Top Button-->\r\n        <a class=\"scroll-to-top rounded\" href=\"#page-top\">\r\n            <i class=\"fas fa-angle-up\"></i>\r\n        </a>\r\n\r\n        <!-- Logout Modal-->\r\n        <div class=\"modal fade\" id=\"logoutModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n            aria-hidden=\"true\">\r\n            <div class=\"modal-dialog\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Ready to Leave?</h5>\r\n                        <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">×</span>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"modal-body\">Select \"Logout\" below if you are ready to end your current session.</div>\r\n                    <div class=\"modal-footer\">\r\n                        <button class=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\r\n                        <a class=\"btn btn-primary\" href=\"login.html\">Logout</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </body>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nimport SideBar from '../components/adminSidebar.vue';\r\n\r\nexport default {\r\n    name: '',\r\n    components: { SideBar },\r\n    data() {\r\n        return {\r\n            orderData: [],\r\n            orderDetailData: {\r\n                id: \"\",\r\n                email: \"\",\r\n                date: \"\",\r\n                name: \"\",\r\n                tel: \"\",\r\n                zipCode: \"\",\r\n                add: \"\",\r\n                addDetail: \"\",\r\n                orderPay: \"\",\r\n                state: \"\",\r\n            },\r\n            displayedPosts: [\r\n                // 로우 데이터 초기화\r\n            ],\r\n\r\n            //체크박스\r\n            orderChecked: [],\r\n            selectAll: false, // 전체 선택 체크박스의 선택 상태\r\n\r\n            //답변내용\r\n            answerDetail: \"\",\r\n\r\n            //정렬\r\n            filterValue: \"답변 대기\",\r\n\r\n            // 페이징\r\n            perPage: 10, // 한 페이지에 보여줄 게시물 수\r\n            currentPage: 1, // 현재 페이지 번호\r\n            maxDisplayedPages: 9, // 표시할 최대 페이지 수 (현재 페이지를 중심으로 좌우로 표시)\r\n        };\r\n    },\r\n\r\n    setup() { },\r\n    created() { },\r\n    mounted() {\r\n        this.getOrderData();\r\n    },\r\n    unmounted() { },\r\n    watch: {\r\n        // selectAll 변수 감시\r\n        selectAll(newStatus) {\r\n            // 모든 체크박스 상태 업데이트\r\n            this.selectList = this.selectList.map(() => newStatus);\r\n        },\r\n    },\r\n    computed: {\r\n        totalPages() {\r\n            return Math.ceil(this.orderData.length / this.perPage);\r\n        },\r\n        displayedPosts() {\r\n            const start = Math.max(0, (this.currentPage - 1) * this.perPage);\r\n            const end = Math.min(this.orderData.length, this.currentPage * this.perPage);\r\n            return this.orderData.slice(start, end);\r\n        },\r\n        pageNumbers() {\r\n            const start = Math.max(1, this.currentPage - Math.floor(this.maxDisplayedPages / 2));\r\n            const end = Math.min(this.totalPages, start + this.maxDisplayedPages - 1);\r\n            return Array.from({ length: end - start + 1 }, (_, i) => start + i);\r\n        },\r\n    },\r\n    methods: {\r\n        async getOrderData() {\r\n            await axios({\r\n                url: \"http://localhost:3000/admin/adminOrderList\",\r\n                method: \"POST\",\r\n                data: {\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    this.orderData = res.data;\r\n                    console.log(this.orderData)\r\n                })\r\n                .catch((err) => {\r\n                    alert(err);\r\n                });\r\n        },\r\n        async getOrderDetailData(orderId) {\r\n            await axios({\r\n                url: \"http://localhost:3000/admin/adminOrderDetail\",\r\n                method: \"POST\",\r\n                data: {\r\n                    order_id: orderId\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    this.orderDetailData.id = res.data[0].ORDER_ID;\r\n                    this.orderDetailData.email = res.data[0].ORDER_USER_EMAIL;\r\n                    this.orderDetailData.date = res.data[0].ORDER_DATE;\r\n                    this.orderDetailData.name = res.data[0].ORDER_NAME;\r\n                    this.orderDetailData.tel = res.data[0].ORDER_TEL;\r\n                    this.orderDetailData.zipCode = res.data[0].ORDER_ZIPCODE;\r\n                    this.orderDetailData.add = res.data[0].ORDER_ADD;\r\n                    this.orderDetailData.addDetail = res.data[0].ORDER_ADDDETAIL;\r\n                    this.orderDetailData.orderPay = res.data[0].ORDER_PAY;\r\n                    this.orderDetailData.state = res.data[0].ORDER_STATE;\r\n                    console.log(this.orderDetailData)\r\n                })\r\n                .catch((err) => {\r\n                    alert(err);\r\n                });\r\n        },\r\n        async getBookDetailData(orderId) {\r\n            await axios({\r\n                url: \"http://localhost:3000/admin/adminOrderItemDetail\",\r\n                method: \"POST\",\r\n                data: {\r\n                    order_id: orderId\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    this.orderDetailData.bookId = res.data[0].ORDERITEM_BOOK_ID;\r\n                    this.orderDetailData.bookPrice = res.data[0].ORDERITEM_PRICE;\r\n                    console.log(this.orderDetailData, \"이거이거\")\r\n                })\r\n                .catch((err) => {\r\n                    alert(err);\r\n                });\r\n        },\r\n        allChecked() {\r\n            console.log(item.isChcked, \"전체선택 보려고 만든 콘솔\")\r\n        },\r\n        checkedState(orderId, isChcked) {\r\n            this.orderChecked.push(orderId);\r\n            console.log(orderId, \"오더ID\");\r\n            console.log(isChcked, \"체크여부\");\r\n            console.log(this.orderChecked, \"서버로 보낼 오더ID\")\r\n        },\r\n        async changeOrderState(orderId) {\r\n            this.orderChecked.push(orderId);\r\n            await axios({\r\n                url: \"http://localhost:3000/admin/adminStatusChange\",\r\n                method: \"POST\",\r\n                data: {\r\n                    order_id: this.orderChecked\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    alert(\"배송중으로 변경되었습니다.\");\r\n                    this.orderChecked = []; //체크박스 배열 초기화\r\n                    this.getOrderData();\r\n                })\r\n                .catch((err) => {\r\n                    alert(err);\r\n                });\r\n        },\r\n        formatNumber(number) {\r\n            // 숫자를 천 단위마다 쉼표가 있는 형식으로 변환\r\n            return new Intl.NumberFormat().format(number);\r\n        },\r\n        changePage(pageNumber) {\r\n            if (pageNumber === 'first') {\r\n                pageNumber = 1;\r\n            } else if (pageNumber === 'last') {\r\n                pageNumber = this.totalPages;\r\n            } else {\r\n                pageNumber = parseInt(pageNumber);\r\n            }\r\n\r\n            window.scrollTo({ top: 0, behavior: 'auto' });\r\n            if (pageNumber >= 1 && pageNumber <= this.totalPages) {\r\n                this.currentPage = pageNumber;\r\n            }\r\n        },\r\n    }\r\n}\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}