{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"rouletter\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"rouletter-bg\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"rouletter-wacu\"\n})], -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"rouletter-arrow\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_5 = {\n  type: \"hidden\",\n  class: \"hidden-input\",\n  ref: \"hiddenInput\"\n};\nconst _hoisted_6 = {\n  class: \"modal-dialog\"\n};\nconst _hoisted_7 = {\n  class: \"modal-content\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"modal-title\"\n};\nconst _hoisted_9 = {\n  key: 1,\n  class: \"modal-body\",\n  id: \"modal-body\"\n};\nconst _hoisted_10 = {\n  class: \"modal-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _hoisted_4, _createElementVNode(\"button\", {\n    class: \"rouletter-btn\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.startRoulette())\n  }, \"GO!\")]), _createElementVNode(\"input\", _hoisted_5, null, 512 /* NEED_PATCH */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"modal\", {\n      'modal-show': $data.showModal\n    }]),\n    id: \"resultModal\"\n  }, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [$data.modalTitle ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _toDisplayString($data.modalTitle), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.modalBody ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, _toDisplayString($data.modalBody), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", {\n    class: \"modal-close\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.hideModal && $options.hideModal(...args))\n  }, \"×\")])])])], 2 /* CLASS */)]);\n}","map":{"version":3,"names":["id","class","_createElementVNode","type","ref","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","onClick","_cache","$event","$options","startRoulette","_hoisted_5","_normalizeClass","$data","showModal","_hoisted_6","_hoisted_7","modalTitle","_hoisted_8","_toDisplayString","modalBody","_hoisted_9","_hoisted_10","args","hideModal"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\roulette.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <div class=\"rouletter\">\r\n      <div class=\"rouletter-bg\">\r\n        <div class=\"rouletter-wacu\"></div>\r\n      </div>\r\n      <div class=\"rouletter-arrow\"></div>\r\n      <button class=\"rouletter-btn\" @click=\"startRoulette()\">GO!</button>\r\n    </div>\r\n\r\n    <input type=\"hidden\" class=\"hidden-input\" ref=\"hiddenInput\" />\r\n    <div class=\"modal\" id=\"resultModal\" :class=\"{ 'modal-show': showModal }\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-title\" v-if=\"modalTitle\">{{ modalTitle }}</div>\r\n          <div class=\"modal-body\" id=\"modal-body\" v-if=\"modalBody\">\r\n            {{ modalBody }}\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <div class=\"modal-close\" @click=\"hideModal\">&times;</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      userEmail: \"user3@example.com\",\r\n      value: [100, 500, 1000, 500, 3000, 5000],\r\n      //룰렛 돌리고 받는 포인트\r\n      //룰렛 이미지 assets/룰.png보면 0~5 적어놨는데 이 배열임\r\n      // ex) 3 > value[3];\r\n      rolLength: 6,\r\n      //룰렛 보상 배열 길이\r\n      probabilities: [0.5, 0.15, 0.1, 0.15, 0.07, 0.03],\r\n      // [0.5, 0.15, 0.1, 0.15, 0.07, 0.03]\r\n      //룰렛 보상 확률 1 = 100%\r\n      setNum: null,\r\n      showModal: false,\r\n      modalTitle: \"\", // 모달 제목을 동적으로 표시할 변수\r\n      modalBody: \"\", // 모달 본문을 동적으로 표시할 변수\r\n\r\n      selectedValue: null,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async startRoulette() {\r\n      const backServer = \"http://localhost:3000/roulette\";\r\n      try {\r\n        const response = await axios.get(`${backServer}/checkroul`, {\r\n          params: {\r\n            userEmail: this.userEmail,\r\n          },\r\n        });\r\n        this.handleRouletteResponse(response);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    handleRouletteResponse(response) {\r\n      console.log(response.data.message);\r\n      if (response.data.message === \"참여불가\") {\r\n        // 이미 참여한 경우 모달 표시\r\n        this.setNum = null;\r\n        this.showModal = true;\r\n        this.modalTitle = \"이미 참여하셨네요!\";\r\n        this.modalBody = \"내일 다시 참여해주세요.\";\r\n      } else {\r\n        // 아직 참여하지 않은 경우 룰렛 돌리기\r\n        this.setNum = this.rRandom();\r\n        this.selectedValue = this.value[this.setNum];\r\n        this.rRotate();\r\n\r\n        const backServer = \"http://localhost:3000/roulette\";\r\n        axios\r\n          .post(`${backServer}/addroul`, {\r\n            userEmail: this.userEmail,\r\n            selectedValue: this.selectedValue,\r\n          })\r\n          .then((response) => {\r\n            console.log(response.data.message);\r\n            // 룰렛 결과에 따른 모달 표시\r\n\r\n            this.modalTitle = \"축하합니다!\";\r\n            this.modalBody = `${this.selectedValue}P 당첨되었습니다!`;\r\n            setTimeout(() => {\r\n              this.showModal = true;\r\n              setTimeout(() => {\r\n                window.location.reload();\r\n              }, 10000);\r\n            }, 8000);\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n      }\r\n    },\r\n    rRandom() {\r\n      var rand = Math.random();\r\n      // 0~1\r\n      var sum = 0;\r\n      for (var i = 0; i < this.probabilities.length; i++) {\r\n        //보상 확률의 길이(6) 만큼 반복\r\n        sum += this.probabilities[i];\r\n        //0 + 보상 확률 배열에서 순서대로 플러스\r\n        if (rand < sum) return i;\r\n        // 0~1 사이의 랜덤값중에 sum이 더 커지면 보상 확률 배열중 더 커졋을때의 인덱스 값을 리턴\r\n      }\r\n      return this.probabilities.length - 1;\r\n      //이건 혹시 모를 에러 처리 부분같음\r\n    },\r\n    rRotate() {\r\n      var panel = document.querySelector(\".rouletter-wacu\");\r\n      //룰렛 돌아가는 판 부분\r\n      var btn = document.querySelector(\".rouletter-btn\");\r\n      //룰렛 돌리는 버튼 부분\r\n\r\n      var deg = [];\r\n      for (var i = 1, len = this.rolLength; i <= len; i++) {\r\n        // len = 6(보상 포인트 배열의 길이) 1~6\r\n        deg.push((360 / len) * i);\r\n        //룰렛의 각도를 정하는 거임\r\n        //360도중 보상 선택지가 6개이니까 60도씩 각도 담당 배열에 저장\r\n        //ex) [60, 120, 180, 240, 300, 360]\r\n      }\r\n      console.log(deg);\r\n\r\n      var num = 0;\r\n\r\n      this.$el.append(this.$refs.hiddenInput);\r\n      //   this.setNum = this.$refs.hiddenInput.value = this.rRandom();\r\n      this.modalMessage = \"\";\r\n\r\n      var ani = setInterval(() => {\r\n        //0.05초마다 실행\r\n        num++;\r\n        panel.style.transform = \"rotate(\" + 360 * num + \"deg)\";\r\n        //회전시키는 css나 vue 애니메이션같은데 아마?\r\n        btn.disabled = true;\r\n        //룰렛버튼 비활성화\r\n        btn.style.pointerEvents = \"none\";\r\n        //룰렛버튼 비활성화 2\r\n\r\n        if (num === 50) {\r\n          //존나 돌리다보면\r\n          clearInterval(ani);\r\n          //룰렛 애니메이션 중지\r\n          panel.style.transform = `rotate(${deg[this.setNum]}deg)`;\r\n          //각도 담당 배열을 이용하여 rRandom()을 실행하여 받은 0~5에 해당하는 각도로 룰렛 고정\r\n          //일정한 각도로 정지를 하긴하는데 잘 모르겠네..\r\n\r\n          // console.log(this.value[this.setNum]);\r\n\r\n          this.selectedValue = this.value[this.setNum];\r\n\r\n          setTimeout(() => {\r\n            this.rLayerPopup(this.setNum);\r\n            //룰렛 실행시킨지 5.5초후 자동으로 버튼 활성화\r\n            btn.disabled = false;\r\n            btn.style.pointerEvents = \"auto\";\r\n          }, 5500);\r\n        }\r\n      }, 50);\r\n      //0.05초마다 실행\r\n    },\r\n    rLayerPopup(num) {\r\n      const prizes = [100, 500, 1000, 500, 3000, 5000];\r\n      //주기로한 포인트 배열 value랑 같음 굳이 또 선언해야하나?\r\n\r\n      this.modalMessage = prizes[num];\r\n      //모달 메세지에 rRandom()을 실행하여 받은 0~5 에 해당하는 값을 보여줌\r\n      var modal = this.$el.querySelector(\"#resultModal\");\r\n      modal.style.display = \"block\";\r\n      //모달 css\r\n    },\r\n\r\n    hideModal() {\r\n      var modal = this.$el.querySelector(\"#resultModal\");\r\n      modal.style.display = \"none\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.rouletter {\r\n  position: relative;\r\n  width: 400px;\r\n  height: 400px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  top: 100px;\r\n}\r\n.rouletter-bg {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 350px;\r\n  height: 350px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n}\r\n.rouletter-wacu {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: #f5f5f2 url(\"../assets/룰.png\") no-repeat;\r\n  background-size: 100%;\r\n  transform-origin: center;\r\n  transition-timing-function: ease-in-out;\r\n  transition: 5s;\r\n}\r\n.rouletter-arrow {\r\n  position: absolute;\r\n  top: -5px; /* 핀이 룰렛 위에 약간 걸치도록 조정 */\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 50px; /* 이미지의 가로 길이에 맞게 조정하세요 */\r\n\r\n  background-image: url(\"../assets/룰렛핀.png\");\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n.rouletter-btn {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-70%, -50%);\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 80px;\r\n  background: #fff;\r\n  border-image: linear-gradient(to right, #fbfcb9be, #ffcdf3aa, #65d3ffaa);\r\n  border: 2px solid rgb(127, 127, 170);\r\n  color: rgb(127, 127, 170);\r\n  font-weight: bold;\r\n}\r\n.hidden-input {\r\n  display: none;\r\n}\r\n.modal {\r\n  display: none;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.modal-show {\r\n  /* showModal 변수가 true일 때 모달을 표시함 */\r\n  display: block;\r\n}\r\n.modal-dialog {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 300px;\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n}\r\n.modal-title {\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n  color: #4e4eff;\r\n}\r\n.modal-body {\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n.modal-footer {\r\n  text-align: right;\r\n}\r\n.modal-close {\r\n  cursor: pointer;\r\n  color: #999;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;EACNC,KAAK,EAAC;AAAW;gCACpBC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAc,I,aACvBC,mBAAA,CAAkC;EAA7BD,KAAK,EAAC;AAAgB,G;gCAE7BC,mBAAA,CAAmC;EAA9BD,KAAK,EAAC;AAAiB;;EAIvBE,IAAI,EAAC,QAAQ;EAACF,KAAK,EAAC,cAAc;EAACG,GAAG,EAAC;;;EAEvCH,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAe;;;EACnBA,KAAK,EAAC;;;;EACNA,KAAK,EAAC,YAAY;EAACD,EAAE,EAAC;;;EAGtBC,KAAK,EAAC;AAAc;;uBAjBjCI,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBJJ,mBAAA,CAMM,OANNK,UAMM,GALJC,UAEM,EACNC,UAAmC,EACnCP,mBAAA,CAAmE;IAA3DD,KAAK,EAAC,eAAe;IAAES,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,aAAa;KAAI,KAAG,E,GAG5DZ,mBAAA,CAA8D,SAA9Da,UAA8D,+BAC9Db,mBAAA,CAYM;IAZDD,KAAK,EAAAe,eAAA,EAAC,OAAO;MAAA,cAA0CC,KAAA,CAAAC;IAAS;IAAlDlB,EAAE,EAAC;MACpBE,mBAAA,CAUM,OAVNiB,UAUM,GATJjB,mBAAA,CAQM,OARNkB,UAQM,GAP2BH,KAAA,CAAAI,UAAU,I,cAAzChB,mBAAA,CAAiE,OAAjEiB,UAAiE,EAAAC,gBAAA,CAAnBN,KAAA,CAAAI,UAAU,oB,mCACVJ,KAAA,CAAAO,SAAS,I,cAAvDnB,mBAAA,CAEM,OAFNoB,UAEM,EAAAF,gBAAA,CADDN,KAAA,CAAAO,SAAS,oB,mCAEdtB,mBAAA,CAEM,OAFNwB,WAEM,GADJxB,mBAAA,CAAyD;IAApDD,KAAK,EAAC,aAAa;IAAES,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAgB,IAAA,KAAEd,QAAA,CAAAe,SAAA,IAAAf,QAAA,CAAAe,SAAA,IAAAD,IAAA,CAAS;KAAE,GAAO,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}