{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, vModelSelect as _vModelSelect, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"mypage_menu\"\n};\nconst _hoisted_2 = {\n  class: \"right_box\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"mypage_title_big\"\n}, \"전체 주문내역\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"filter-container\"\n};\nconst _hoisted_5 = {\n  class: \"date-filter\"\n};\nconst _hoisted_6 = {\n  class: \"order-search\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", null, \"주문 검색:\", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  class: \"status-filter\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"label\", null, \"배송 상태별 조회:\", -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createStaticVNode(\"<option value=\\\"전체\\\">전체</option><option value=\\\"배송준비\\\">배송준비</option><option value=\\\"배송중\\\">배송중</option><option value=\\\"배송완료\\\">배송완료</option><option value=\\\"주문취소\\\">주문취소</option>\", 5);\nconst _hoisted_15 = [_hoisted_10];\nconst _hoisted_16 = {\n  class: \"order-list\"\n};\nconst _hoisted_17 = {\n  class: \"order_status\"\n};\nconst _hoisted_18 = [\"onClick\"];\nconst _hoisted_19 = {\n  class: \"book-cover\"\n};\nconst _hoisted_20 = [\"src\"];\nconst _hoisted_21 = {\n  class: \"book_info\"\n};\nconst _hoisted_22 = {\n  class: \"mypage_book_title\"\n};\nconst _hoisted_23 = {\n  key: 0,\n  class: \"mypage_ordercnt\"\n};\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"order_cnt_out\"\n}, \" 외\", -1 /* HOISTED */);\nconst _hoisted_25 = {\n  class: \"mypage_orderpay\"\n};\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"p\", null, \"주문 상세\", -1 /* HOISTED */);\nconst _hoisted_27 = {\n  key: 0,\n  class: \"confirm-button\"\n};\nconst _hoisted_28 = {\n  key: 1,\n  class: \"confirm-button\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_GnbBar = _resolveComponent(\"GnbBar\");\n  const _component_myPage_top = _resolveComponent(\"myPage_top\");\n  const _component_myPageSide = _resolveComponent(\"myPageSide\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_GnbBar), _createVNode(_component_myPage_top), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_myPageSide)]), _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.startDate = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.startDate]]), _createTextVNode(\" ~ \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.endDate = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.endDate]]), _createCommentVNode(\" <button class=\\\"orderinfo_btn\\\" @click=\\\"fetchFilteredOrders\\\">검색</button> \")]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    class: \"mypage_book_search\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.orderKeyword = $event),\n    placeholder: \"책 이름 검색\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.orderKeyword]]), _createElementVNode(\"button\", {\n    class: \"orderinfo_btn\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.searchOrders && $options.searchOrders(...args))\n  }, \"검색\")]), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.selectedStatus = $event)\n  }, _hoisted_15, 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedStatus]]), _createElementVNode(\"button\", {\n    class: \"orderinfo_btn\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.fetchOrdersByStatus && $options.fetchOrdersByStatus(...args))\n  }, \"조회\")])]), _createElementVNode(\"div\", _hoisted_16, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredOrders, order => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: order.ORDER_ID,\n      class: \"order-box\"\n    }, [_createCommentVNode(\" 왼쪽에 배송 상태 및 결제일 \"), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"div\", {\n      class: _normalizeClass([{\n        mypage_completed_order: order.ORDER_STATE === '배송완료',\n        mypage_delivery: order.ORDER_STATE === '배송중',\n        mypage_delivery_cancle: order.ORDER_STATE === '주문취소'\n      }, \"mypage_order_state\"]),\n      onClick: $event => {\n        $options.setSelectedStatus(order.ORDER_STATE);\n        $options.fetchOrdersByStatus();\n      }\n    }, _toDisplayString(order.ORDER_STATE), 11 /* TEXT, CLASS, PROPS */, _hoisted_18), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"img\", {\n      src: order.items[0].BOOK_COVER,\n      alt: \"Book Cover\"\n    }, null, 8 /* PROPS */, _hoisted_20)])]), _createCommentVNode(\" 오른쪽에 책 정보 \"), _createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"div\", null, _toDisplayString(order.ORDER_PAYDATE), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_22, [_createTextVNode(_toDisplayString(order.items[0].BOOK_TITLE) + \" \", 1 /* TEXT */), order.ORDER_CNT > 1 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_23, [_hoisted_24, _createTextVNode(\" \" + _toDisplayString(order.ORDER_CNT - 1) + \" 건\", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"p\", _hoisted_25, _toDisplayString(order.ORDER_PAY), 1 /* TEXT */), _hoisted_26, order.ORDER_STATE === '배송완료' ? (_openBlock(), _createElementBlock(\"button\", _hoisted_27, \"구매확정\")) : _createCommentVNode(\"v-if\", true), order.ORDER_STATE === '배송준비' ? (_openBlock(), _createElementBlock(\"button\", _hoisted_28, \"주문취소\")) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 구매확정 버튼 \")]);\n  }), 128 /* KEYED_FRAGMENT */))])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_10","_createVNode","_component_GnbBar","_component_myPage_top","_hoisted_1","_component_myPageSide","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","type","$data","startDate","$event","endDate","_createCommentVNode","_hoisted_6","_hoisted_7","orderKeyword","placeholder","onClick","_cache","args","$options","searchOrders","_hoisted_8","_hoisted_9","selectedStatus","fetchOrdersByStatus","_hoisted_16","_createElementBlock","_Fragment","_renderList","filteredOrders","order","key","ORDER_ID","_hoisted_17","_normalizeClass","ORDER_STATE","setSelectedStatus","_hoisted_18","_hoisted_19","src","items","BOOK_COVER","alt","_hoisted_21","_toDisplayString","ORDER_PAYDATE","_hoisted_22","BOOK_TITLE","ORDER_CNT","_hoisted_23","_hoisted_24","_hoisted_25","ORDER_PAY","_hoisted_26","_hoisted_27","_hoisted_28"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\mypage.vue"],"sourcesContent":["<template>\r\n    <GnbBar />\r\n    <myPage_top />\r\n    <div class=\"mypage_menu\">\r\n        <myPageSide />\r\n    </div>\r\n    <div class=\"right_box\">\r\n        <h1 class=\"mypage_title_big\">전체 주문내역</h1>\r\n        <div class=\"filter-container\">\r\n            <div class=\"date-filter\">\r\n                <input type=\"date\" v-model=\"startDate\" />\r\n                ~\r\n                <input type=\"date\" v-model=\"endDate\" />\r\n                <!-- <button class=\"orderinfo_btn\" @click=\"fetchFilteredOrders\">검색</button> -->\r\n            </div>\r\n\r\n            <div class=\"order-search\">\r\n                <label>주문 검색:</label>\r\n                <input class=\"mypage_book_search\" type=\"text\" v-model=\"orderKeyword\" placeholder=\"책 이름 검색\" />\r\n                <button class=\"orderinfo_btn\" @click=\"searchOrders\">검색</button>\r\n            </div>\r\n\r\n            <div class=\"status-filter\">\r\n                <label>배송 상태별 조회:</label>\r\n                <select v-model=\"selectedStatus\">\r\n                    <option value=\"전체\">전체</option>\r\n                    <option value=\"배송준비\">배송준비</option>\r\n                    <option value=\"배송중\">배송중</option>\r\n                    <option value=\"배송완료\">배송완료</option>\r\n                    <option value=\"주문취소\">주문취소</option>\r\n                </select>\r\n                <button class=\"orderinfo_btn\" @click=\"fetchOrdersByStatus\">조회</button>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"order-list\">\r\n            <div v-for=\"order in filteredOrders\" :key=\"order.ORDER_ID\" class=\"order-box\">\r\n                <!-- 왼쪽에 배송 상태 및 결제일 -->\r\n                <div class=\"order_status\">\r\n                    <div\r\n                        :class=\"{\r\n                            mypage_completed_order: order.ORDER_STATE === '배송완료',\r\n                            mypage_delivery: order.ORDER_STATE === '배송중',\r\n                            mypage_delivery_cancle: order.ORDER_STATE === '주문취소',\r\n                        }\"\r\n                        class=\"mypage_order_state\"\r\n                        @click=\"\r\n                            setSelectedStatus(order.ORDER_STATE);\r\n                            fetchOrdersByStatus();\r\n                        \"\r\n                    >\r\n                        {{ order.ORDER_STATE }}\r\n                    </div>\r\n                    <div class=\"book-cover\">\r\n                        <img :src=\"order.items[0].BOOK_COVER\" alt=\"Book Cover\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- 오른쪽에 책 정보 -->\r\n                <div class=\"book_info\">\r\n                    <div>{{ order.ORDER_PAYDATE }}</div>\r\n                    <p class=\"mypage_book_title\">\r\n                        {{ order.items[0].BOOK_TITLE }}\r\n                        <span class=\"mypage_ordercnt\" v-if=\"order.ORDER_CNT > 1\"\r\n                            ><span class=\"order_cnt_out\"> 외</span> {{ order.ORDER_CNT - 1 }} 건</span\r\n                        >\r\n                    </p>\r\n                    <p class=\"mypage_orderpay\">{{ order.ORDER_PAY }}</p>\r\n                    <p>주문 상세</p>\r\n                    <button v-if=\"order.ORDER_STATE === '배송완료'\" class=\"confirm-button\">구매확정</button>\r\n                    <button v-if=\"order.ORDER_STATE === '배송준비'\" class=\"confirm-button\">주문취소</button>\r\n                </div>\r\n\r\n                <!-- 구매확정 버튼 -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nimport \"@/assets/css/myPage.css\";\r\nimport GnbBar from \"../components/gnbBar.vue\";\r\nimport myPage_top from \"../components/myPage_top.vue\";\r\nimport myPageSide from \"../components/myPageSide.vue\";\r\n\r\nexport default {\r\n    name: \"\",\r\n    components: { GnbBar, myPage_top, myPageSide },\r\n    data() {\r\n        return {\r\n            startDate: null,\r\n            endDate: null,\r\n            orderKeyword: \"\",\r\n            selectedStatus: \"전체\",\r\n            orderList: [],\r\n            orderState: \"\",\r\n        };\r\n    },\r\n    created() {\r\n        this.email = localStorage.getItem(\"userID\");\r\n    },\r\n    mounted() {\r\n        this.orderHistory();\r\n    },\r\n    computed: {\r\n        filteredOrders() {\r\n            if (!this.startDate || !this.endDate) {\r\n                return this.orderList; // 날짜가 선택되지 않은 경우 원래 주문 목록을 반환합니다\r\n            }\r\n\r\n            const startTimestamp = new Date(this.startDate).getTime();\r\n            const endTimestamp = new Date(this.endDate).getTime();\r\n\r\n            return this.orderList.filter((order) => {\r\n                const orderDate = new Date(order.ORDER_PAYDATE).getTime();\r\n                return orderDate >= startTimestamp && orderDate <= endTimestamp;\r\n            });\r\n        },\r\n    },\r\n    methods: {\r\n        searchOrders() {\r\n            axios({\r\n                url: \"http://localhost:3000/mypage/ordersearchbook\",\r\n                method: \"get\",\r\n                params: {\r\n                    userEmail: this.email,\r\n                    bookKeyword: this.orderKeyword,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    console.log(response.data);\r\n                    this.orderList = response.data;\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"주문 검색 오류:\", error);\r\n                });\r\n        },\r\n        setSelectedStatus(status) {\r\n            this.selectedStatus = status;\r\n        },\r\n        fetchOrdersByStatus() {\r\n            if (this.selectedStatus === \"전체\") {\r\n                // \"전체\" 옵션을 선택하였을 때, 이미 가져온 전체 주문 목록을 그대로 사용\r\n                this.orderHistory();\r\n            } else {\r\n                // 다른 상태를 선택한 경우, 해당 상태의 주문을 가져와서 표시\r\n                axios({\r\n                    url: \"http://localhost:3000/mypage/orderdelivery\",\r\n                    method: \"get\",\r\n                    params: {\r\n                        userEmail: this.email,\r\n                        orderState: this.selectedStatus,\r\n                    },\r\n                })\r\n                    .then((response) => {\r\n                        console.log(response.data);\r\n                        this.orderList = response.data;\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"배송 상태별 조회 오류:\", error);\r\n                    });\r\n            }\r\n        },\r\n        // 주문 목록을 표시하는 코드 및 API 호출 메서드 추가\r\n        orderHistory() {\r\n            axios({\r\n                url: \"http://localhost:3000/mypage/orderHistory\",\r\n                method: \"get\",\r\n                params: {\r\n                    userEmail: this.email,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    console.log(response.data); // 가져온 데이터 확인\r\n                    this.orderList = response.data; // 수정된 부분\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"주문내역 가져오기 오류:\", error);\r\n                });\r\n        },\r\n    },\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}