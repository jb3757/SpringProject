{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"naverIdLogin\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.logout && $options.logout(...args))\n  }, \"로그아웃\")])]);\n}","map":{"version":3,"names":["id","_createElementBlock","_createElementVNode","_hoisted_1","type","onClick","_cache","args","$options","logout"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\NaverLogin.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div id=\"naverIdLogin\">\r\n        <button type=\"button\" @click=\"logout\">로그아웃</button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  <script>\r\n  import axios from \"axios\";\r\n  export default {\r\n    data(){\r\n      return {\r\n        naverLogin: null,\r\n      };\r\n    },\r\n    mounted() {\r\n      let userData = {};\r\n      this.naverLogin = new window.naver.LoginWithNaverId({\r\n        clientId: \"ZpkAE5YTiolSaFISr_CV\", // 개발자센터에 등록한 Client ID\r\n        callbackUrl: \"http://localhost:8080/naverlogin\", // 개발자센터에 등록한 callback Url\r\n        isPopup: false, // 팝업을 통한 연동처리 여부\r\n        loginButton: {\r\n          color: \"green\", type: 3, height: 60 },  // 로그인 버튼의 타입을 지정\r\n      });\r\n  \r\n      // 설정 정보를 초기화 연동을 준비\r\n      this.naverLogin.init();\r\n  \r\n      this.naverLogin.getLoginStatus((status) => {\r\n        if (status) {\r\n  \r\n          // 필수적으로 받아야하는 프로필 정보가 있다면 callback 처리 시점에 체크\r\n          var email = this.naverLogin.user.getEmail();\r\n          var nickname = this.naverLogin.user.getNickName();\r\n          var gender = this.naverLogin.user.getGender();\r\n          var age = this.naverLogin.user.getAge();\r\n          var profile_image = this.naverLogin.user.getProfileImage();\r\n          /* var mobile = this.naverLogin.user.getMobile(); */\r\n          \r\n          \r\n          userData = {email, nickname, gender, age, profile_image};\r\n  \r\n          if (email == undefined || email == null) {\r\n            alert(\"이메일은 필수 정보입니다. 정보 제공을 동의해주세요.\");\r\n            // 사용자 정보 재동의를 위하여 다시 동의 페이지로 이동함\r\n            this.naverLogin.reprompt();\r\n            return;\r\n          }\r\n        } else {\r\n          console.log(\"callback 처리에 실패하였습니다.\");\r\n        }\r\n        \r\n        if (nickname == undefined || nickname == null) {          \r\n            /* alert(\"별명은 필수 정보입니다. 정보 제공을 동의해주세요.\"); */\r\n            // 사용자 정보 재동의를 위하여 다시 동의 페이지로 이동함\r\n            this.naverLogin.reprompt();\r\n            return;\r\n          } else {\r\n          console.log(\"callback 처리에 실패하였습니다.\");\r\n        }\r\n  \r\n        if (gender == undefined || gender == null) {\r\n            /* alert(\"성별은 필수 정보입니다. 정보 제공을 동의해주세요.\"); */\r\n            // 사용자 정보 재동의를 위하여 다시 동의 페이지로 이동함\r\n            this.naverLogin.reprompt();\r\n            return;\r\n          } else {\r\n          console.log(\"callback 처리에 실패하였습니다.\");\r\n        }\r\n  \r\n        if (age == undefined || age == null) {\r\n            /* alert(\"연령대는 필수 정보입니다. 정보 제공을 동의해주세요.\"); */\r\n            // 사용자 정보 재동의를 위하여 다시 동의 페이지로 이동함\r\n            this.naverLogin.reprompt();\r\n            return;\r\n          } else {\r\n          console.log(\"callback 처리에 실패하였습니다.\");\r\n        }\r\n  \r\n        if (profile_image == undefined || profile_image == null) {\r\n            /* alert(\"프로필 이미지는 필수 정보입니다. 정보 제공을 동의해주세요.\"); */\r\n            // 사용자 정보 재동의를 위하여 다시 동의 페이지로 이동함\r\n            this.naverLogin.reprompt();\r\n            return;\r\n          } else {\r\n          console.log(\"callback 처리에 실패하였습니다.\");\r\n        }\r\n  \r\n        this.naverlogin2(userData);\r\n  \r\n        // window.location.href = '/';\r\n  \r\n  \r\n      });\r\n    },\r\n    methods: {\r\n      logout() {\r\n        const accessToken = this.naverLogin.accessToken.accessToken;\r\n        const url='/oauth2.0/token?grant_type=delete&client_id=ZpkAE5YTiolSaFISr_CV&client_secret=J_ia7bQ3W_&access_token=${accessToken}&service_provider=NAVER';\r\n  \r\n        axios.get(url).then((res) => {\r\n          console.log(res.data);\r\n        });\r\n  \r\n        \r\n  \r\n      },\r\n      naverlogin2(userData) {\r\n              const email = userData.email;\r\n  \r\n              axios({\r\n                  url: \"http://localhost:3000/auth/naverlogin\",\r\n                  method: \"POST\",\r\n                  data: {\r\n                      email: userData.email,\r\n                      nick: userData.nickname,\r\n                      image: userData.profile_image,\r\n                      sex: userData.gender,\r\n                      agegroup: userData.age,\r\n                      provider: 'naver'\r\n                  },\r\n  \r\n              }).then(async (res)=> {\r\n                  this.pullData(email)\r\n              })\r\n          },\r\n      pullData(email) {\r\n        axios({\r\n                  url: \"http://localhost:3000/auth/naverData\",\r\n                  method: \"POST\",\r\n                  data: {\r\n                      email: email,\r\n                  }\r\n              }).then(async (res)=> {\r\n                  localStorage.setItem('userID', res.data.email);\r\n                  localStorage.setItem('userNick', res.data.nick);\r\n                  localStorage.setItem('userImage', res.data.image);\r\n                  localStorage.setItem('userProvider', res.data.provider);\r\n  \r\n                  window.location.href = '/';\r\n              })\r\n      }\r\n    },\r\n  };\r\n  </script>\r\n  <style>\r\n  #naverIdLogin {\r\n    display: none;\r\n  }\r\n  </style>"],"mappings":";;EAEWA,EAAE,EAAC;AAAc;;uBADxBC,mBAAA,CAIM,cAHJC,mBAAA,CAEM,OAFNC,UAEM,GADJD,mBAAA,CAAmD;IAA3CE,IAAI,EAAC,QAAQ;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAE,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}