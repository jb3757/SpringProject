{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport gnbbar from \"../components/gnbBar.vue\";\nexport default {\n  components: {\n    gnbbar\n  },\n  data() {\n    return {\n      userAtt: [10, 11, 13, 15],\n      //ex 출석체크 데이터\n      today: null,\n      //오늘의 날짜 데이터\n      month: null //30일인지 31일인지 확인\n    };\n  },\n\n  mounted() {\n    this.getMonth();\n  },\n  methods: {\n    checkAtt(index) {\n      // 유저가 출석한 날짜를 받아와서 출석한 날짜는 true 안한 날짜는 false로 return\n      return this.userAtt.includes(index);\n    },\n    attendance() {\n      this.today = new Date().toISOString().slice(8, 10); //오늘의 날짜 추출 STRING으로 추출됨\n\n      const todayInt = parseInt(this.today); //STRING > INT\n\n      if (this.userAtt.includes(todayInt)) {\n        //버튼 연속으로 누르면 거부하는 조건문\n        return;\n      }\n      this.userAtt.push(todayInt); //버튼을 처음 누르면 배열에 오늘 날짜 삽입\n      console.log(this.userAtt); //테스트용 콘솔\n      alert(`${todayInt}일 출석 성공!!`);\n\n      //출석체크 쿠폰 출석일이 쌓이면 받는 형식으로\n    },\n\n    getMonth() {\n      //달에 알맞은 일자 출력하게 하는 함수\n      //new Date 객체 생성하고 getMonth() 쓰는게 더 간단함\n      const checkMonth = new Date().toISOString().slice(5, 7); //2023-\"01\"-01 //무슨 달인지 추출\n      if (checkMonth == \"01\" || checkMonth == \"03\" || checkMonth == \"05\" || checkMonth == \"07\" || checkMonth == \"08\" || checkMonth == \"10\" || checkMonth == \"12\") {\n        this.month = 31; //31일인 달\n      } else if (checkMonth == \"02\") {\n        this.month = 28; //2월은 28일\n      } else {\n        this.month = 30; //나머지는 30일\n      }\n    }\n  }\n};","map":{"version":3,"names":["gnbbar","components","data","userAtt","today","month","mounted","getMonth","methods","checkAtt","index","includes","attendance","Date","toISOString","slice","todayInt","parseInt","push","console","log","alert","checkMonth"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\attendance.vue"],"sourcesContent":["<template>\r\n  <gnbbar />\r\n  <div class=\"attendance\">\r\n    <div class=\"bar_wrap\">\r\n      <p class=\"name\">이 달의 출석일</p>\r\n      <div class=\"bar\">\r\n        <div style=\"width: 13%\"></div>\r\n      </div>\r\n    </div>\r\n    <!-- 상단 문구 -->\r\n    <div class=\"head\"></div>\r\n\r\n    <!-- 출석 도장 영역 -->\r\n    <ol class=\"stamp\">\r\n      <li v-for=\"index in month\">\r\n        <div class=\"stamp-item\">\r\n          <span v-if=\"checkAtt(index)\"\r\n            ><img\r\n              src=\"https://contents.kyobobook.co.kr/resources/fo/images/common/ink/img_attendance_active@2x.png\"\r\n              alt=\"출석완료\"\r\n          /></span>\r\n          <span v-else>{{ index }}</span>\r\n        </div>\r\n      </li>\r\n    </ol>\r\n    <div class=\"attendance_button\">\r\n      <button @click=\"attendance\">출석체크</button>\r\n    </div>\r\n    <!-- 비로그인인 경우 -->\r\n  </div>\r\n  <div class=\"benefit\"></div>\r\n</template>\r\n\r\n<script>\r\nimport gnbbar from \"../components/gnbBar.vue\";\r\nexport default {\r\n  components: {\r\n    gnbbar,\r\n  },\r\n  data() {\r\n    return {\r\n      userAtt: [10, 11, 13, 15], //ex 출석체크 데이터\r\n      today: null, //오늘의 날짜 데이터\r\n      month: null, //30일인지 31일인지 확인\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getMonth();\r\n  },\r\n  methods: {\r\n    checkAtt(index) {\r\n      // 유저가 출석한 날짜를 받아와서 출석한 날짜는 true 안한 날짜는 false로 return\r\n      return this.userAtt.includes(index);\r\n    },\r\n    attendance() {\r\n      this.today = new Date().toISOString().slice(8, 10); //오늘의 날짜 추출 STRING으로 추출됨\r\n\r\n      const todayInt = parseInt(this.today); //STRING > INT\r\n\r\n      if (this.userAtt.includes(todayInt)) {\r\n        //버튼 연속으로 누르면 거부하는 조건문\r\n        return;\r\n      }\r\n\r\n      this.userAtt.push(todayInt); //버튼을 처음 누르면 배열에 오늘 날짜 삽입\r\n      console.log(this.userAtt); //테스트용 콘솔\r\n      alert(`${todayInt}일 출석 성공!!`);\r\n\r\n      //출석체크 쿠폰 출석일이 쌓이면 받는 형식으로\r\n    },\r\n    getMonth() {\r\n      //달에 알맞은 일자 출력하게 하는 함수\r\n      //new Date 객체 생성하고 getMonth() 쓰는게 더 간단함\r\n      const checkMonth = new Date().toISOString().slice(5, 7); //2023-\"01\"-01 //무슨 달인지 추출\r\n      if (\r\n        checkMonth == \"01\" ||\r\n        checkMonth == \"03\" ||\r\n        checkMonth == \"05\" ||\r\n        checkMonth == \"07\" ||\r\n        checkMonth == \"08\" ||\r\n        checkMonth == \"10\" ||\r\n        checkMonth == \"12\"\r\n      ) {\r\n        this.month = 31; //31일인 달\r\n      } else if (checkMonth == \"02\") {\r\n        this.month = 28; //2월은 28일\r\n      } else {\r\n        this.month = 30; //나머지는 30일\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.attendance_button {\r\n  text-align: center;\r\n}\r\n.attendance_button button {\r\n  box-sizing: border-box;\r\n  width: 300px;\r\n  padding: 15px 20px;\r\n  border-radius: 20px;\r\n  background-color: #4e4eff;\r\n  box-shadow: 0 6px 6px rgba(29, 29, 104, 0.2);\r\n  margin-top: 5%;\r\n  color: #fff;\r\n  font-size: large;\r\n  border: none;\r\n}\r\n.attendance .bar_wrap .name {\r\n  font-size: 20px;\r\n  line-height: 30px;\r\n  letter-spacing: -0.01em;\r\n  color: #fff;\r\n}\r\np {\r\n  display: block;\r\n  margin-block-start: 1em;\r\n  margin-block-end: 1em;\r\n  margin-inline-start: 0px;\r\n  margin-inline-end: 0px;\r\n}\r\n.attendance .bar_wrap {\r\n  position: absolute;\r\n  left: 50%;\r\n  top: -50px;\r\n  display: -webkit-box;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  display: -webkit-flex;\r\n  -webkit-box-pack: center;\r\n  -ms-flex-pack: center;\r\n  justify-content: center;\r\n  -webkit-justify-content: center;\r\n  -webkit-box-align: center;\r\n  -moz-box-align: center;\r\n  -ms-flex-align: center;\r\n  -webkit-align-items: center;\r\n  align-items: center;\r\n  -webkit-box-orient: horizontal;\r\n  -webkit-box-direction: normal;\r\n  -moz-box-orient: horizontal;\r\n  -moz-box-direction: normal;\r\n  -ms-flex-direction: row;\r\n  -webkit-flex-direction: row;\r\n  flex-direction: row;\r\n  transform: translateX(-50%);\r\n  box-sizing: border-box;\r\n  width: 500px;\r\n  padding: 15px 20px;\r\n  border-radius: 20px;\r\n  background-color: #4e4eff;\r\n  box-shadow: 0 6px 6px rgba(29, 29, 104, 0.2);\r\n}\r\n.attendance {\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  width: 920px;\r\n  margin: auto;\r\n  margin-top: 5%;\r\n  margin-bottom: 5%;\r\n  padding: 92px 128px 90px;\r\n  border-radius: 30px;\r\n  background-color: #fff;\r\n  box-shadow: 0 20px 80px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.stamp {\r\n  display: flex;\r\n  flex-wrap: wrap; /* 공간이 부족하면 다음 줄로 이동 */\r\n  justify-content: flex-start; /* 왼쪽 정렬 */\r\n  align-items: flex-start; /* 위쪽 정렬 */\r\n  list-style: none; /* 기본 목록 스타일 제거 */\r\n  padding: 0; /* 기본 padding 제거 */\r\n  margin: 0; /* 기본 margin 제거 */\r\n}\r\n\r\n.stamp li {\r\n  /* 각 li 요소의 크기와 스타일 조정 */\r\n  width: 18%; /* 5개의 항목이 한 줄에 표시되므로 가로 너비는 20% */\r\n  height: 100px;\r\n  box-sizing: border-box;\r\n  margin: 5px;\r\n  padding: 5px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.stamp-item {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n}\r\n\r\n.stamp-item img {\r\n  max-width: 80%; /* 이미지가 자동으로 축소되도록 함 */\r\n  max-height: 80%; /* 이미지가 자동으로 축소되도록 함 */\r\n  margin: auto;\r\n  display: block;\r\n}\r\n.benefit {\r\n  position: relative;\r\n  margin-left: 10%;\r\n  border: 1px solid #4e4eff;\r\n  width: 80%;\r\n  top: 150px;\r\n  height: 30px;\r\n  margin-bottom: 100px;\r\n}\r\n</style>\r\n"],"mappings":";AAkCA,OAAOA,MAAK,MAAO,0BAA0B;AAC7C,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAAE;MAC3BC,KAAK,EAAE,IAAI;MAAE;MACbC,KAAK,EAAE,IAAI,CAAE;IACf,CAAC;EACH,CAAC;;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,QAAQ,CAAC,CAAC;EACjB,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQA,CAACC,KAAK,EAAE;MACd;MACA,OAAO,IAAI,CAACP,OAAO,CAACQ,QAAQ,CAACD,KAAK,CAAC;IACrC,CAAC;IACDE,UAAUA,CAAA,EAAG;MACX,IAAI,CAACR,KAAI,GAAI,IAAIS,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;;MAEpD,MAAMC,QAAO,GAAIC,QAAQ,CAAC,IAAI,CAACb,KAAK,CAAC,EAAE;;MAEvC,IAAI,IAAI,CAACD,OAAO,CAACQ,QAAQ,CAACK,QAAQ,CAAC,EAAE;QACnC;QACA;MACF;MAEA,IAAI,CAACb,OAAO,CAACe,IAAI,CAACF,QAAQ,CAAC,EAAE;MAC7BG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,OAAO,CAAC,EAAE;MAC3BkB,KAAK,CAAE,GAAEL,QAAS,WAAU,CAAC;;MAE7B;IACF,CAAC;;IACDT,QAAQA,CAAA,EAAG;MACT;MACA;MACA,MAAMe,UAAS,GAAI,IAAIT,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;MACzD,IACEO,UAAS,IAAK,IAAG,IACjBA,UAAS,IAAK,IAAG,IACjBA,UAAS,IAAK,IAAG,IACjBA,UAAS,IAAK,IAAG,IACjBA,UAAS,IAAK,IAAG,IACjBA,UAAS,IAAK,IAAG,IACjBA,UAAS,IAAK,IAAG,EACjB;QACA,IAAI,CAACjB,KAAI,GAAI,EAAE,EAAE;MACnB,OAAO,IAAIiB,UAAS,IAAK,IAAI,EAAE;QAC7B,IAAI,CAACjB,KAAI,GAAI,EAAE,EAAE;MACnB,OAAO;QACL,IAAI,CAACA,KAAI,GAAI,EAAE,EAAE;MACnB;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}