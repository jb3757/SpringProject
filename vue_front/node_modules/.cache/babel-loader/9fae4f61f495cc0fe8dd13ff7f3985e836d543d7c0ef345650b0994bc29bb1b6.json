{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios, { Axios } from \"axios\";\nimport \"../assets/css/bookDetail.css\";\nimport GnbBar from \"../components/gnbBar.vue\";\nimport star from \"@/components/star.vue\";\nexport default {\n  components: {\n    GnbBar,\n    star\n  },\n  data() {\n    return {\n      bookDetailData: [],\n      reviewData: [],\n      reviewCount: 0,\n      isLiked: false,\n      sortvalue: \"최신순\",\n      showBtn: true,\n      countNum: 1,\n      bookId: this.$route.params.bookNum,\n      averageRating: 0\n\n      // 댓글 데이터를 페이지별로 나눈 배열\n    };\n  },\n\n  created() {\n    this.email = localStorage.getItem(\"userID\");\n  },\n  mounted() {\n    this.bookDetail();\n    this.fetchReviewData();\n    this.fetchReviewCount();\n    this.fetchAverageRating();\n    this.setRecentview(); //최근 본 책 db에 삽입\n    // this.averageRating();\n    // this.reviewAverageData();\n  },\n\n  computed: {\n    paymentPrice() {\n      return this.bookDetailData.BOOK_PRICE * this.countNum;\n    },\n    // formattedAverageRating() {\n    //     return this.reviewAverageData ? this.reviewAverageData.toFixed(1) : \"0.0\";\n    // },\n    formattedBookDetailData() {\n      if (this.bookDetailData) {\n        return this.formatHtmlEntities(this.bookDetailData.description);\n      }\n      return \"\";\n    }\n  },\n  methods: {\n    toggleBtn() {\n      this.showBtn = !this.showBtn; // showBtn 데이터 값을 토글\n    },\n\n    // 최신순 리스트 불러오기-------------------------------------------------------------------------------------------------------\n    // ---------------------------------------------------------------------------------------------------------------------\n    bookDetail() {\n      axios({\n        url: \"http://localhost:3000/detail/\",\n        method: \"get\",\n        params: {\n          bookNum: this.bookId\n        }\n      }).then(response => {\n        console.log(response.data); // 가져온 데이터 확인\n        this.bookDetailData = response.data[0];\n      }).catch(error => {\n        console.error(\"책 상세 정보 가져오기 오류:\", error);\n      });\n    },\n    formatHtmlEntities(input) {\n      return input.replace(/&lt;/g, \"< \").replace(/&gt;/g, \" > \");\n    },\n    async addToCart() {\n      if (localStorage.getItem(\"userID\")) {\n        await axios({\n          url: \"http://localhost:3000/detail/gotoCart\",\n          method: \"POST\",\n          data: {\n            email: this.email,\n            bookId: this.bookId\n          }\n        }).then(res => {\n          alert(\"장바구니에 추가되었습니다.\", this.bookId);\n          this.$refs.gnbBarComponent.getCartNum();\n        });\n      } else {\n        const conResult = confirm(\"로그인이 필요합니다. \\n 로그인 하시겠습니까?\");\n        conResult ? window.location.href = \"/login\" : null;\n      }\n    },\n    //좋아요 추가/취소\n    toggleLike() {\n      if (localStorage.getItem(\"userID\")) {\n        const data = {\n          bookId: this.bookId\n        };\n        axios.post(`http://localhost:3000/floating/cancellikebooks?userEmail=${localStorage.getItem(\"userID\")}`, data).then(() => {\n          this.isLiked = !this.isLiked;\n          // 좋아요 토글 이후에 리뷰 개수 및 평균 평점 업데이트\n          this.fetchReviewData();\n          this.fetchReviewCount();\n          this.fetchAverageRating();\n        }).catch(error => {\n          console.error(\"좋아요 에러\", error);\n        });\n      } else {\n        const result = confirm(\"로그인이 필요합니다. \\n 로그인하시겠습니까?\");\n        if (result) {\n          window.location.href = \"/login\";\n        }\n      }\n    },\n    // ... (\n    // 리뷰 시작-------------------------------------------------------------------------------------------------------\n    async sendReview() {\n      const ratingInput = document.querySelector(\"input[name='rating']:checked\");\n      const rating = ratingInput ? parseFloat(ratingInput.value) : 0; // Get selected rating value\n\n      const comment = this.$refs.reviewComment.value; // Get the review comment from the textarea\n\n      if (!rating || !comment) {\n        alert(\"리뷰 내용과 별점 추가해주세요\");\n        return;\n      }\n      const reviewData = {\n        REV_WRITER: localStorage.getItem(\"userID\"),\n        // Assuming you store the user's ID in localStorage\n        REV_ORDERITEM_BOOK: this.bookId,\n        REV_COMMENT: comment,\n        REV_RATING: rating * 2\n      };\n      try {\n        const response = await axios.post(\"http://localhost:3000/review/postreview\", reviewData);\n\n        // Reset the review form\n        this.$refs.reviewComment.value = \"\";\n        ratingInput.checked = false;\n\n        // Fetch updated review data and average rating\n        this.fetchReviewData();\n        this.fetchReviewCount();\n        this.fetchAverageRating();\n        alert(response.data.message); // Display success message\n      } catch (error) {\n        console.error(\"리뷰 전송 실패:\", error);\n        alert(\"리뷰 전송 실패.\");\n      }\n    },\n    //리뷰 개수 가져오기\n    fetchReviewCount() {\n      axios({\n        url: `http://localhost:3000/review/reviewcount/${this.bookId}`,\n        method: \"get\"\n      }).then(response => {\n        this.reviewCount = response.data.reviewCount;\n      }).catch(error => {\n        console.error(\"Counting Err\", Error);\n      });\n    },\n    //리뷰 평균 별점\n    async fetchAverageRating() {\n      try {\n        const res = await axios.get(`http://localhost:3000/review/averagerating/${this.bookId}`);\n        this.averageRating = res.data.averageRating;\n        console.log(this.averageRating);\n      } catch (err) {\n        console.error(\"average Err\", err);\n      }\n    },\n    // 리뷰 데이터 최신순 리스트 불러오기-------------------------------------------------------------------------------------------------------\n    // ---------------------------------------------------------------------------------------------------------------------\n\n    fetchReviewData() {\n      if (this.sortvalue === \"최신순\") {\n        this.loadRecentReviews();\n      } else if (this.sortvalue === \"평점 높은 순\") {\n        this.loadTopRatedReviews();\n      } else if (this.sortvalue === \"평점 낮은 순\") {\n        this.loadLowRatedReviews();\n      }\n    },\n    // 리뷰 데이터 최신순 리스트 불러오기-------------------------------------------------------------------------------------------------------\n    // ---------------------------------------------------------------------------------------------------------------------\n    loadRecentReviews() {\n      axios({\n        url: \"http://localhost:3000/review/reviewdata\",\n        method: \"get\",\n        params: {\n          bookId: this.bookId\n        }\n      }).then(response => {\n        // 서버 응답 처리\n        this.reviewData = response.data.review; // reviewData에 데이터 저장\n      }).catch(error => {\n        console.error(\"Error fetching review data:\", error);\n      });\n    },\n    // 리뷰 데이터 평점 높은 순 리스트 불러오기-------------------------------------------------------------------------------------------------------\n    // ---------------------------------------------------------------------------------------------------------------------\n    loadTopRatedReviews() {\n      axios({\n        url: \"http://localhost:3000/review/reviewrating\",\n        method: \"get\",\n        params: {\n          bookId: this.bookId\n        }\n      }).then(response => {\n        // 서버 응답 처리\n        this.reviewData = response.data.review; // reviewData에 데이터 저장\n      }).catch(error => {\n        console.error(\"Error fetching review data:\", error);\n      });\n    },\n    // 리뷰 데이터 평점 낮은 순 리스트 불러오기-------------------------------------------------------------------------------------------------------\n    // ---------------------------------------------------------------------------------------------------------------------\n    loadLowRatedReviews() {\n      axios({\n        url: \"http://localhost:3000/review/lowreviewrating\",\n        method: \"get\",\n        params: {\n          bookId: this.bookId\n        }\n      }).then(response => {\n        // 서버 응답 처리\n        this.reviewData = response.data.review; // reviewData에 데이터 저장\n      }).catch(error => {\n        console.error(\"Error fetching review data:\", error);\n      });\n    },\n    // 리뷰 데이터 평점 낮은 순 리스트 불러오기-------------------------------------------------------------------------------------------------------\n    // ---------------------------------------------------------------------------------------------------------------------\n    // 리뷰 -------------------------------------------------------------------------------------------------------\n\n    // averageRating() {\n    //     axios({\n    //         url: `http://localhost:3000/review/averagerating/${this.bookId}`,\n    //         method: \"get\",\n    //     })\n    //         .then((response) => {\n    //             this.reviewAverageData = response.data.averageRating;\n    //         })\n    //         .catch((error) => {\n    //             console.error(\"평균 평점을 불러오는 중 오류 발생:\", error);\n    //         });\n    // },\n    convertRatingToHalfStars(number) {\n      number = number / 2;\n      if (Number.isInteger(number)) {\n        if (number >= 1 && number <= 5) {\n          return number;\n        } else {\n          return 0; // 범위를 벗어나는 경우\n        }\n      } else {\n        const integerPart = Math.floor(number);\n        const decimalPart = number - integerPart;\n        if (decimalPart < 0.5) {\n          return integerPart;\n        } else {\n          return integerPart + 0.5;\n        }\n      }\n    },\n    formatReviewScore(number) {\n      if (Number.isInteger(number)) {\n        return number.toFixed(1); // 정수인 경우 소수점 자리를 1로 설정하여 변환\n      } else {\n        return number.toString(); // 소수인 경우 그대로 문자열로 변환\n      }\n    },\n\n    decreaseCount() {\n      if (this.countNum > 1) {\n        this.countNum--; // 현재 카운트 값이 1보다 큰 경우에만 1 감소\n      }\n    },\n\n    increaseCount() {\n      this.countNum++; // countNum 값을 1 증가\n    },\n\n    updateCartNum() {\n      this.$refs.gnbBarComponent.getCartNum();\n    },\n    formatReviewScore(number) {\n      if (Number.isInteger(number)) {\n        return number.toFixed(1); // 정수인 경우 소수점 자리를 1로 설정하여 변환\n      } else {\n        return number.toString(); // 소수인 경우 그대로 문자열로 변환\n      }\n    },\n\n    //최근본 책 데이터 삽입\n    //------------------------\n    setRecentview() {\n      const useremail = localStorage.getItem(\"userID\");\n      const bookid = this.bookId;\n      axios({\n        url: \"http://localhost:3000/detail/setRec\",\n        method: \"POST\",\n        data: {\n          email: useremail,\n          bookid: bookid\n        }\n      }).then(res => {\n        console.log(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    //결제\n    //----------------------\n    gotoPay() {\n      const bookPrice = this.bookDetailData.BOOK_PRICE;\n      const bookfee = bookPrice >= 50000 ? 0 : 2500;\n      const totalPoint = bookPrice * 0.05;\n      console.log(this.$route.params.id);\n      console.log(this.bookDetailData.BOOK_PRICE);\n      console.log(bookfee);\n      console.log(totalPoint);\n      console.log(this.bookDetailData.BOOK_TITLE);\n      console.log(localStorage.getItem(\"userID\"));\n      axios({\n        url: \"http://localhost:3000/detail/gotoPay\",\n        method: \"POST\",\n        data: {\n          bookId: this.bookId,\n          bookNum: 1,\n          email: localStorage.getItem(\"userID\"),\n          total_pay: bookPrice,\n          total_point: totalPoint,\n          fee: bookfee\n        }\n      }).then(res => {\n        console.log(res.data);\n        this.$router.push({\n          name: \"paymentPage\",\n          query: {\n            payid: res.data.payID\n          }\n        });\n      }).catch(error => {\n        console.error(\"Error goToPay :\", error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","Axios","GnbBar","star","components","data","bookDetailData","reviewData","reviewCount","isLiked","sortvalue","showBtn","countNum","bookId","$route","params","bookNum","averageRating","created","email","localStorage","getItem","mounted","bookDetail","fetchReviewData","fetchReviewCount","fetchAverageRating","setRecentview","computed","paymentPrice","BOOK_PRICE","formattedBookDetailData","formatHtmlEntities","description","methods","toggleBtn","url","method","then","response","console","log","catch","error","input","replace","addToCart","res","alert","$refs","gnbBarComponent","getCartNum","conResult","confirm","window","location","href","toggleLike","post","result","sendReview","ratingInput","document","querySelector","rating","parseFloat","value","comment","reviewComment","REV_WRITER","REV_ORDERITEM_BOOK","REV_COMMENT","REV_RATING","checked","message","Error","get","err","loadRecentReviews","loadTopRatedReviews","loadLowRatedReviews","review","convertRatingToHalfStars","number","Number","isInteger","integerPart","Math","floor","decimalPart","formatReviewScore","toFixed","toString","decreaseCount","increaseCount","updateCartNum","useremail","bookid","gotoPay","bookPrice","bookfee","totalPoint","id","BOOK_TITLE","total_pay","total_point","fee","$router","push","name","query","payid","payID"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\bookDetail.vue"],"sourcesContent":["<template>\r\n    <GnbBar ref=\"gnbBarComponent\" />\r\n    <div class=\"detail_top\"></div>\r\n    <div class=\"title_wri_sum\">\r\n        <div class=\"detail_title\">\r\n            {{ bookDetailData.BOOK_TITLE }}\r\n        </div>\r\n        <div class=\"writer_date\">{{ bookDetailData.BOOK_AUTHOR }} | {{ bookDetailData.BOOK_PUBDATE }}</div>\r\n        <div class=\"book_summary\">\r\n            {{ bookDetailData.BOOK_DESCRIPTION ? formatHtmlEntities(bookDetailData.BOOK_DESCRIPTION) : \"\" }}\r\n        </div>\r\n    </div>\r\n    <div class=\"img_price_btn\">\r\n        <div class=\"detail_img\">\r\n            <img :src=\"bookDetailData.BOOK_COVER\" alt=\"detail_img_sample\" />\r\n        </div>\r\n        <div class=\"img_right\">\r\n            <div class=\"det_top_star\">\r\n                <star :rating=\"convertRatingToHalfStars(averageRating)\" />\r\n                <div class=\"top_star_score\">\r\n                    {{ averageRating }}\r\n                    <div class=\"top_star_count\">({{ reviewCount }})</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"price_point_set_1\">\r\n                <div class=\"price_point_title_1\">판매가</div>\r\n                <div class=\"price_point_detail_1\">\r\n                    {{ bookDetailData.BOOK_PRICE }}\r\n                    <div class=\"won\">원</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"price_point_set_2\">\r\n                <div class=\"price_point_title_2\">포인트</div>\r\n                <div class=\"price_point_detail_2\">{{ bookDetailData.BOOK_POINT }}</div>\r\n            </div>\r\n            <div class=\"price_point_set_3\">\r\n                <div class=\"price_point_title_3\">배송비</div>\r\n                <div class=\"price_point_detail_3\">\r\n                    2,500\r\n                    <div class=\"won_3\">원</div>\r\n                </div>\r\n            </div>\r\n            <!-- --------------------------------------------------------------------------------------------- -->\r\n            <!-- 갯수 늘리고 카운트, 가격 -->\r\n            <div class=\"count_price\">\r\n                <div class=\"count_btn_ib\">\r\n                    <div class=\"count_btn\">\r\n                        <button class=\"count_minus\" @click=\"decreaseCount\">\r\n                            <img src=\"@/assets/img/count_minus.png\" alt=\"count_minus\" />\r\n                        </button>\r\n                        <div class=\"count_num\">{{ countNum }}</div>\r\n                        <button class=\"count_plus\" @click=\"increaseCount\">\r\n                            <img src=\"@/assets/img/count_plus.png\" alt=\"count_plus\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"payment_price\">{{ paymentPrice }}</div>\r\n                <div class=\"won_4\">원</div>\r\n            </div>\r\n            <div id=\"likeButton\" class=\"pay_cart_like\">\r\n                <button class=\"pay_btn\" @click=\"gotoPay\">결제하러 가기</button>\r\n                <button class=\"go_to_cart\">\r\n                    <img @click=\"addToCart(bookDetailData.BOOK_ID)\" src=\"@/assets/img/detail_cart.png\" alt=\"detail_cart\" />\r\n                </button>\r\n                <button class=\"detail_like_btn\" @click=\"toggleLike\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"20\" vie wBox=\"0 0 22 20\">\r\n                        <path\r\n                            d=\"M21.6071 6.60738C21.6071 13.5969 11.7775 19.2544 11.3589 19.488C11.2486 19.5506 11.1252 19.5834 11 19.5834C10.8747 19.5834 10.7514 19.5506 10.641 19.488C10.2224 19.2544 0.392822 13.5969 0.392822 6.60738C0.394577 4.96608 1.01378 3.39252 2.11457 2.23194C3.21537 1.07136 4.70787 0.418537 6.26463 0.416687C8.22033 0.416687 9.93262 1.30335 11 2.8021C12.0673 1.30335 13.7796 0.416687 15.7353 0.416687C17.2921 0.418537 18.7846 1.07136 19.8854 2.23194C20.9862 3.39252 21.6054 4.96608 21.6071 6.60738Z\"\r\n                            :fill=\"isLiked ? '#4E4EFF' : '#7d7d7d'\"\r\n                        />\r\n                        <path\r\n                            d=\"M16 0C13.9 0 12.074 1.00731 11 2.69539C9.926 1.00731 8.1 0 6 0C4.40927 0.0019706 2.88422 0.675006 1.75941 1.87146C0.634589 3.06792 0.00185261 4.6901 0 6.38214C0 9.48812 1.82 12.7207 5.41 15.9883C7.05505 17.4794 8.83201 18.7974 10.716 19.924C10.8033 19.9739 10.9009 20 11 20C11.0991 20 11.1967 19.9739 11.284 19.924C13.168 18.7974 14.945 17.4794 16.59 15.9883C20.18 12.7207 22 9.48812 22 6.38214C21.9981 4.6901 21.3654 3.06792 20.2406 1.87146C19.1158 0.675006 17.5907 0.0019706 16 0ZM11 18.6263C9.359 17.619 1.2 12.309 1.2 6.38214C1.20132 5.02845 1.70746 3.73061 2.60735 2.77341C3.50724 1.81621 4.72737 1.27784 6 1.27643C8.028 1.27643 9.731 2.4284 10.445 4.28348C10.4902 4.40053 10.5671 4.50065 10.6659 4.57111C10.7647 4.64157 10.881 4.67919 11 4.67919C11.119 4.67919 11.2353 4.64157 11.3341 4.57111C11.4329 4.50065 11.5098 4.40053 11.555 4.28348C12.269 2.4284 13.972 1.27643 16 1.27643C17.2726 1.27784 18.4928 1.81621 19.3927 2.77341C20.2925 3.73061 20.7987 5.02845 20.8 6.38214C20.8 12.309 12.641 17.619 11 18.6263Z\"\r\n                            fill=\"white\"\r\n                        />\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <hr class=\"detail_main_next_hr\" />\r\n\r\n    <div class=\"detail_review_set\">\r\n        <div class=\"rev_top\">\r\n            <div class=\"review_con_title\">\r\n                책 리뷰 (\r\n                {{ reviewCount }}\r\n                )\r\n            </div>\r\n            <button class=\"go_to_review\" @click=\"toggleBtn\">리뷰 작성</button>\r\n        </div>\r\n        <!-- 댓글 작성-------------------------------------------------------------------------------------------------------\r\n    --------------------------------------------------------------------------------------------------------------------- -->\r\n        <div class=\"write_rev\" id=\"write_review\" v-if=\"!showBtn\">\r\n            <div class=\"write_star\">\r\n                <fieldset class=\"rating\">\r\n                    <input type=\"radio\" id=\"star5\" name=\"rating\" value=\"5\" /><label class=\"full\" for=\"star5\"></label>\r\n                    <input type=\"radio\" id=\"star4half\" name=\"rating\" value=\"4 and a half\" /><label class=\"half\" for=\"star4half\"></label>\r\n                    <input type=\"radio\" id=\"star4\" name=\"rating\" value=\"4\" /><label class=\"full\" for=\"star4\"></label>\r\n                    <input type=\"radio\" id=\"star3half\" name=\"rating\" value=\"3 and a half\" /><label class=\"half\" for=\"star3half\"></label>\r\n                    <input type=\"radio\" id=\"star3\" name=\"rating\" value=\"3\" /><label class=\"full\" for=\"star3\"></label>\r\n                    <input type=\"radio\" id=\"star2half\" name=\"rating\" /><label class=\"half\" for=\"star2half\"></label>\r\n                    <input type=\"radio\" id=\"star2\" name=\"rating\" value=\"2\" /><label class=\"full\" for=\"star2\"></label>\r\n                    <input type=\"radio\" id=\"star1half\" name=\"rating\" value=\"1 and a half\" /><label class=\"half\" for=\"star1half\"></label>\r\n                    <input type=\"radio\" id=\"star1\" name=\"rating\" value=\"1\" /><label class=\"full\" for=\"star1\"></label>\r\n                    <input type=\"radio\" id=\"starhalf\" name=\"rating\" value=\"half\" /><label class=\"half\" for=\"starhalf\"></label>\r\n                </fieldset>\r\n            </div>\r\n            <div class=\"write_rev_under_set\">\r\n                <textarea class=\"write_text\" placeholder=\"댓글을 입력하세요\" ref=\"reviewComment\" />\r\n                <button type=\"button\" class=\"rev_send\" @click=\"sendReview\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"23\" viewBox=\"0 0 22 23\" fill=\"none\">\r\n                        <path d=\"M1 1.74097V9.74097L13.5 11.241L1 12.741V21.241L20.5 11.241L1 1.74097Z\" fill=\"#6969FF\" stroke=\"#6969FF\" />\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- 댓글 작성-------------------------------------------------------------------------------------------------------\r\n    --------------------------------------------------------------------------------------------------------------------- -->\r\n        <br />\r\n        <div class=\"total_rec\">\r\n            <div class=\"total_rec_title\">구매자 총점</div>\r\n            <div class=\"total_star_rec\">\r\n                <star :rating=\"convertRatingToHalfStars(averageRating)\" />\r\n                <div class=\"total_rec_num\">\r\n                    <!-- {{ formattedAverageRating }} -->\r\n                    <span class=\"total_rec_num_10\">{{ averageRating }}/10</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <hr class=\"review_title_next_hr\" />\r\n        <div class=\"title_fillter\">\r\n            <div class=\"rev_sec_title\">구매 리뷰</div>\r\n            <select v-model=\"sortvalue\" @change=\"fetchReviewData\" name=\"items1\" class=\"review_filltering\">\r\n                <option :value=\"'최신순'\">최신순</option>\r\n                <option :value=\"'평점 높은 순'\">평점 높은 순</option>\r\n                <option :value=\"'평점 낮은 순'\">평점 낮은 순</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"review_con\">\r\n            <div v-if=\"reviewData.length === 0\" class=\"no_data_review\">리뷰가 없습니다.</div>\r\n            <div v-else>\r\n                <div v-for=\"review in reviewData\" :key=\"review.REVIEW_ID\" class=\"single_review\">\r\n                    <div class=\"single_rev_top\">\r\n                        <div class=\"review_created_at_flex\">\r\n                            <div class=\"single_review_writer\">{{ review.review_writer }}</div>\r\n                            <div class=\"single_review_rating_star\"><star :rating=\"convertRatingToHalfStars(review.REV_RATING)\" /></div>\r\n                            <div class=\"single_review_rating_num\">{{ review.REV_RATING }}</div>\r\n                        </div>\r\n                        <div class=\"review_created_at\">{{ review.REV_CREATED_AT }}</div>\r\n                    </div>\r\n                    <div class=\"review_comment\">{{ review.REV_COMMENT }}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"exc_return_set\">\r\n        <div class=\"exc_return_top\">\r\n            <div class=\"review_con_title\">교환/반품/품절 안내</div>\r\n            <RouterLink to=\"/qnaWrite\" class=\"go_to_review\">1:1 문의</RouterLink>\r\n        </div>\r\n        <hr class=\"review_title_next_hr\" />\r\n        <div class=\"exc_return_con_title\">반품/교환 방법</div>\r\n        <div class=\"exc_return_con_text\">\r\n            마이룸 > 주문관리 > 주문/배송내역 > 주문조회 > 반품/교환 신청, [1:1 상담 > 반품/교환/환불] 또는 고객센터 (1544-1900)<br />* 오픈마켓,\r\n            해외배송 주문, 기프트 주문시 [1:1 상담>반품/교환/환불] 또는 고객센터 (1544-1900)\r\n        </div>\r\n        <hr />\r\n        <div class=\"exc_return_con_title\">반품/교환가능 기간</div>\r\n        <div class=\"exc_return_con_text\">변심반품의 경우 수령 후 7일 이내,<br />상품의 결함 및 계약내용과 다를 경우 문제점 발견 후 30일 이내</div>\r\n        <hr />\r\n        <div class=\"exc_return_con_title\">반품/교환비용</div>\r\n        <div class=\"exc_return_con_text\">변심 혹은 구매착오로 인한 반품/교환은 반송료 고객 부담</div>\r\n        <hr />\r\n        <div class=\"exc_return_con_title\">반품/교환 불가 사유</div>\r\n        <div class=\"exc_return_con_text\">\r\n            1) 소비자의 책임 있는 사유로 상품 등이 손실 또는 훼손된 경우<br />(단지 확인을 위한 포장 훼손은 제외) <br />2) 소비자의 사용, 포장 개봉에\r\n            의해 상품 등의 가치가 현저히 감소한 경우 <br />예) 화장품, 식품, 가전제품(악세서리 포함) 등 <br />3) 복제가 가능한 상품 등의 포장을 훼손한\r\n            경우 <br />예) 음반/DVD/비디오, 소프트웨어, 만화책, 잡지, 영상 화보집 <br />4) 소비자의 요청에 따라 개별적으로 주문 제작되는 상품의 경우\r\n            ((1)해외주문도서) <br />5) 디지털 컨텐츠인 eBook, 오디오북 등을 1회 이상 다운로드를 받았을 경우 <br />6) 시간의 경과에 의해 재판매가\r\n            곤란한 정도로 가치가 현저히 감소한 경우 <br />7) 전자상거래 등에서의 소비자보호에 관한 법률이 정하는 소비자 청약철회 제한 내용에 해당되는\r\n            경우\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios, { Axios } from \"axios\";\r\nimport \"../assets/css/bookDetail.css\";\r\nimport GnbBar from \"../components/gnbBar.vue\";\r\nimport star from \"@/components/star.vue\";\r\n\r\nexport default {\r\n    components: {\r\n        GnbBar,\r\n        star,\r\n    },\r\n    data() {\r\n        return {\r\n            bookDetailData: [],\r\n            reviewData: [],\r\n            reviewCount: 0,\r\n            isLiked: false,\r\n            sortvalue: \"최신순\",\r\n            showBtn: true,\r\n            countNum: 1,\r\n            bookId: this.$route.params.bookNum,\r\n            averageRating: 0,\r\n\r\n            // 댓글 데이터를 페이지별로 나눈 배열\r\n        };\r\n    },\r\n    created() {\r\n        this.email = localStorage.getItem(\"userID\");\r\n    },\r\n    mounted() {\r\n        this.bookDetail();\r\n        this.fetchReviewData();\r\n        this.fetchReviewCount();\r\n        this.fetchAverageRating();\r\n        this.setRecentview(); //최근 본 책 db에 삽입\r\n        // this.averageRating();\r\n        // this.reviewAverageData();\r\n    },\r\n    computed: {\r\n        paymentPrice() {\r\n            return this.bookDetailData.BOOK_PRICE * this.countNum;\r\n        },\r\n        // formattedAverageRating() {\r\n        //     return this.reviewAverageData ? this.reviewAverageData.toFixed(1) : \"0.0\";\r\n        // },\r\n        formattedBookDetailData() {\r\n            if (this.bookDetailData) {\r\n                return this.formatHtmlEntities(this.bookDetailData.description);\r\n            }\r\n            return \"\";\r\n        },\r\n    },\r\n    methods: {\r\n        toggleBtn() {\r\n            this.showBtn = !this.showBtn; // showBtn 데이터 값을 토글\r\n        },\r\n        // 최신순 리스트 불러오기-------------------------------------------------------------------------------------------------------\r\n        // ---------------------------------------------------------------------------------------------------------------------\r\n        bookDetail() {\r\n            axios({\r\n                url: \"http://localhost:3000/detail/\",\r\n                method: \"get\",\r\n                params: {\r\n                    bookNum: this.bookId,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    console.log(response.data); // 가져온 데이터 확인\r\n                    this.bookDetailData = response.data[0];\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"책 상세 정보 가져오기 오류:\", error);\r\n                });\r\n        },\r\n        formatHtmlEntities(input) {\r\n            return input.replace(/&lt;/g, \"< \").replace(/&gt;/g, \" > \");\r\n        },\r\n        async addToCart() {\r\n            if (localStorage.getItem(\"userID\")) {\r\n                await axios({\r\n                    url: \"http://localhost:3000/detail/gotoCart\",\r\n                    method: \"POST\",\r\n                    data: {\r\n                        email: this.email,\r\n                        bookId: this.bookId,\r\n                    },\r\n                }).then((res) => {\r\n                    alert(\"장바구니에 추가되었습니다.\", this.bookId);\r\n                    this.$refs.gnbBarComponent.getCartNum();\r\n                });\r\n            } else {\r\n                const conResult = confirm(\"로그인이 필요합니다. \\n 로그인 하시겠습니까?\");\r\n                conResult ? (window.location.href = \"/login\") : null;\r\n            }\r\n        },\r\n\r\n        //좋아요 추가/취소\r\n        toggleLike() {\r\n            if (localStorage.getItem(\"userID\")) {\r\n                const data = {\r\n                    bookId: this.bookId,\r\n                };\r\n\r\n                axios\r\n                    .post(`http://localhost:3000/floating/cancellikebooks?userEmail=${localStorage.getItem(\"userID\")}`, data)\r\n                    .then(() => {\r\n                        this.isLiked = !this.isLiked;\r\n                        // 좋아요 토글 이후에 리뷰 개수 및 평균 평점 업데이트\r\n                        this.fetchReviewData();\r\n                        this.fetchReviewCount();\r\n                        this.fetchAverageRating();\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"좋아요 에러\", error);\r\n                    });\r\n            } else {\r\n                const result = confirm(\"로그인이 필요합니다. \\n 로그인하시겠습니까?\");\r\n                if (result) {\r\n                    window.location.href = \"/login\";\r\n                }\r\n            }\r\n        },\r\n\r\n        // ... (\r\n        // 리뷰 시작-------------------------------------------------------------------------------------------------------\r\n        async sendReview() {\r\n            const ratingInput = document.querySelector(\"input[name='rating']:checked\");\r\n            const rating = ratingInput ? parseFloat(ratingInput.value) : 0; // Get selected rating value\r\n\r\n            const comment = this.$refs.reviewComment.value; // Get the review comment from the textarea\r\n\r\n            if (!rating || !comment) {\r\n                alert(\"리뷰 내용과 별점 추가해주세요\");\r\n                return;\r\n            }\r\n\r\n            const reviewData = {\r\n                REV_WRITER: localStorage.getItem(\"userID\"), // Assuming you store the user's ID in localStorage\r\n                REV_ORDERITEM_BOOK: this.bookId,\r\n                REV_COMMENT: comment,\r\n                REV_RATING: rating * 2,\r\n            };\r\n\r\n            try {\r\n                const response = await axios.post(\"http://localhost:3000/review/postreview\", reviewData);\r\n\r\n                // Reset the review form\r\n                this.$refs.reviewComment.value = \"\";\r\n                ratingInput.checked = false;\r\n\r\n                // Fetch updated review data and average rating\r\n                this.fetchReviewData();\r\n                this.fetchReviewCount();\r\n                this.fetchAverageRating();\r\n\r\n                alert(response.data.message); // Display success message\r\n            } catch (error) {\r\n                console.error(\"리뷰 전송 실패:\", error);\r\n                alert(\"리뷰 전송 실패.\");\r\n            }\r\n        },\r\n        //리뷰 개수 가져오기\r\n        fetchReviewCount() {\r\n            axios({\r\n                url: `http://localhost:3000/review/reviewcount/${this.bookId}`,\r\n                method: \"get\",\r\n            })\r\n                .then((response) => {\r\n                    this.reviewCount = response.data.reviewCount;\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Counting Err\", Error);\r\n                });\r\n        },\r\n\r\n        //리뷰 평균 별점\r\n        async fetchAverageRating() {\r\n            try {\r\n                const res = await axios.get(`http://localhost:3000/review/averagerating/${this.bookId}`);\r\n                this.averageRating = res.data.averageRating;\r\n                console.log(this.averageRating);\r\n            } catch (err) {\r\n                console.error(\"average Err\", err);\r\n            }\r\n        },\r\n\r\n        // 리뷰 데이터 최신순 리스트 불러오기-------------------------------------------------------------------------------------------------------\r\n        // ---------------------------------------------------------------------------------------------------------------------\r\n\r\n        fetchReviewData() {\r\n            if (this.sortvalue === \"최신순\") {\r\n                this.loadRecentReviews();\r\n            } else if (this.sortvalue === \"평점 높은 순\") {\r\n                this.loadTopRatedReviews();\r\n            } else if (this.sortvalue === \"평점 낮은 순\") {\r\n                this.loadLowRatedReviews();\r\n            }\r\n        },\r\n        // 리뷰 데이터 최신순 리스트 불러오기-------------------------------------------------------------------------------------------------------\r\n        // ---------------------------------------------------------------------------------------------------------------------\r\n        loadRecentReviews() {\r\n            axios({\r\n                url: \"http://localhost:3000/review/reviewdata\",\r\n                method: \"get\",\r\n                params: {\r\n                    bookId: this.bookId,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    // 서버 응답 처리\r\n                    this.reviewData = response.data.review; // reviewData에 데이터 저장\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Error fetching review data:\", error);\r\n                });\r\n        },\r\n        // 리뷰 데이터 평점 높은 순 리스트 불러오기-------------------------------------------------------------------------------------------------------\r\n        // ---------------------------------------------------------------------------------------------------------------------\r\n        loadTopRatedReviews() {\r\n            axios({\r\n                url: \"http://localhost:3000/review/reviewrating\",\r\n                method: \"get\",\r\n                params: {\r\n                    bookId: this.bookId,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    // 서버 응답 처리\r\n                    this.reviewData = response.data.review; // reviewData에 데이터 저장\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Error fetching review data:\", error);\r\n                });\r\n        },\r\n        // 리뷰 데이터 평점 낮은 순 리스트 불러오기-------------------------------------------------------------------------------------------------------\r\n        // ---------------------------------------------------------------------------------------------------------------------\r\n        loadLowRatedReviews() {\r\n            axios({\r\n                url: \"http://localhost:3000/review/lowreviewrating\",\r\n                method: \"get\",\r\n                params: {\r\n                    bookId: this.bookId,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    // 서버 응답 처리\r\n                    this.reviewData = response.data.review; // reviewData에 데이터 저장\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Error fetching review data:\", error);\r\n                });\r\n        },\r\n        // 리뷰 데이터 평점 낮은 순 리스트 불러오기-------------------------------------------------------------------------------------------------------\r\n        // ---------------------------------------------------------------------------------------------------------------------\r\n        // 리뷰 -------------------------------------------------------------------------------------------------------\r\n\r\n        // averageRating() {\r\n        //     axios({\r\n        //         url: `http://localhost:3000/review/averagerating/${this.bookId}`,\r\n        //         method: \"get\",\r\n        //     })\r\n        //         .then((response) => {\r\n        //             this.reviewAverageData = response.data.averageRating;\r\n        //         })\r\n        //         .catch((error) => {\r\n        //             console.error(\"평균 평점을 불러오는 중 오류 발생:\", error);\r\n        //         });\r\n        // },\r\n        convertRatingToHalfStars(number) {\r\n            number = number / 2;\r\n            if (Number.isInteger(number)) {\r\n                if (number >= 1 && number <= 5) {\r\n                    return number;\r\n                } else {\r\n                    return 0; // 범위를 벗어나는 경우\r\n                }\r\n            } else {\r\n                const integerPart = Math.floor(number);\r\n                const decimalPart = number - integerPart;\r\n\r\n                if (decimalPart < 0.5) {\r\n                    return integerPart;\r\n                } else {\r\n                    return integerPart + 0.5;\r\n                }\r\n            }\r\n        },\r\n        formatReviewScore(number) {\r\n            if (Number.isInteger(number)) {\r\n                return number.toFixed(1); // 정수인 경우 소수점 자리를 1로 설정하여 변환\r\n            } else {\r\n                return number.toString(); // 소수인 경우 그대로 문자열로 변환\r\n            }\r\n        },\r\n        decreaseCount() {\r\n            if (this.countNum > 1) {\r\n                this.countNum--; // 현재 카운트 값이 1보다 큰 경우에만 1 감소\r\n            }\r\n        },\r\n        increaseCount() {\r\n            this.countNum++; // countNum 값을 1 증가\r\n        },\r\n        updateCartNum() {\r\n            this.$refs.gnbBarComponent.getCartNum();\r\n        },\r\n        formatReviewScore(number) {\r\n            if (Number.isInteger(number)) {\r\n                return number.toFixed(1); // 정수인 경우 소수점 자리를 1로 설정하여 변환\r\n            } else {\r\n                return number.toString(); // 소수인 경우 그대로 문자열로 변환\r\n            }\r\n        },\r\n        //최근본 책 데이터 삽입\r\n        //------------------------\r\n        setRecentview() {\r\n            const useremail = localStorage.getItem(\"userID\");\r\n            const bookid = this.bookId;\r\n\r\n            axios({\r\n                url: \"http://localhost:3000/detail/setRec\",\r\n                method: \"POST\",\r\n                data: {\r\n                    email: useremail,\r\n                    bookid: bookid,\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        },\r\n        //결제\r\n        //----------------------\r\n        gotoPay() {\r\n            const bookPrice = this.bookDetailData.BOOK_PRICE;\r\n            const bookfee = bookPrice >= 50000 ? 0 : 2500;\r\n            const totalPoint = bookPrice * 0.05;\r\n            console.log(this.$route.params.id);\r\n            console.log(this.bookDetailData.BOOK_PRICE);\r\n            console.log(bookfee);\r\n            console.log(totalPoint);\r\n            console.log(this.bookDetailData.BOOK_TITLE);\r\n            console.log(localStorage.getItem(\"userID\"));\r\n\r\n            axios({\r\n                url: \"http://localhost:3000/detail/gotoPay\",\r\n                method: \"POST\",\r\n                data: {\r\n                    bookId: this.bookId,\r\n                    bookNum: 1,\r\n                    email: localStorage.getItem(\"userID\"),\r\n                    total_pay: bookPrice,\r\n                    total_point: totalPoint,\r\n                    fee: bookfee,\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    this.$router.push({ name: \"paymentPage\", query: { payid: res.data.payID } });\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Error goToPay :\", error);\r\n                });\r\n        },\r\n    },\r\n};\r\n</script>\r\n"],"mappings":";AA4LA,OAAOA,KAAK,IAAIC,KAAI,QAAS,OAAO;AACpC,OAAO,8BAA8B;AACrC,OAAOC,MAAK,MAAO,0BAA0B;AAC7C,OAAOC,IAAG,MAAO,uBAAuB;AAExC,eAAe;EACXC,UAAU,EAAE;IACRF,MAAM;IACNC;EACJ,CAAC;EACDE,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,cAAc,EAAE,EAAE;MAClBC,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE,CAAC;MACdC,OAAO,EAAE,KAAK;MACdC,SAAS,EAAE,KAAK;MAChBC,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAE,CAAC;MACXC,MAAM,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,OAAO;MAClCC,aAAa,EAAE;;MAEf;IACJ,CAAC;EACL,CAAC;;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAC/C,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,UAAU,CAAC,CAAC;IACjB,IAAI,CAACC,eAAe,CAAC,CAAC;IACtB,IAAI,CAACC,gBAAgB,CAAC,CAAC;IACvB,IAAI,CAACC,kBAAkB,CAAC,CAAC;IACzB,IAAI,CAACC,aAAa,CAAC,CAAC,EAAE;IACtB;IACA;EACJ,CAAC;;EACDC,QAAQ,EAAE;IACNC,YAAYA,CAAA,EAAG;MACX,OAAO,IAAI,CAACvB,cAAc,CAACwB,UAAS,GAAI,IAAI,CAAClB,QAAQ;IACzD,CAAC;IACD;IACA;IACA;IACAmB,uBAAuBA,CAAA,EAAG;MACtB,IAAI,IAAI,CAACzB,cAAc,EAAE;QACrB,OAAO,IAAI,CAAC0B,kBAAkB,CAAC,IAAI,CAAC1B,cAAc,CAAC2B,WAAW,CAAC;MACnE;MACA,OAAO,EAAE;IACb;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,SAASA,CAAA,EAAG;MACR,IAAI,CAACxB,OAAM,GAAI,CAAC,IAAI,CAACA,OAAO,EAAE;IAClC,CAAC;;IACD;IACA;IACAY,UAAUA,CAAA,EAAG;MACTvB,KAAK,CAAC;QACFoC,GAAG,EAAE,+BAA+B;QACpCC,MAAM,EAAE,KAAK;QACbtB,MAAM,EAAE;UACJC,OAAO,EAAE,IAAI,CAACH;QAClB;MACJ,CAAC,EACIyB,IAAI,CAAEC,QAAQ,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAClC,IAAI,CAAC,EAAE;QAC5B,IAAI,CAACC,cAAa,GAAIiC,QAAQ,CAAClC,IAAI,CAAC,CAAC,CAAC;MAC1C,CAAC,EACAqC,KAAK,CAAEC,KAAK,IAAK;QACdH,OAAO,CAACG,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MAC5C,CAAC,CAAC;IACV,CAAC;IACDX,kBAAkBA,CAACY,KAAK,EAAE;MACtB,OAAOA,KAAK,CAACC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAACA,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC;IAC/D,CAAC;IACD,MAAMC,SAASA,CAAA,EAAG;MACd,IAAI1B,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,EAAE;QAChC,MAAMrB,KAAK,CAAC;UACRoC,GAAG,EAAE,uCAAuC;UAC5CC,MAAM,EAAE,MAAM;UACdhC,IAAI,EAAE;YACFc,KAAK,EAAE,IAAI,CAACA,KAAK;YACjBN,MAAM,EAAE,IAAI,CAACA;UACjB;QACJ,CAAC,CAAC,CAACyB,IAAI,CAAES,GAAG,IAAK;UACbC,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAACnC,MAAM,CAAC;UACpC,IAAI,CAACoC,KAAK,CAACC,eAAe,CAACC,UAAU,CAAC,CAAC;QAC3C,CAAC,CAAC;MACN,OAAO;QACH,MAAMC,SAAQ,GAAIC,OAAO,CAAC,4BAA4B,CAAC;QACvDD,SAAQ,GAAKE,MAAM,CAACC,QAAQ,CAACC,IAAG,GAAI,QAAQ,GAAI,IAAI;MACxD;IACJ,CAAC;IAED;IACAC,UAAUA,CAAA,EAAG;MACT,IAAIrC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,EAAE;QAChC,MAAMhB,IAAG,GAAI;UACTQ,MAAM,EAAE,IAAI,CAACA;QACjB,CAAC;QAEDb,KAAI,CACC0D,IAAI,CAAE,4DAA2DtC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAE,EAAC,EAAEhB,IAAI,EACvGiC,IAAI,CAAC,MAAM;UACR,IAAI,CAAC7B,OAAM,GAAI,CAAC,IAAI,CAACA,OAAO;UAC5B;UACA,IAAI,CAACe,eAAe,CAAC,CAAC;UACtB,IAAI,CAACC,gBAAgB,CAAC,CAAC;UACvB,IAAI,CAACC,kBAAkB,CAAC,CAAC;QAC7B,CAAC,EACAgB,KAAK,CAAEC,KAAK,IAAK;UACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAClC,CAAC,CAAC;MACV,OAAO;QACH,MAAMgB,MAAK,GAAIN,OAAO,CAAC,2BAA2B,CAAC;QACnD,IAAIM,MAAM,EAAE;UACRL,MAAM,CAACC,QAAQ,CAACC,IAAG,GAAI,QAAQ;QACnC;MACJ;IACJ,CAAC;IAED;IACA;IACA,MAAMI,UAAUA,CAAA,EAAG;MACf,MAAMC,WAAU,GAAIC,QAAQ,CAACC,aAAa,CAAC,8BAA8B,CAAC;MAC1E,MAAMC,MAAK,GAAIH,WAAU,GAAII,UAAU,CAACJ,WAAW,CAACK,KAAK,IAAI,CAAC,EAAE;;MAEhE,MAAMC,OAAM,GAAI,IAAI,CAAClB,KAAK,CAACmB,aAAa,CAACF,KAAK,EAAE;;MAEhD,IAAI,CAACF,MAAK,IAAK,CAACG,OAAO,EAAE;QACrBnB,KAAK,CAAC,kBAAkB,CAAC;QACzB;MACJ;MAEA,MAAMzC,UAAS,GAAI;QACf8D,UAAU,EAAEjD,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;QAAE;QAC5CiD,kBAAkB,EAAE,IAAI,CAACzD,MAAM;QAC/B0D,WAAW,EAAEJ,OAAO;QACpBK,UAAU,EAAER,MAAK,GAAI;MACzB,CAAC;MAED,IAAI;QACA,MAAMzB,QAAO,GAAI,MAAMvC,KAAK,CAAC0D,IAAI,CAAC,yCAAyC,EAAEnD,UAAU,CAAC;;QAExF;QACA,IAAI,CAAC0C,KAAK,CAACmB,aAAa,CAACF,KAAI,GAAI,EAAE;QACnCL,WAAW,CAACY,OAAM,GAAI,KAAK;;QAE3B;QACA,IAAI,CAACjD,eAAe,CAAC,CAAC;QACtB,IAAI,CAACC,gBAAgB,CAAC,CAAC;QACvB,IAAI,CAACC,kBAAkB,CAAC,CAAC;QAEzBsB,KAAK,CAACT,QAAQ,CAAClC,IAAI,CAACqE,OAAO,CAAC,EAAE;MAClC,EAAE,OAAO/B,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjCK,KAAK,CAAC,WAAW,CAAC;MACtB;IACJ,CAAC;IACD;IACAvB,gBAAgBA,CAAA,EAAG;MACfzB,KAAK,CAAC;QACFoC,GAAG,EAAG,4CAA2C,IAAI,CAACvB,MAAO,EAAC;QAC9DwB,MAAM,EAAE;MACZ,CAAC,EACIC,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAI,CAAC/B,WAAU,GAAI+B,QAAQ,CAAClC,IAAI,CAACG,WAAW;MAChD,CAAC,EACAkC,KAAK,CAAEC,KAAK,IAAK;QACdH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEgC,KAAK,CAAC;MACxC,CAAC,CAAC;IACV,CAAC;IAED;IACA,MAAMjD,kBAAkBA,CAAA,EAAG;MACvB,IAAI;QACA,MAAMqB,GAAE,GAAI,MAAM/C,KAAK,CAAC4E,GAAG,CAAE,8CAA6C,IAAI,CAAC/D,MAAO,EAAC,CAAC;QACxF,IAAI,CAACI,aAAY,GAAI8B,GAAG,CAAC1C,IAAI,CAACY,aAAa;QAC3CuB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACxB,aAAa,CAAC;MACnC,EAAE,OAAO4D,GAAG,EAAE;QACVrC,OAAO,CAACG,KAAK,CAAC,aAAa,EAAEkC,GAAG,CAAC;MACrC;IACJ,CAAC;IAED;IACA;;IAEArD,eAAeA,CAAA,EAAG;MACd,IAAI,IAAI,CAACd,SAAQ,KAAM,KAAK,EAAE;QAC1B,IAAI,CAACoE,iBAAiB,CAAC,CAAC;MAC5B,OAAO,IAAI,IAAI,CAACpE,SAAQ,KAAM,SAAS,EAAE;QACrC,IAAI,CAACqE,mBAAmB,CAAC,CAAC;MAC9B,OAAO,IAAI,IAAI,CAACrE,SAAQ,KAAM,SAAS,EAAE;QACrC,IAAI,CAACsE,mBAAmB,CAAC,CAAC;MAC9B;IACJ,CAAC;IACD;IACA;IACAF,iBAAiBA,CAAA,EAAG;MAChB9E,KAAK,CAAC;QACFoC,GAAG,EAAE,yCAAyC;QAC9CC,MAAM,EAAE,KAAK;QACbtB,MAAM,EAAE;UACJF,MAAM,EAAE,IAAI,CAACA;QACjB;MACJ,CAAC,EACIyB,IAAI,CAAEC,QAAQ,IAAK;QAChB;QACA,IAAI,CAAChC,UAAS,GAAIgC,QAAQ,CAAClC,IAAI,CAAC4E,MAAM,EAAE;MAC5C,CAAC,EACAvC,KAAK,CAAEC,KAAK,IAAK;QACdH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD,CAAC,CAAC;IACV,CAAC;IACD;IACA;IACAoC,mBAAmBA,CAAA,EAAG;MAClB/E,KAAK,CAAC;QACFoC,GAAG,EAAE,2CAA2C;QAChDC,MAAM,EAAE,KAAK;QACbtB,MAAM,EAAE;UACJF,MAAM,EAAE,IAAI,CAACA;QACjB;MACJ,CAAC,EACIyB,IAAI,CAAEC,QAAQ,IAAK;QAChB;QACA,IAAI,CAAChC,UAAS,GAAIgC,QAAQ,CAAClC,IAAI,CAAC4E,MAAM,EAAE;MAC5C,CAAC,EACAvC,KAAK,CAAEC,KAAK,IAAK;QACdH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD,CAAC,CAAC;IACV,CAAC;IACD;IACA;IACAqC,mBAAmBA,CAAA,EAAG;MAClBhF,KAAK,CAAC;QACFoC,GAAG,EAAE,8CAA8C;QACnDC,MAAM,EAAE,KAAK;QACbtB,MAAM,EAAE;UACJF,MAAM,EAAE,IAAI,CAACA;QACjB;MACJ,CAAC,EACIyB,IAAI,CAAEC,QAAQ,IAAK;QAChB;QACA,IAAI,CAAChC,UAAS,GAAIgC,QAAQ,CAAClC,IAAI,CAAC4E,MAAM,EAAE;MAC5C,CAAC,EACAvC,KAAK,CAAEC,KAAK,IAAK;QACdH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD,CAAC,CAAC;IACV,CAAC;IACD;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAuC,wBAAwBA,CAACC,MAAM,EAAE;MAC7BA,MAAK,GAAIA,MAAK,GAAI,CAAC;MACnB,IAAIC,MAAM,CAACC,SAAS,CAACF,MAAM,CAAC,EAAE;QAC1B,IAAIA,MAAK,IAAK,KAAKA,MAAK,IAAK,CAAC,EAAE;UAC5B,OAAOA,MAAM;QACjB,OAAO;UACH,OAAO,CAAC,EAAE;QACd;MACJ,OAAO;QACH,MAAMG,WAAU,GAAIC,IAAI,CAACC,KAAK,CAACL,MAAM,CAAC;QACtC,MAAMM,WAAU,GAAIN,MAAK,GAAIG,WAAW;QAExC,IAAIG,WAAU,GAAI,GAAG,EAAE;UACnB,OAAOH,WAAW;QACtB,OAAO;UACH,OAAOA,WAAU,GAAI,GAAG;QAC5B;MACJ;IACJ,CAAC;IACDI,iBAAiBA,CAACP,MAAM,EAAE;MACtB,IAAIC,MAAM,CAACC,SAAS,CAACF,MAAM,CAAC,EAAE;QAC1B,OAAOA,MAAM,CAACQ,OAAO,CAAC,CAAC,CAAC,EAAE;MAC9B,OAAO;QACH,OAAOR,MAAM,CAACS,QAAQ,CAAC,CAAC,EAAE;MAC9B;IACJ,CAAC;;IACDC,aAAaA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACjF,QAAO,GAAI,CAAC,EAAE;QACnB,IAAI,CAACA,QAAQ,EAAE,EAAE;MACrB;IACJ,CAAC;;IACDkF,aAAaA,CAAA,EAAG;MACZ,IAAI,CAAClF,QAAQ,EAAE,EAAE;IACrB,CAAC;;IACDmF,aAAaA,CAAA,EAAG;MACZ,IAAI,CAAC9C,KAAK,CAACC,eAAe,CAACC,UAAU,CAAC,CAAC;IAC3C,CAAC;IACDuC,iBAAiBA,CAACP,MAAM,EAAE;MACtB,IAAIC,MAAM,CAACC,SAAS,CAACF,MAAM,CAAC,EAAE;QAC1B,OAAOA,MAAM,CAACQ,OAAO,CAAC,CAAC,CAAC,EAAE;MAC9B,OAAO;QACH,OAAOR,MAAM,CAACS,QAAQ,CAAC,CAAC,EAAE;MAC9B;IACJ,CAAC;;IACD;IACA;IACAjE,aAAaA,CAAA,EAAG;MACZ,MAAMqE,SAAQ,GAAI5E,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAChD,MAAM4E,MAAK,GAAI,IAAI,CAACpF,MAAM;MAE1Bb,KAAK,CAAC;QACFoC,GAAG,EAAE,qCAAqC;QAC1CC,MAAM,EAAE,MAAM;QACdhC,IAAI,EAAE;UACFc,KAAK,EAAE6E,SAAS;UAChBC,MAAM,EAAEA;QACZ;MACJ,CAAC,EACI3D,IAAI,CAAES,GAAG,IAAK;QACXP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC1C,IAAI,CAAC;MACzB,CAAC,EACAqC,KAAK,CAAEmC,GAAG,IAAK;QACZrC,OAAO,CAACC,GAAG,CAACoC,GAAG,CAAC;MACpB,CAAC,CAAC;IACV,CAAC;IACD;IACA;IACAqB,OAAOA,CAAA,EAAG;MACN,MAAMC,SAAQ,GAAI,IAAI,CAAC7F,cAAc,CAACwB,UAAU;MAChD,MAAMsE,OAAM,GAAID,SAAQ,IAAK,KAAI,GAAI,IAAI,IAAI;MAC7C,MAAME,UAAS,GAAIF,SAAQ,GAAI,IAAI;MACnC3D,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC3B,MAAM,CAACC,MAAM,CAACuF,EAAE,CAAC;MAClC9D,OAAO,CAACC,GAAG,CAAC,IAAI,CAACnC,cAAc,CAACwB,UAAU,CAAC;MAC3CU,OAAO,CAACC,GAAG,CAAC2D,OAAO,CAAC;MACpB5D,OAAO,CAACC,GAAG,CAAC4D,UAAU,CAAC;MACvB7D,OAAO,CAACC,GAAG,CAAC,IAAI,CAACnC,cAAc,CAACiG,UAAU,CAAC;MAC3C/D,OAAO,CAACC,GAAG,CAACrB,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;MAE3CrB,KAAK,CAAC;QACFoC,GAAG,EAAE,sCAAsC;QAC3CC,MAAM,EAAE,MAAM;QACdhC,IAAI,EAAE;UACFQ,MAAM,EAAE,IAAI,CAACA,MAAM;UACnBG,OAAO,EAAE,CAAC;UACVG,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;UACrCmF,SAAS,EAAEL,SAAS;UACpBM,WAAW,EAAEJ,UAAU;UACvBK,GAAG,EAAEN;QACT;MACJ,CAAC,EACI9D,IAAI,CAAES,GAAG,IAAK;QACXP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC1C,IAAI,CAAC;QACrB,IAAI,CAACsG,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE,aAAa;UAAEC,KAAK,EAAE;YAAEC,KAAK,EAAEhE,GAAG,CAAC1C,IAAI,CAAC2G;UAAM;QAAE,CAAC,CAAC;MAChF,CAAC,EACAtE,KAAK,CAAEC,KAAK,IAAK;QACdH,OAAO,CAACG,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MAC3C,CAAC,CAAC;IACV;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}