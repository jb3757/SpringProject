{"ast":null,"code":"import { ref, onMounted, reactive } from \"vue\";\nimport Chart from \"chart.js/auto\";\nimport \"bootstrap\"; // Import Bootstrap JavaScript\nimport \"chartjs-adapter-luxon\";\nimport SideBar from \"../components/adminSidebar.vue\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    SideBar\n  },\n  data() {\n    return {\n      //책 장르 데이터\n      bestCategorys: [{\n        category: \"장르\",\n        sales: 0\n      }, {\n        category: \"장르\",\n        sales: 0\n      }, {\n        category: \"장르\",\n        sales: 0\n      }, {\n        category: \"장르\",\n        sales: 0\n      }, {\n        category: \"장르\",\n        sales: 0\n      }]\n    };\n  },\n  setup() {\n    const bestCategoryChart = ref(null);\n\n    //방문자 수 데이터\n    var bestCategorys = reactive([{\n      category: \"장르\",\n      sales: 0\n    }, {\n      category: \"장르\",\n      sales: 0\n    }, {\n      category: \"장르\",\n      sales: 0\n    }, {\n      category: \"장르\",\n      sales: 0\n    }, {\n      category: \"장르\",\n      sales: 0\n    }]);\n\n    //----------------------------------여기부터 서버에서 데이터 불러오는 함수-------------------------------------\n\n    // 주간 방문자 수 데이터를 업데이트하는 함수 정의\n    const updateBestCategory = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:3000/admin/bestCategory\", {});\n        const data = response.data;\n\n        // 데이터를 주간 방문자 수 배열에 할당\n        bestCategorys = data.map(item => {\n          return {\n            category: item.BOOK_CATEGORYNAME,\n            sales: item.TOTAL_SALES\n          };\n        });\n        // 대분류만 가져오기위해 문자열 잘라내기\n        const extractedCategories = bestCategorys.map(item => {\n          const match = item.category.match(/국내도서>(.*?)>/); // 정규식을 사용해 \"국내도서>\" 다음에 오는 문자열을 추출\n          const newCategory = match ? match[1].trim() : \"\"; // 공백을 제거한 후 새로운 카테고리 값으로 설정\n          return {\n            ...item,\n            // 원래 항목의 속성들을 그대로 가져오고\n            category: newCategory // category 속성을 새로운 값으로 업데이트\n          };\n        });\n\n        // extractedCategories로 bestCategorys 배열을 업데이트\n        bestCategorys = extractedCategories;\n\n        // 차트를 다시 그리는 함수 호출\n        drawBestCategoryChart();\n      } catch (error) {\n        alert(error);\n      }\n    };\n\n    //----------------------------------여기부터 차트 함수-------------------------------------\n\n    const drawBestCategoryChart = () => {\n      // 이전 차트 인스턴스 제거\n      if (bestCategoryChart.value && bestCategoryChart.value.chart) {\n        bestCategoryChart.value.chart.destroy();\n      }\n      if (bestCategoryChart) {\n        const ctx = bestCategoryChart.value.getContext(\"2d\");\n        bestCategoryChart.value.chart = new Chart(ctx, {\n          type: \"bar\",\n          data: {\n            labels: [bestCategorys[0].category, bestCategorys[1].category, bestCategorys[2].category, bestCategorys[3].category, bestCategorys[4].category],\n            datasets: [{\n              label: \"구매 수\",\n              // Add dataset label\n              data: [bestCategorys[0].sales, bestCategorys[1].sales, bestCategorys[2].sales, bestCategorys[3].sales, bestCategorys[4].sales],\n              backgroundColor: [\"#E74A3B\",\n              // 첫 번째 막대의 배경색\n              \"#858796\",\n              // 두 번째 막대의 배경색\n              \"#F6C23E\",\n              // 세 번째 막대의 배경색\n              \"#4E73DF\",\n              // 네 번째 막대의 배경색\n              \"#36B9CC\" // 다섯 번째 막대의 배경색\n              ],\n\n              borderColor: [\"#E74A3B\",\n              // 막대 테두리 색상\n              \"#858796\", \"#F6C23E\", \"#4E73DF\", \"#36B9CC\"],\n              hoverOffset: 1,\n              fill: true\n            }]\n          },\n          options: {\n            responsive: false,\n            scales: {\n              x: {\n                grid: {\n                  display: false // 배경 세로 선 숨기기\n                }\n              },\n\n              y: {\n                beginAtZero: true // y 축의 값이 0부터 시작하도록 설정\n              }\n            },\n\n            plugins: {\n              tooltip: {\n                padding: 10\n              }\n            }\n          }\n        });\n      }\n    };\n    onMounted(() => {\n      updateBestCategory();\n    });\n    return {\n      bestCategoryChart\n    };\n  },\n  mounted() {\n    this.updateBestCategory();\n  },\n  methods: {\n    // 주간 방문자수 데이터 받기\n    async updateBestCategory() {\n      await axios({\n        url: \"http://localhost:3000/admin/bestCategory\",\n        method: \"POST\"\n      }).then(res => {\n        const data = res.data;\n\n        // 데이터를 주간 방문자 수 배열에 할당\n        this.bestCategorys = data.map(item => {\n          return {\n            category: item.BOOK_CATEGORYNAME,\n            sales: item.TOTAL_SALES\n          };\n        });\n        // 대분류만 가져오기위해 문자열 잘라내기\n        const extractedCategories = this.bestCategorys.map(item => {\n          const match = item.category.match(/국내도서>(.*?)>/); // 정규식을 사용해 \"국내도서>\" 다음에 오는 문자열을 추출\n          const newCategory = match ? match[1].trim() : \"\"; // 공백을 제거한 후 새로운 카테고리 값으로 설정\n          return {\n            ...item,\n            // 원래 항목의 속성들을 그대로 가져오고\n            category: newCategory // category 속성을 새로운 값으로 업데이트\n          };\n        });\n\n        // extractedCategories로 bestCategorys 배열을 업데이트\n        this.bestCategorys = extractedCategories;\n        console.log(this.bestCategorys, \"베스틉카테코리쓰\");\n      }).catch(err => {\n        alert(err);\n      });\n    },\n    formatNumber(number) {\n      // 숫자를 천 단위마다 쉼표가 있는 형식으로 변환\n      return new Intl.NumberFormat().format(number);\n    }\n  }\n};","map":{"version":3,"names":["ref","onMounted","reactive","Chart","SideBar","axios","components","data","bestCategorys","category","sales","setup","bestCategoryChart","updateBestCategory","response","post","map","item","BOOK_CATEGORYNAME","TOTAL_SALES","extractedCategories","match","newCategory","trim","drawBestCategoryChart","error","alert","value","chart","destroy","ctx","getContext","type","labels","datasets","label","backgroundColor","borderColor","hoverOffset","fill","options","responsive","scales","x","grid","display","y","beginAtZero","plugins","tooltip","padding","mounted","methods","url","method","then","res","console","log","catch","err","formatNumber","number","Intl","NumberFormat","format"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\components\\adminBuyAnalyze.vue"],"sourcesContent":["<style scoped src=\"bootstrap/dist/css/bootstrap.css\"></style>\r\n<style scoped src=\"../assets/css/sbadmin.css\"></style>\r\n\r\n<template>\r\n    <body id=\"page-top\">\r\n        <!-- Page Wrapper -->\r\n        <div id=\"wrapper\">\r\n            <!-- Sidebar -->\r\n            <SideBar />\r\n            <!-- End of Sidebar -->\r\n            <!-- Content Wrapper -->\r\n            <div id=\"content-wrapper\" class=\"d-flex flex-column\">\r\n                <!-- Main Content -->\r\n                <div id=\"content\">\r\n                    <!-- Topbar -->\r\n                    <nav\r\n                        class=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow d-flex align-items-center justify-content-center\"\r\n                    >\r\n                        <h1><a class=\"text-gray-800\" href=\"/\" style=\"text-decoration: none\">MOONMOON</a></h1>\r\n                    </nav>\r\n                    <!-- End of Topbar -->\r\n\r\n                    <!-- Begin Page Content -->\r\n                    <div class=\"container-fluid\">\r\n                        <!-- Page Heading -->\r\n                        <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\r\n                            <h1 class=\"h3 mb-0 text-gray-800\">구매 분석</h1>\r\n                        </div>\r\n\r\n                        <!-- Content Row -->\r\n                        <div class=\"row d-flex align-items-center justify-content-center\">\r\n                            <div v-for=\"(item, i) in bestCategorys\" :key=\"i\" class=\"mb-4\" style=\"width: 12%\">\r\n                                <div\r\n                                    class=\"card shadow h-100 mb-5\"\r\n                                    :class=\"{\r\n                                        'cardshadow h-100 mb-5 border-bottom-danger': i + 1 === 1,\r\n                                        'cardshadow h-100 mb-5 border-bottom-secondary': i + 1 === 2,\r\n                                        'cardshadow h-100 mb-5 border-bottom-warning': i + 1 === 3,\r\n                                        'cardshadow h-100 mb-5 border-bottom-primary': i + 1 === 4,\r\n                                        'cardshadow h-100 mb-5 border-bottom-info': i + 1 === 5,\r\n                                    }\"\r\n                                >\r\n                                    <div class=\"card-body\">\r\n                                        <div class=\"row no-gutters align-items-center\">\r\n                                            <div class=\"col mr-2\">\r\n                                                <div\r\n                                                    class=\"text-xs font-weight-bold text-secondary text-uppercase mb-1\"\r\n                                                    :class=\"{\r\n                                                        'text-danger': i + 1 === 1,\r\n                                                        'text-secondary': i + 1 === 2,\r\n                                                        'text-warning': i + 1 === 3,\r\n                                                        'text-primary': i + 1 === 4,\r\n                                                        'text-info': i + 1 === 5,\r\n                                                    }\"\r\n                                                >\r\n                                                    {{ item }}\r\n                                                </div>\r\n                                                <div class=\"row no-gutters align-items-center\">\r\n                                                    <div class=\"col-auto\">\r\n                                                        <div class=\"h5 mb-0 mr-3 font-weight-bold text-gray-800\">{{ item.sales }}개</div>\r\n                                                    </div>\r\n                                                    <div class=\"col\">\r\n                                                        <div class=\"progress progress-sm mr-2\">\r\n                                                            <div\r\n                                                                class=\"progress-bar bg-warning\"\r\n                                                                role=\"progressbar\"\r\n                                                                style=\"width: 50%\"\r\n                                                                aria-valuenow=\"50\"\r\n                                                                aria-valuemin=\"0\"\r\n                                                                aria-valuemax=\"100\"\r\n                                                            ></div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-auto\">\r\n                                                <i class=\"fa-solid fa-book fa-xl text-gray-300\"></i>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row d-flex align-items-center justify-content-center\">\r\n                            <!-- Area Chart -->\r\n                            <div class=\"col-xl-8 col-lg-7\">\r\n                                <div class=\"card shadow mb-4\">\r\n                                    <!-- Card Header - Dropdown -->\r\n                                    <div class=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n                                        <h6 class=\"m-0 font-weight-bold text-primary\">많이 구매한 책 장르</h6>\r\n                                    </div>\r\n                                    <!-- Card Body -->\r\n                                    <div class=\"card-body\">\r\n                                        <div class=\"chart-area d-flex align-items-center justify-content-center\">\r\n                                            <canvas ref=\"bestCategoryChart\" width=\"1000\" height=\"300\"></canvas>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- /.container-fluid -->\r\n                </div>\r\n                <!-- End of Main Content -->\r\n\r\n                <!-- Footer -->\r\n                <footer class=\"sticky-footer bg-white\">\r\n                    <div class=\"container my-auto\">\r\n                        <div class=\"copyright text-center my-auto\">\r\n                            <span>Copyright &copy; Your Website 2023</span>\r\n                        </div>\r\n                    </div>\r\n                </footer>\r\n                <!-- End of Footer -->\r\n            </div>\r\n            <!-- End of Content Wrapper -->\r\n        </div>\r\n        <!-- End of Page Wrapper -->\r\n\r\n        <!-- Scroll to Top Button-->\r\n        <a class=\"scroll-to-top rounded\" href=\"#page-top\">\r\n            <i class=\"fas fa-angle-up\"></i>\r\n        </a>\r\n    </body>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, reactive } from \"vue\";\r\nimport Chart from \"chart.js/auto\";\r\nimport \"bootstrap\"; // Import Bootstrap JavaScript\r\nimport \"chartjs-adapter-luxon\";\r\nimport SideBar from \"../components/adminSidebar.vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n    components: { SideBar },\r\n    data() {\r\n        return {\r\n            //책 장르 데이터\r\n            bestCategorys: [\r\n                {\r\n                    category: \"장르\",\r\n                    sales: 0,\r\n                },\r\n                {\r\n                    category: \"장르\",\r\n                    sales: 0,\r\n                },\r\n                {\r\n                    category: \"장르\",\r\n                    sales: 0,\r\n                },\r\n                {\r\n                    category: \"장르\",\r\n                    sales: 0,\r\n                },\r\n                {\r\n                    category: \"장르\",\r\n                    sales: 0,\r\n                },\r\n            ],\r\n        };\r\n    },\r\n    setup() {\r\n        const bestCategoryChart = ref(null);\r\n\r\n        //방문자 수 데이터\r\n        var bestCategorys = reactive([\r\n            {\r\n                category: \"장르\",\r\n                sales: 0,\r\n            },\r\n            {\r\n                category: \"장르\",\r\n                sales: 0,\r\n            },\r\n            {\r\n                category: \"장르\",\r\n                sales: 0,\r\n            },\r\n            {\r\n                category: \"장르\",\r\n                sales: 0,\r\n            },\r\n            {\r\n                category: \"장르\",\r\n                sales: 0,\r\n            },\r\n        ]);\r\n\r\n        //----------------------------------여기부터 서버에서 데이터 불러오는 함수-------------------------------------\r\n\r\n        // 주간 방문자 수 데이터를 업데이트하는 함수 정의\r\n        const updateBestCategory = async () => {\r\n            try {\r\n                const response = await axios.post(\"http://localhost:3000/admin/bestCategory\", {});\r\n                const data = response.data;\r\n\r\n                // 데이터를 주간 방문자 수 배열에 할당\r\n                bestCategorys = data.map((item) => {\r\n                    return {\r\n                        category: item.BOOK_CATEGORYNAME,\r\n                        sales: item.TOTAL_SALES,\r\n                    };\r\n                });\r\n                // 대분류만 가져오기위해 문자열 잘라내기\r\n                const extractedCategories = bestCategorys.map((item) => {\r\n                    const match = item.category.match(/국내도서>(.*?)>/); // 정규식을 사용해 \"국내도서>\" 다음에 오는 문자열을 추출\r\n                    const newCategory = match ? match[1].trim() : \"\"; // 공백을 제거한 후 새로운 카테고리 값으로 설정\r\n                    return {\r\n                        ...item, // 원래 항목의 속성들을 그대로 가져오고\r\n                        category: newCategory, // category 속성을 새로운 값으로 업데이트\r\n                    };\r\n                });\r\n\r\n                // extractedCategories로 bestCategorys 배열을 업데이트\r\n                bestCategorys = extractedCategories;\r\n\r\n                // 차트를 다시 그리는 함수 호출\r\n                drawBestCategoryChart();\r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n        };\r\n\r\n        //----------------------------------여기부터 차트 함수-------------------------------------\r\n\r\n        const drawBestCategoryChart = () => {\r\n            // 이전 차트 인스턴스 제거\r\n            if (bestCategoryChart.value && bestCategoryChart.value.chart) {\r\n                bestCategoryChart.value.chart.destroy();\r\n            }\r\n\r\n            if (bestCategoryChart) {\r\n                const ctx = bestCategoryChart.value.getContext(\"2d\");\r\n                bestCategoryChart.value.chart = new Chart(ctx, {\r\n                    type: \"bar\",\r\n                    data: {\r\n                        labels: [\r\n                            bestCategorys[0].category,\r\n                            bestCategorys[1].category,\r\n                            bestCategorys[2].category,\r\n                            bestCategorys[3].category,\r\n                            bestCategorys[4].category,\r\n                        ],\r\n                        datasets: [\r\n                            {\r\n                                label: \"구매 수\", // Add dataset label\r\n                                data: [\r\n                                    bestCategorys[0].sales,\r\n                                    bestCategorys[1].sales,\r\n                                    bestCategorys[2].sales,\r\n                                    bestCategorys[3].sales,\r\n                                    bestCategorys[4].sales,\r\n                                ],\r\n                                backgroundColor: [\r\n                                    \"#E74A3B\", // 첫 번째 막대의 배경색\r\n                                    \"#858796\", // 두 번째 막대의 배경색\r\n                                    \"#F6C23E\", // 세 번째 막대의 배경색\r\n                                    \"#4E73DF\", // 네 번째 막대의 배경색\r\n                                    \"#36B9CC\", // 다섯 번째 막대의 배경색\r\n                                ],\r\n                                borderColor: [\r\n                                    \"#E74A3B\", // 막대 테두리 색상\r\n                                    \"#858796\",\r\n                                    \"#F6C23E\",\r\n                                    \"#4E73DF\",\r\n                                    \"#36B9CC\",\r\n                                ],\r\n                                hoverOffset: 1,\r\n                                fill: true,\r\n                            },\r\n                        ],\r\n                    },\r\n                    options: {\r\n                        responsive: false,\r\n                        scales: {\r\n                            x: {\r\n                                grid: {\r\n                                    display: false, // 배경 세로 선 숨기기\r\n                                },\r\n                            },\r\n                            y: {\r\n                                beginAtZero: true, // y 축의 값이 0부터 시작하도록 설정\r\n                            },\r\n                        },\r\n                        plugins: {\r\n                            tooltip: {\r\n                                padding: 10,\r\n                            },\r\n                        },\r\n                    },\r\n                });\r\n            }\r\n        };\r\n\r\n        onMounted(() => {\r\n            updateBestCategory();\r\n        });\r\n\r\n        return {\r\n            bestCategoryChart,\r\n        };\r\n    },\r\n    mounted() {\r\n        this.updateBestCategory();\r\n    },\r\n    methods: {\r\n        // 주간 방문자수 데이터 받기\r\n        async updateBestCategory() {\r\n            await axios({\r\n                url: \"http://localhost:3000/admin/bestCategory\",\r\n                method: \"POST\",\r\n            })\r\n                .then((res) => {\r\n                    const data = res.data;\r\n\r\n                    // 데이터를 주간 방문자 수 배열에 할당\r\n                    this.bestCategorys = data.map((item) => {\r\n                        return {\r\n                            category: item.BOOK_CATEGORYNAME,\r\n                            sales: item.TOTAL_SALES,\r\n                        };\r\n                    });\r\n                    // 대분류만 가져오기위해 문자열 잘라내기\r\n                    const extractedCategories = this.bestCategorys.map((item) => {\r\n                        const match = item.category.match(/국내도서>(.*?)>/); // 정규식을 사용해 \"국내도서>\" 다음에 오는 문자열을 추출\r\n                        const newCategory = match ? match[1].trim() : \"\"; // 공백을 제거한 후 새로운 카테고리 값으로 설정\r\n                        return {\r\n                            ...item, // 원래 항목의 속성들을 그대로 가져오고\r\n                            category: newCategory, // category 속성을 새로운 값으로 업데이트\r\n                        };\r\n                    });\r\n\r\n                    // extractedCategories로 bestCategorys 배열을 업데이트\r\n                    this.bestCategorys = extractedCategories;\r\n                    console.log(this.bestCategorys, \"베스틉카테코리쓰\");\r\n                })\r\n                .catch((err) => {\r\n                    alert(err);\r\n                });\r\n        },\r\n        formatNumber(number) {\r\n            // 숫자를 천 단위마다 쉼표가 있는 형식으로 변환\r\n            return new Intl.NumberFormat().format(number);\r\n        },\r\n    },\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}