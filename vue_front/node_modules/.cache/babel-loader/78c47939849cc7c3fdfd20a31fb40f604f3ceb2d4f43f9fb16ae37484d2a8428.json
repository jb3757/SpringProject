{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers, Fragment as _Fragment } from \"vue\";\nimport _imports_0 from '../assets/img/logo.png';\nimport _imports_1 from '../assets/img/naver.png';\nimport _imports_2 from '../assets/img/kakao.png';\nconst _hoisted_1 = {\n  class: \"login\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"title-bar\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"login_header_logo\"\n}, [/*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"/\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"\"\n})])])], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"login_wrap\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  key: 0,\n  id: \"login_error\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"circle\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", null, \"!\")], -1 /* HOISTED */);\nconst _hoisted_7 = {\n  key: 1,\n  id: \"login_error\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"circle\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", null, \"!\")], -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_10 = {\n  class: \"user_login_btns\"\n};\nconst _hoisted_11 = {\n  href: \"#\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"a\", {\n  class: \"join_btn\",\n  href: \"/join\"\n}, \"회원가입\", -1 /* HOISTED */);\nconst _hoisted_13 = {\n  class: \"login_wrap2\"\n};\nconst _hoisted_14 = {\n  method: \"post\"\n};\nconst _hoisted_15 = {\n  class: \"user_social_btns\"\n};\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"user_social_btns_p\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", null, \"소셜로 간편하게 로그인하세요\")], -1 /* HOISTED */);\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"a\", {\n  class: \"social_btn naver\",\n  href: \"/naverlogin\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"social_btn_naver\",\n  src: _imports_1,\n  alt: \"\"\n})], -1 /* HOISTED */);\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"social_btn_kakao\",\n  src: _imports_2,\n  alt: \"\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_19 = [_hoisted_18];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <gnbBar /> \"), _createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"form\", {\n    class: \"loginform\",\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.loginForm && $options.loginForm(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    type: \"text\",\n    id: \"username\",\n    class: _normalizeClass({\n      error_border: $data.error_border_check\n    }),\n    placeholder: \"이메일\"\n  }, null, 2 /* CLASS */), [[_vModelText, $data.email]]), _withDirectives(_createElementVNode(\"input\", {\n    ref: \"passwordVisible\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    type: \"password\",\n    id: \"password\",\n    class: _normalizeClass({\n      error_border: $data.error_border_check\n    }),\n    placeholder: \"비밀번호\"\n  }, null, 2 /* CLASS */), [[_vModelText, $data.password]]), _createElementVNode(\"img\", {\n    src: $data.passwordVisibleSrc[$data.passwordVisibleIndex],\n    class: \"password_visible\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.passwordVisibleToggle && $options.passwordVisibleToggle(...args))\n  }, null, 8 /* PROPS */, _hoisted_4), $data.email_check ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, [_hoisted_6, _createTextVNode(\" 이메일주소를 정확히 입력해주세요. 예)abcd@naver.com \")])) : $data.password_check ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, [_hoisted_8, _createTextVNode(\" 비밀번호를 정확히 입력해주세요.\"), _hoisted_9, _createTextVNode(\" *8자리 이상 영문, 숫자, 특수문자가 각각 1개 이상 \")])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"a\", _hoisted_11, [_createElementVNode(\"input\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => _ctx.loginValidation && _ctx.loginValidation(...args)),\n    class: \"login_submit\",\n    type: \"submit\",\n    id: \"login\",\n    value: \"로그인\"\n  })]), _hoisted_12])], 32 /* HYDRATE_EVENTS */)]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"form\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_hoisted_16, _hoisted_17, _createElementVNode(\"a\", {\n    class: \"social_btn kakao\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.kakaoLogin && $options.kakaoLogin(...args))\n  }, _hoisted_19)])])])]), _createCommentVNode(\" <Footer /> \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","class","_createElementVNode","href","src","alt","id","method","_hoisted_18","_createCommentVNode","_hoisted_1","_hoisted_2","_hoisted_3","onSubmit","_cache","_withModifiers","args","$options","loginForm","$data","email","$event","type","_normalizeClass","error_border","error_border_check","placeholder","ref","password","passwordVisibleSrc","passwordVisibleIndex","onClick","passwordVisibleToggle","email_check","_createElementBlock","_hoisted_5","_hoisted_6","password_check","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_ctx","loginValidation","value","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","kakaoLogin"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\Login.vue"],"sourcesContent":["<style src=\"../assets/css/Login.css\"></style>\r\n\r\n<template>\r\n    <!-- <gnbBar /> -->\r\n    <div class=\"login\">\r\n        <div class=\"title-bar\">\r\n            <div class=\"login_header_logo\">\r\n                <a href=\"/\"><img src=\"../assets/img/logo.png\" alt=\"\"></a>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"login_wrap\">\r\n            <form class=\"loginform\" @submit.prevent=\"loginForm\">\r\n                <input v-model=\"email\" type=\"text\" id=\"username\" :class=\"{ error_border: error_border_check }\"\r\n                    placeholder=\"이메일\" />\r\n                <input ref=\"passwordVisible\" v-model=\"password\" type=\"password\" id=\"password\"\r\n                    :class=\"{ error_border: error_border_check }\" placeholder=\"비밀번호\" />\r\n                <img :src=\"passwordVisibleSrc[passwordVisibleIndex]\" class=\"password_visible\"\r\n                    @click=\"passwordVisibleToggle\" />\r\n\r\n                <p id=\"login_error\" v-if=\"email_check\">\r\n                <div class=\"circle\">\r\n                    <span>!</span>\r\n                </div>\r\n                이메일주소를 정확히 입력해주세요. 예)abcd@naver.com\r\n                </p>\r\n                <p id=\"login_error\" v-else-if=\"password_check\">\r\n                <div class=\"circle\">\r\n                    <span>!</span>\r\n                </div>\r\n                비밀번호를 정확히 입력해주세요.<br />\r\n                *8자리 이상 영문, 숫자, 특수문자가 각각 1개 이상\r\n                </p>\r\n                <div class=\"user_login_btns\">\r\n                    <a href=\"#\">\r\n                        <input @click=\"loginValidation\" class=\"login_submit\" type=\"submit\" id=\"login\" value=\"로그인\" /></a>\r\n                    <a class=\"join_btn\" href=\"/join\">회원가입</a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n        <div class=\"login_wrap2\">\r\n            <form method=\"post\">\r\n                <div class=\"user_social_btns\">\r\n                    <div class=\"user_social_btns_p\">\r\n                        <p>소셜로 간편하게 로그인하세요</p>\r\n                    </div>\r\n                    <a class=\"social_btn naver\" href=\"/naverlogin\"><img class=\"social_btn_naver\"\r\n                            src=\"../assets/img/naver.png\" alt=\"\"></a>\r\n                    <a class=\"social_btn kakao\" @click=\"kakaoLogin\"><img class=\"social_btn_kakao\"\r\n                            src=\"../assets/img/kakao.png\" alt=\"\"></a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    <!-- <Footer /> -->\r\n</template>\r\n  \r\n<script>\r\n//   import gnbBar from \"../components/gnbBar.vue\";\r\n//   import Footer from '../components/footer.vue';\r\n\r\nimport axios from \"axios\";\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            email: \"\",\r\n            password: \"\",\r\n            passwordVisible: false,\r\n            passwordVisibleSrc: [\r\n                require(\"../assets/img/visible.png\"),\r\n                require(\"../assets/img/novisible.png\")\r\n            ],\r\n            passwordVisibleIndex: 0,\r\n\r\n            email_check: false,\r\n            password_check: false,\r\n            error_border_check: false,\r\n\r\n            allcheck: true,\r\n            allcheck1: true,\r\n            allcheck2: true,\r\n        };\r\n    },\r\n    // components: { gnbBar, Footer },\r\n\r\n    watch: {\r\n        email: function () {\r\n            this.checkEmail();\r\n            this.inputAllCheck();\r\n        },\r\n        password: function () {\r\n            this.checkPassword();\r\n            this.inputAllCheck();\r\n        },\r\n    },\r\n    methods: {\r\n        passwordVisibleToggle() {\r\n            this.passwordVisibleIndex = (this.passwordVisibleIndex + 1) % this.passwordVisibleSrc.length\r\n            if (!this.passwordVisible) {\r\n                this.$refs.passwordVisible.type = \"text\";\r\n                this.passwordVisible = true;\r\n            } else {\r\n                this.$refs.passwordVisible.type = \"password\";\r\n                this.passwordVisible = false;\r\n            }\r\n        },\r\n        checkEmail() {\r\n            // 이메일 형식 검사\r\n            const validateEmail =\r\n                /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n\r\n            if (this.email === \"\" || !validateEmail.test(this.email) || !this.email) {\r\n                this.email_check = true;\r\n                this.error_border_check = true;\r\n                this.allcheck1 = true; //입력조건 안맞을시 true\r\n            } else {\r\n                this.email_check = false;\r\n                this.error_border_check = false;\r\n                this.allcheck1 = false;\r\n            }\r\n        },\r\n        checkPassword() {\r\n            // 최소 8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상\r\n            const validatePassword =\r\n            /^(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$/;\r\n\r\n            if (\r\n                this.password === \"\" ||\r\n                !validatePassword.test(this.password) ||\r\n                !this.password\r\n            ) {\r\n                this.password_check = true;\r\n                this.error_border_check = true;\r\n                this.allcheck2 = true;\r\n            } else {\r\n                this.password_check = false;\r\n                this.error_border_check = false;\r\n                this.allcheck2 = false;\r\n            }\r\n        },\r\n        inputAllCheck() {\r\n            if (this.allcheck1 || this.allcheck2) {\r\n                //하나라도 입력조건이 안맞을시\r\n                this.allcheck = true; //버튼 비활성\r\n            } else {\r\n                this.allcheck = false;\r\n            }\r\n        },\r\n        loginForm() {\r\n            //백엔드로 로그인정보 전달\r\n            axios({\r\n                url: \"http://localhost:3000/auth/login\",\r\n                method: \"POST\",\r\n                data: {\r\n                    email: this.email,\r\n                    password: this.password,\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    if (res.data.code == 200) {\r\n                        //로그인 성공시\r\n                        localStorage.setItem(\"userID\", res.data.email);\r\n                        localStorage.setItem(\"userNick\", res.data.nick);\r\n                        localStorage.setItem(\"userProvider\", res.data.provider);\r\n\r\n                        window.location.href = \"/\";\r\n                    } else {\r\n                        if (res.data.code == 204) {\r\n                            //비밀번호 오류시\r\n                            alert(res.data.error + \"\\n\" + res.data.message);\r\n                            window.location.href = \"/login\";\r\n                        } else if (res.data.code == 206) {\r\n                            // 존재하지 않는 이메일 일때\r\n                            alert(res.data.error + \"\\n\" + res.data.message);\r\n                            window.location.href = \"/login\";\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    alert(err);\r\n                });\r\n        },\r\n        kakaoLogin() {\r\n            window.Kakao.Auth.login({\r\n                scope:\r\n                    \"profile_nickname, profile_image, account_email, gender, age_range\",\r\n                success: this.getProfile,\r\n            });\r\n        },\r\n        getProfile(autoObj) {\r\n            window.Kakao.API.request({\r\n                url: \"/v2/user/me\",\r\n                success: (res) => {\r\n                    const kakao_account = res.kakao_account;\r\n                    this.login(kakao_account);\r\n                },\r\n            });\r\n        },\r\n        async login(kakao_account) {\r\n            const email = kakao_account.email;\r\n\r\n            await axios({\r\n                url: \"http://localhost:3000/auth/kakaologin\",\r\n                method: \"POST\",\r\n                data: {\r\n                    email: kakao_account.email,\r\n                    nick: kakao_account.profile.nickname,\r\n                    image: kakao_account.profile.profile_image_url,\r\n                    sex: kakao_account.gender,\r\n                    agegroup: kakao_account.age_range,\r\n                    provider: \"kakao\",\r\n                },\r\n            }).then(async (res) => {\r\n                this.pullData(email);\r\n            });\r\n        },\r\n        pullData(email) {\r\n            axios({\r\n                url: \"http://localhost:3000/auth/kakaoData\",\r\n                method: \"POST\",\r\n                data: {\r\n                    email: email,\r\n                },\r\n            }).then(async (res) => {\r\n                localStorage.setItem(\"userID\", res.data.email);\r\n                localStorage.setItem(\"userNick\", res.data.nick);\r\n                localStorage.setItem(\"userImage\", res.data.image);\r\n                localStorage.setItem(\"userProvider\", res.data.provider);\r\n\r\n                window.location.href = \"/\";\r\n            });\r\n        },\r\n    },\r\n};\r\n</script>\r\n  \r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}