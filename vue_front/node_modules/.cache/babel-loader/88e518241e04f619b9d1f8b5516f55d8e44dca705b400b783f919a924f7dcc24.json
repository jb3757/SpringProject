{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, vModelCheckbox as _vModelCheckbox, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nimport _imports_0 from '../assets/img/nodata.png';\nconst _hoisted_1 = {\n  class: \"cart_container\"\n};\nconst _hoisted_2 = {\n  class: \"cart_wrap\"\n};\nconst _hoisted_3 = {\n  class: \"cart_header\",\n  style: {\n    \"background-color\": \"white\"\n  }\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"book_checkbox\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h3\", null, \" 장바구니\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"cart_float\"\n};\nconst _hoisted_7 = {\n  class: \"cart_inside\"\n};\nconst _hoisted_8 = {\n  class: \"cart_list\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"if_nodata\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"nodata\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0\n})], -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"p\", null, \"장바구니에 담긴 상품이 없어요\", -1 /* HOISTED */);\nconst _hoisted_14 = [_hoisted_10, _hoisted_11, _hoisted_12, _hoisted_13];\nconst _hoisted_15 = {\n  key: 1\n};\nconst _hoisted_16 = [\"onUpdate:modelValue\", \"onChange\", \"id\"];\nconst _hoisted_17 = [\"for\"];\nconst _hoisted_18 = [\"src\"];\nconst _hoisted_19 = {\n  class: \"cart_book_name\"\n};\nconst _hoisted_20 = {\n  class: \"book_price\"\n};\nconst _hoisted_21 = {\n  class: \"book_point\"\n};\nconst _hoisted_22 = [\"onClick\"];\nconst _hoisted_23 = {\n  class: \"changeQua\"\n};\nconst _hoisted_24 = {\n  class: \"button\"\n};\nconst _hoisted_25 = [\"onClick\"];\nconst _hoisted_26 = [\"onClick\"];\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1 /* HOISTED */);\nconst _hoisted_29 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"footer\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_30 = {\n  class: \"payment_area\"\n};\nconst _hoisted_31 = {\n  class: \"pay_wrap\"\n};\nconst _hoisted_32 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"payment_value\"\n}, \"상품금액\", -1 /* HOISTED */);\nconst _hoisted_33 = {\n  class: \"getTotalPrice\"\n};\nconst _hoisted_34 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"unit\"\n}, \"원\", -1 /* HOISTED */);\nconst _hoisted_35 = {\n  class: \"pay_wrap_second\"\n};\nconst _hoisted_36 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"payment_value\"\n}, \"배송비\", -1 /* HOISTED */);\nconst _hoisted_37 = {\n  class: \"getTotalPrice\"\n};\nconst _hoisted_38 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"unit\"\n}, \"원\", -1 /* HOISTED */);\nconst _hoisted_39 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_40 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_41 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_42 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_43 = {\n  class: \"pay_wrap\"\n};\nconst _hoisted_44 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"payment_text\"\n}, \"결제금액\", -1 /* HOISTED */);\nconst _hoisted_45 = {\n  class: \"payment_total\"\n};\nconst _hoisted_46 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"unit\"\n}, \"원\", -1 /* HOISTED */);\nconst _hoisted_47 = {\n  class: \"pay_wrap_second\"\n};\nconst _hoisted_48 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"payment_text\"\n}, \"총 적립 포인트\", -1 /* HOISTED */);\nconst _hoisted_49 = {\n  class: \"payment_point\"\n};\nconst _hoisted_50 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"unit\"\n}, \"원\", -1 /* HOISTED */);\nconst _hoisted_51 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"progress\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"first\"\n}, \"장바구니\"), /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"right\"\n}, \"> 주문/결제> 완료\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_gnbbar = _resolveComponent(\"gnbbar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_gnbbar, {\n    ref: \"childComponent\"\n  }, null, 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectAll = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.selectAllItems && $options.selectAllItems(...args)),\n    id: \"book_checkbox\"\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelCheckbox, $data.selectAll]]), _hoisted_4, _hoisted_5, _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"delete_button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.deleteCartBook && $options.deleteCartBook(...args))\n  }, \"삭제\")]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"ol\", _hoisted_8, [$data.cart.length == 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_9, _hoisted_14)) : $data.cart.length >= 1 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_15, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cart, (book, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => book.checked = $event,\n      onChange: $event => $options.insertOrRemove(book),\n      id: 'book_checkbox_' + index\n    }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_16), [[_vModelCheckbox, book.checked]]), _createElementVNode(\"label\", {\n      for: 'book_checkbox_' + index\n    }, null, 8 /* PROPS */, _hoisted_17), _createElementVNode(\"img\", {\n      class: \"cart_img\",\n      src: book.img\n    }, null, 8 /* PROPS */, _hoisted_18), _createElementVNode(\"span\", _hoisted_19, _toDisplayString(book.title), 1 /* TEXT */), _createTextVNode(\"  \"), _createElementVNode(\"span\", _hoisted_20, _toDisplayString($options.comma(book.price)) + \" 원\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_21, \"적립포인트    \" + _toDisplayString($options.getPoint(book)), 1 /* TEXT */), _createElementVNode(\"button\", {\n      type: \"button\",\n      class: \"deleteBook\",\n      onClick: $event => $options.deleteBook(book)\n    }, null, 8 /* PROPS */, _hoisted_22), _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"button\", {\n      onClick: $event => $options.decreaseQuantity(book)\n    }, \"-\", 8 /* PROPS */, _hoisted_25), _createElementVNode(\"span\", null, _toDisplayString(book.quantity), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.increaseQuantity(book)\n    }, \"+\", 8 /* PROPS */, _hoisted_26)]), _hoisted_27, _createElementVNode(\"p\", null, _toDisplayString($options.getPrice(book)) + \" 원\", 1 /* TEXT */)]), _hoisted_28]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]), _hoisted_29]), _createCommentVNode(\" CSS작업시 컨텐츠를 박스라고 생각하면 이해가 쉬움 \\r\\n             payment_area라는 최상위 부모박스 > 형제박스(pay_wrap 자식박스, pay_wrap 자식박스)\\r\\n        \"), _createElementVNode(\"div\", _hoisted_30, [_createElementVNode(\"div\", _hoisted_31, [_hoisted_32, _createElementVNode(\"div\", _hoisted_33, _toDisplayString($options.comma($options.getTotalPrice)), 1 /* TEXT */), _hoisted_34]), _createElementVNode(\"div\", _hoisted_35, [_hoisted_36, _createElementVNode(\"span\", _hoisted_37, _toDisplayString($options.comma($options.fee)), 1 /* TEXT */), _hoisted_38]), _hoisted_39, _hoisted_40, _hoisted_41, _hoisted_42, _createElementVNode(\"div\", _hoisted_43, [_hoisted_44, _createElementVNode(\"div\", _hoisted_45, _toDisplayString($options.comma($options.getFinalPrice)), 1 /* TEXT */), _hoisted_46]), _createElementVNode(\"div\", _hoisted_47, [_hoisted_48, _createElementVNode(\"div\", _hoisted_49, _toDisplayString($options.comma($options.totalPoint)), 1 /* TEXT */), _hoisted_50]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.choosePay && $options.choosePay(...args)),\n    class: \"pay_button\"\n  }, \"주문하기\"), _createCommentVNode(\" <button @click=\\\"allPay\\\">전체 결제</button> \")])])])]), _hoisted_51], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","class","style","_createElementVNode","for","src","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_createVNode","_component_gnbbar","ref","_hoisted_1","_hoisted_2","_hoisted_3","type","$data","selectAll","$event","onChange","_cache","args","$options","selectAllItems","id","_hoisted_4","_hoisted_5","onClick","deleteCartBook","_hoisted_6","_hoisted_7","_hoisted_8","cart","length","_createElementBlock","_hoisted_9","_hoisted_14","_hoisted_15","_Fragment","_renderList","book","index","key","checked","insertOrRemove","img","_hoisted_19","_toDisplayString","title","_hoisted_20","comma","price","_hoisted_21","getPoint","deleteBook","_hoisted_23","_hoisted_24","decreaseQuantity","_hoisted_25","quantity","increaseQuantity","_hoisted_26","_hoisted_27","getPrice","_hoisted_28","_hoisted_29","_createCommentVNode","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","getTotalPrice","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","fee","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","getFinalPrice","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","totalPoint","_hoisted_50","choosePay","_hoisted_51"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\cart.vue"],"sourcesContent":["<style src=\"../assets/css/cart.css\"></style>\r\n\r\n<template>\r\n    <gnbbar ref=\"childComponent\" />\r\n    <div class=\"cart_container\">\r\n        <div class=\"cart_wrap\">\r\n            <div class=\"cart_header\" style=\"background-color: white\">\r\n                <input type=\"checkbox\" v-model=\"selectAll\" @change=\"selectAllItems\" id=\"book_checkbox\" /><label for=\"book_checkbox\"></label>\r\n                <h3>&nbsp;장바구니</h3>\r\n                <button type=\"button\" class=\"delete_button\" @click=\"deleteCartBook\">삭제</button>\r\n            </div>\r\n            <div class=\"cart_float\">\r\n                <div class=\"cart_inside\">\r\n                    <ol class=\"cart_list\">\r\n                        <span v-if=\"cart.length == 0\" class=\"if_nodata\">\r\n                            <div class=\"nodata\"><img src=\"../assets/img/nodata.png\" /></div>\r\n                            <br /><br />\r\n                            <p>장바구니에 담긴 상품이 없어요</p>\r\n                        </span>\r\n                        <span v-else-if=\"cart.length >= 1\">\r\n                            <li v-for=\"(book, index) in cart\" :key=\"index\">\r\n                                <input type=\"checkbox\" v-model=\"book.checked\" @change=\"insertOrRemove(book)\" :id=\"'book_checkbox_' + index\" />\r\n                                <label :for=\"'book_checkbox_' + index\"></label>\r\n                                <img class=\"cart_img\" :src=\"book.img\" />\r\n                                <span class=\"cart_book_name\">{{ book.title }}</span\r\n                                >&nbsp;\r\n                                <span class=\"book_price\">{{ comma(book.price) }} 원</span>\r\n                                <div class=\"book_point\">적립포인트 &nbsp;&nbsp;&nbsp;{{ getPoint(book) }}</div>\r\n                                <button type=\"button\" class=\"deleteBook\" @click=\"deleteBook(book)\"></button>\r\n                                <div class=\"changeQua\">\r\n                                    <div class=\"button\">\r\n                                        <button @click=\"decreaseQuantity(book)\">-</button>\r\n                                        <span>{{ book.quantity }}</span>\r\n                                        <button @click=\"increaseQuantity(book)\">+</button>\r\n                                    </div>\r\n                                    <br />\r\n                                    <p>{{ getPrice(book) }} 원</p>\r\n                                </div>\r\n                                <p></p>\r\n                            </li>\r\n                        </span>\r\n                    </ol>\r\n                    <div class=\"footer\"></div>\r\n                </div>\r\n\r\n                <!-- CSS작업시 컨텐츠를 박스라고 생각하면 이해가 쉬움 \r\n             payment_area라는 최상위 부모박스 > 형제박스(pay_wrap 자식박스, pay_wrap 자식박스)\r\n        -->\r\n                <div class=\"payment_area\">\r\n                    <div class=\"pay_wrap\">\r\n                        <div class=\"payment_value\">상품금액</div>\r\n                        <div class=\"getTotalPrice\">{{ comma(getTotalPrice) }}</div>\r\n                        <div class=\"unit\">원</div>\r\n                    </div>\r\n\r\n                    <div class=\"pay_wrap_second\">\r\n                        <div class=\"payment_value\">배송비</div>\r\n                        <span class=\"getTotalPrice\">{{ comma(fee) }} </span>\r\n                        <span class=\"unit\">원</span>\r\n                    </div>\r\n\r\n                    <br /><br /><br />\r\n                    <hr />\r\n                    <div class=\"pay_wrap\">\r\n                        <div class=\"payment_text\">결제금액</div>\r\n                        <div class=\"payment_total\">{{ comma(getFinalPrice) }}</div>\r\n                        <span class=\"unit\">원</span>\r\n                    </div>\r\n                    <div class=\"pay_wrap_second\">\r\n                        <div class=\"payment_text\">총 적립 포인트</div>\r\n                        <div class=\"payment_point\">{{ comma(totalPoint) }}</div>\r\n                        <span class=\"unit\">원</span>\r\n                    </div>\r\n                    <button @click=\"choosePay\" class=\"pay_button\">주문하기</button>\r\n                    <!-- <button @click=\"allPay\">전체 결제</button> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"progress\">\r\n        <span class=\"first\">장바구니</span>\r\n        <span class=\"right\">> 주문/결제> 완료</span>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nimport gnbbar from \"../components/gnbBar.vue\";\r\n\r\nexport default {\r\n    components: { gnbbar },\r\n    data() {\r\n        return {\r\n            cart: [],\r\n            select: [],\r\n            selectAll: false,\r\n            userEmail: localStorage.getItem(\"userID\"),\r\n        };\r\n    },\r\n    filters: {\r\n        comma(val) {\r\n            return String(val).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        },\r\n    },\r\n    methods: {\r\n        comma(num) {\r\n            return String(num).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        },\r\n        deleteCartBook() {\r\n            if (this.select.length === 0) {\r\n                alert(\"상품을 선택하세요\");\r\n            }\r\n            console.log(this.select);\r\n            axios({\r\n                url: \"/cart/delete\",\r\n                method: \"POST\",\r\n                data: {\r\n                    bookid: this.select,\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    if (res.data === \"삭제완료\") {\r\n                        alert(\"삭제완료\");\r\n                        this.getCart();\r\n                        this.$refs.childComponent.getCartNum();\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.error(err);\r\n                });\r\n        },\r\n        increaseQuantity(book) {\r\n            //장바구니 수량 늘리기\r\n\r\n            book.quantity++;\r\n        },\r\n        deleteBook(book) {\r\n            console.log(book.book_no);\r\n            if (confirm(\"장바구니에서 제거하시겠습니까?\")) {\r\n                axios({\r\n                    url: \"/cart/deleteCartBook\",\r\n                    method: \"GET\",\r\n                    params: { bookid: book.book_no },\r\n                })\r\n                    .then((res) => {\r\n                        alert(\"제거되었습니다.\");\r\n                        this.$refs.childComponent.getCartNum();\r\n                        this.getCart();\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err);\r\n                    });\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        choosePay() {\r\n            // 선택된 상품들만 필터링하여 가져옵니다.\r\n            if (!localStorage.getItem(\"userID\")) {\r\n                alert(\"로그인해주세요\");\r\n                return;\r\n            }\r\n            const selectedBooks = this.cart.filter((book) => this.select.includes(book.book_no));\r\n\r\n            if (selectedBooks.length == 0) {\r\n                alert(\"상품을 선택해주세요\");\r\n                return;\r\n            }\r\n\r\n            let TP = 0; //총 결제 금액\r\n            let TP2 = 0; //총 포인트\r\n            let thisFee = 0;\r\n\r\n            let bookData = [];\r\n\r\n            selectedBooks.forEach((book) => {\r\n                TP += this.getPrice(book);\r\n                TP2 += this.getPoint(book);\r\n\r\n                bookData.push({\r\n                    ORDERITEM_BOOKID: book.book_no,\r\n                    ORDERITEM_CNT: book.quantity,\r\n                    ORDERITEM_PRICE: book.price,\r\n                    ORDERITEM_POINT: this.getPoint(book),\r\n                });\r\n            });\r\n\r\n            if (TP >= 50000) {\r\n                //결제금액이 15000원이상이면 배송료 0원으로 설정\r\n                thisFee = 0;\r\n            } else if (TP < 50000) {\r\n                thisFee = 2500;\r\n            }\r\n\r\n            axios({\r\n                url: \"http://localhost:3000/cart\",\r\n                method: \"POST\",\r\n                data: {\r\n                    email: this.userEmail,\r\n                    total_pay: TP,\r\n                    total_point: TP2,\r\n                    fee: thisFee,\r\n                    books_info: bookData,\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    if (res.status == 401) {\r\n                        console.log(\"에러 발생: \" + res.data.error);\r\n                    } else if (res.status == 200) {\r\n                        const orderId = res.data.orderID;\r\n                        alert(\"결제페이지로 이동합니다\");\r\n                        console.log(orderId);\r\n                        this.$router.push({ name: \"paymentPage\", query: { payid: orderId } });\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        },\r\n        decreaseQuantity(book) {\r\n            //장바구니 수량 줄이기\r\n            if (book.quantity === 1) {\r\n                //한개 이상은 못줄이게 하기\r\n                return;\r\n            }\r\n            book.quantity--;\r\n        },\r\n        insertOrRemove(book) {\r\n            // 배열에 book.book_no가 없으면 해당 값을 추가\r\n            // 배열에 이미 book.book_no가 있으면 해당 값을 제거하는 filter 적용\r\n\r\n            if (book.checked && !this.select.includes(book.book_no)) {\r\n                this.select.push(book.book_no); // 체크되어 있고, 배열에 없는 경우 추가\r\n            } else if (!book.checked && this.select.includes(book.book_no)) {\r\n                this.select = this.select.filter((selectedBookNo) => selectedBookNo !== book.book_no); // 체크가 해제되고, 배열에 있는 경우 제거\r\n            }\r\n            console.log(this.select);\r\n        },\r\n        selectAllItems() {\r\n            for (const book of this.cart) {\r\n                book.checked = this.selectAll;\r\n                this.insertOrRemove(book);\r\n            }\r\n        },\r\n        handleChildCheckboxChange() {\r\n            // 모든 자식 체크박스가 선택되어 있는지 확인합니다.\r\n            console.log(this.cart);\r\n            if (this.cart.length == 0) {\r\n                this.selectAll = false;\r\n                return;\r\n            }\r\n            const allChildChecked = this.cart.every((book) => book.checked);\r\n\r\n            // 부모 체크박스의 상태를 업데이트합니다.\r\n            this.selectAll = allChildChecked;\r\n        },\r\n        getCart() {\r\n            if (!localStorage.getItem(\"userID\")) {\r\n                this.cart = [];\r\n                return;\r\n            }\r\n            const email = this.userEmail;\r\n\r\n            axios({\r\n                url: \"/cart/getInfo\",\r\n                method: \"POSt\",\r\n                data: {\r\n                    email: email,\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    this.cart = res.data;\r\n                    console.log(this.cart);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        },\r\n    },\r\n    computed: {\r\n        // 데이터 값이 바뀌면 실행 되는것?\r\n        getPrice(book) {\r\n            //버튼으로 수량을 바꾸면 실행\r\n            return (book) => book.price * book.quantity; //값 * 수량\r\n        },\r\n        getPoint(book) {\r\n            //버튼으로 수량바꾸면 실행\r\n            const point = (book) => book.point * book.quantity; //마일리지 * 수량\r\n            return point;\r\n        },\r\n        getTotalPrice() {\r\n            //선택한 상품들 총합 가격\r\n            const selectedBooks = this.cart.filter((book) => this.select.includes(book.book_no)); //책 정보가 있는 배열에서 체크가 된것만 필터링\r\n\r\n            if (selectedBooks.length == 0) {\r\n                return 0;\r\n            }\r\n\r\n            const totalPrice = selectedBooks.reduce((total, book) => total + book.price * book.quantity, 0); //선택된것만 값 총합 가져오기\r\n\r\n            return totalPrice; //리턴\r\n        },\r\n        fee() {\r\n            if (this.getTotalPrice > 15000) {\r\n                return 0;\r\n            } else {\r\n                return 2500;\r\n            }\r\n        },\r\n        getFinalPrice() {\r\n            //최종 결제 가격 함수\r\n            if (this.getTotalPrice + this.fee == 2500) {\r\n                return 0;\r\n            }\r\n            return this.getTotalPrice + this.fee;\r\n        },\r\n        totalPoint() {\r\n            //결제 시 얻는 포인트\r\n            const selectedBooks = this.cart.filter((book) => this.select.includes(book.book_no)); //책 정보가 있는 배열에서 체크가 된것만 필터링\r\n\r\n            const totalPoint = selectedBooks.reduce((total, book) => total + book.point * book.quantity, 0); //선택된것만 값 총합 가져오기\r\n\r\n            return totalPoint;\r\n        },\r\n    },\r\n\r\n    mounted() {\r\n        this.getCart();\r\n    },\r\n    watch: {\r\n        // 자식 체크박스 상태 변경 감지\r\n        cart: {\r\n            handler() {\r\n                this.handleChildCheckboxChange();\r\n            },\r\n            deep: true,\r\n        },\r\n    },\r\n};\r\n</script>\r\n"],"mappings":";OAeqDA,UAA8B;;EAX1EC,KAAK,EAAC;AAAgB;;EAClBA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC,aAAa;EAACC,KAA+B,EAA/B;IAAA;EAAA;;gCACoEC,mBAAA,CAAmC;EAA5BC,GAAG,EAAC;AAAe;gCACnHD,mBAAA,CAAmB,YAAf,OAAU;;EAGbF,KAAK,EAAC;AAAY;;EACdA,KAAK,EAAC;AAAa;;EAChBA,KAAK,EAAC;AAAW;;;EACaA,KAAK,EAAC;;iCAChCE,mBAAA,CAAgE;EAA3DF,KAAK,EAAC;AAAQ,I,aAACE,mBAAA,CAAsC;EAAjCE,GAA8B,EAA9BL;AAA8B,G;iCACvDG,mBAAA,CAAM;iCAAAA,mBAAA,CAAM;iCACZA,mBAAA,CAAuB,WAApB,kBAAgB;qBAFnBG,WAAgE,EAChEC,WAAM,EAAAC,WAAM,EACZC,WAAuB,C;;;;;;;;EAObR,KAAK,EAAC;AAAgB;;EAEtBA,KAAK,EAAC;AAAY;;EACnBA,KAAK,EAAC;AAAY;;;EAElBA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAQ;;;iCAKnBE,mBAAA,CAAM;iCAGVA,mBAAA,CAAO;iCAInBA,mBAAA,CAA0B;EAArBF,KAAK,EAAC;AAAQ;;EAMlBA,KAAK,EAAC;AAAc;;EAChBA,KAAK,EAAC;AAAU;iCACjBE,mBAAA,CAAqC;EAAhCF,KAAK,EAAC;AAAe,GAAC,MAAI;;EAC1BA,KAAK,EAAC;AAAe;iCAC1BE,mBAAA,CAAyB;EAApBF,KAAK,EAAC;AAAM,GAAC,GAAC;;EAGlBA,KAAK,EAAC;AAAiB;iCACxBE,mBAAA,CAAoC;EAA/BF,KAAK,EAAC;AAAe,GAAC,KAAG;;EACxBA,KAAK,EAAC;AAAe;iCAC3BE,mBAAA,CAA2B;EAArBF,KAAK,EAAC;AAAM,GAAC,GAAC;iCAGxBE,mBAAA,CAAM;iCAAAA,mBAAA,CAAM;iCAAAA,mBAAA,CAAM;iCAClBA,mBAAA,CAAM;;EACDF,KAAK,EAAC;AAAU;iCACjBE,mBAAA,CAAoC;EAA/BF,KAAK,EAAC;AAAc,GAAC,MAAI;;EACzBA,KAAK,EAAC;AAAe;iCAC1BE,mBAAA,CAA2B;EAArBF,KAAK,EAAC;AAAM,GAAC,GAAC;;EAEnBA,KAAK,EAAC;AAAiB;iCACxBE,mBAAA,CAAwC;EAAnCF,KAAK,EAAC;AAAc,GAAC,UAAQ;;EAC7BA,KAAK,EAAC;AAAe;iCAC1BE,mBAAA,CAA2B;EAArBF,KAAK,EAAC;AAAM,GAAC,GAAC;iCAQxCE,mBAAA,CAGM;EAHDF,KAAK,EAAC;AAAU,I,aACjBE,mBAAA,CAA+B;EAAzBF,KAAK,EAAC;AAAO,GAAC,MAAI,G,aACxBE,mBAAA,CAAsC;EAAhCF,KAAK,EAAC;AAAO,GAAC,aAAW,E;;;;6DA9EnCS,YAAA,CAA+BC,iBAAA;IAAvBC,GAAG,EAAC;EAAgB,gCAC5BT,mBAAA,CA0EM,OA1ENU,UA0EM,GAzEFV,mBAAA,CAwEM,OAxENW,UAwEM,GAvEFX,mBAAA,CAIM,OAJNY,UAIM,G,gBAHFZ,mBAAA,CAAyF;IAAlFa,IAAI,EAAC,UAAU;+DAAUC,KAAA,CAAAC,SAAS,GAAAC,MAAA;IAAGC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;IAAEG,EAAE,EAAC;qEAAvCR,KAAA,CAAAC,SAAS,E,GAAgDQ,UAAmC,EAC5HC,UAAmB,EACnBxB,mBAAA,CAA+E;IAAvEa,IAAI,EAAC,QAAQ;IAACf,KAAK,EAAC,eAAe;IAAE2B,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAM,cAAA,IAAAN,QAAA,CAAAM,cAAA,IAAAP,IAAA,CAAc;KAAE,IAAE,E,GAE1EnB,mBAAA,CAiEM,OAjEN2B,UAiEM,GAhEF3B,mBAAA,CA+BM,OA/BN4B,UA+BM,GA9BF5B,mBAAA,CA4BK,MA5BL6B,UA4BK,GA3BWf,KAAA,CAAAgB,IAAI,CAACC,MAAM,S,cAAvBC,mBAAA,CAIO,QAJPC,UAIO,EAAAC,WAAA,KACUpB,KAAA,CAAAgB,IAAI,CAACC,MAAM,S,cAA5BC,mBAAA,CAqBO,QAAAG,WAAA,I,kBApBHH,mBAAA,CAmBKI,SAAA,QAAAC,WAAA,CAnBuBvB,KAAA,CAAAgB,IAAI,GAApBQ,IAAI,EAAEC,KAAK;yBAAvBP,mBAAA,CAmBK;MAnB8BQ,GAAG,EAAED;IAAK,I,gBACzCvC,mBAAA,CAA8G;MAAvGa,IAAI,EAAC,UAAU;uCAAUyB,IAAI,CAACG,OAAO,GAAAzB,MAAA;MAAGC,QAAM,EAAAD,MAAA,IAAEI,QAAA,CAAAsB,cAAc,CAACJ,IAAI;MAAIhB,EAAE,qBAAqBiB;8EAArED,IAAI,CAACG,OAAO,E,GAC5CzC,mBAAA,CAA+C;MAAvCC,GAAG,qBAAqBsC;0CAChCvC,mBAAA,CAAwC;MAAnCF,KAAK,EAAC,UAAU;MAAEI,GAAG,EAAEoC,IAAI,CAACK;0CACjC3C,mBAAA,CACC,QADD4C,WACC,EAAAC,gBAAA,CAD+BP,IAAI,CAACQ,KAAK,kB,iBACzC,IACD,GAAA9C,mBAAA,CAAyD,QAAzD+C,WAAyD,EAAAF,gBAAA,CAA7BzB,QAAA,CAAA4B,KAAK,CAACV,IAAI,CAACW,KAAK,KAAI,IAAE,iBAClDjD,mBAAA,CAA0E,OAA1EkD,WAA0E,EAAlD,WAAwB,GAAAL,gBAAA,CAAGzB,QAAA,CAAA+B,QAAQ,CAACb,IAAI,mBAChEtC,mBAAA,CAA4E;MAApEa,IAAI,EAAC,QAAQ;MAACf,KAAK,EAAC,YAAY;MAAE2B,OAAK,EAAAT,MAAA,IAAEI,QAAA,CAAAgC,UAAU,CAACd,IAAI;0CAChEtC,mBAAA,CAQM,OARNqD,WAQM,GAPFrD,mBAAA,CAIM,OAJNsD,WAIM,GAHFtD,mBAAA,CAAkD;MAAzCyB,OAAK,EAAAT,MAAA,IAAEI,QAAA,CAAAmC,gBAAgB,CAACjB,IAAI;OAAG,GAAC,iBAAAkB,WAAA,GACzCxD,mBAAA,CAAgC,cAAA6C,gBAAA,CAAvBP,IAAI,CAACmB,QAAQ,kBACtBzD,mBAAA,CAAkD;MAAzCyB,OAAK,EAAAT,MAAA,IAAEI,QAAA,CAAAsC,gBAAgB,CAACpB,IAAI;OAAG,GAAC,iBAAAqB,WAAA,E,GAE7CC,WAAM,EACN5D,mBAAA,CAA6B,WAAA6C,gBAAA,CAAvBzB,QAAA,CAAAyC,QAAQ,CAACvB,IAAI,KAAI,IAAE,gB,GAE7BwB,WAAO,C;2EAInBC,WAA0B,C,GAG9BC,mBAAA,2HAEL,EACKhE,mBAAA,CA2BM,OA3BNiE,WA2BM,GA1BFjE,mBAAA,CAIM,OAJNkE,WAIM,GAHFC,WAAqC,EACrCnE,mBAAA,CAA2D,OAA3DoE,WAA2D,EAAAvB,gBAAA,CAA7BzB,QAAA,CAAA4B,KAAK,CAAC5B,QAAA,CAAAiD,aAAa,mBACjDC,WAAyB,C,GAG7BtE,mBAAA,CAIM,OAJNuE,WAIM,GAHFC,WAAoC,EACpCxE,mBAAA,CAAoD,QAApDyE,WAAoD,EAAA5B,gBAAA,CAArBzB,QAAA,CAAA4B,KAAK,CAAC5B,QAAA,CAAAsD,GAAG,mBACxCC,WAA2B,C,GAG/BC,WAAM,EAAAC,WAAM,EAAAC,WAAM,EAClBC,WAAM,EACN/E,mBAAA,CAIM,OAJNgF,WAIM,GAHFC,WAAoC,EACpCjF,mBAAA,CAA2D,OAA3DkF,WAA2D,EAAArC,gBAAA,CAA7BzB,QAAA,CAAA4B,KAAK,CAAC5B,QAAA,CAAA+D,aAAa,mBACjDC,WAA2B,C,GAE/BpF,mBAAA,CAIM,OAJNqF,WAIM,GAHFC,WAAwC,EACxCtF,mBAAA,CAAwD,OAAxDuF,WAAwD,EAAA1C,gBAAA,CAA1BzB,QAAA,CAAA4B,KAAK,CAAC5B,QAAA,CAAAoE,UAAU,mBAC9CC,WAA2B,C,GAE/BzF,mBAAA,CAA2D;IAAlDyB,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAsE,SAAA,IAAAtE,QAAA,CAAAsE,SAAA,IAAAvE,IAAA,CAAS;IAAErB,KAAK,EAAC;KAAa,MAAI,GAClDkE,mBAAA,8CAA+C,C,SAK/D2B,WAGM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}