{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-23b155e4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"mypage_menu\"\n};\nconst _hoisted_2 = {\n  class: \"right_box\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"userUpdateTitle\"\n}, \"회원정보 관리\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", {\n  style: {\n    \"margin-top\": \"30px\",\n    \"margin-bottom\": \"50px\"\n  }\n}, null, -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"input-group\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"아이디\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"name\"\n}, \"이름\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"비밀번호\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"새 비밀번호\", -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"sex\"\n}, \"성별\", -1 /* HOISTED */));\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"age\"\n}, \"나이\", -1 /* HOISTED */));\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"add1\"\n}, \"주소\", -1 /* HOISTED */));\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"add2\"\n}, \"상세주소\", -1 /* HOISTED */));\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"zipcode\"\n}, \"우편번호\", -1 /* HOISTED */));\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"phone_num\"\n}, \"전화번호\", -1 /* HOISTED */));\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"수정\", -1 /* HOISTED */));\nconst _hoisted_17 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_myPageSide = _resolveComponent(\"myPageSide\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_myPageSide)]), _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _hoisted_4, _createElementVNode(\"form\", {\n    onSubmit: _cache[12] || (_cache[12] = _withModifiers((...args) => $options.updateUserInfo && $options.updateUserInfo(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.updatedFields.email = $event),\n    readonly: true\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.updatedFields.email]])]), _createElementVNode(\"div\", null, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.updatedFields.name = $event),\n    readonly: true\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.updatedFields.name]])]), _createElementVNode(\"div\", null, [_hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.updatedFields.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.updatedFields.password]])]), _createElementVNode(\"div\", null, [_hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.updatedFields.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.updatedFields.password]])]), _createElementVNode(\"div\", null, [_hoisted_10, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"sex\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.updatedFields.sex = $event),\n    readonly: true\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.updatedFields.sex]])]), _createElementVNode(\"div\", null, [_hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"age\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.updatedFields.age = $event),\n    readonly: true\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.updatedFields.age]])]), _createElementVNode(\"div\", null, [_hoisted_12, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"add1\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.updatedFields.add1 = $event),\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.openAddressSearch && $options.openAddressSearch(...args))\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.updatedFields.add1]])]), _createElementVNode(\"div\", null, [_hoisted_13, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"add2\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.updatedFields.add2 = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.updatedFields.add2]])]), _createElementVNode(\"div\", null, [_hoisted_14, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"zipcode\",\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.updatedFields.zipcode = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.updatedFields.zipcode]])]), _createElementVNode(\"div\", null, [_hoisted_15, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"phone_num\",\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.updatedFields.phone_num = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.updatedFields.phone_num]])]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[11] || (_cache[11] = (...args) => $options.cancelUpdate && $options.cancelUpdate(...args))\n  }, \"취소\"), _hoisted_16])], 32 /* HYDRATE_EVENTS */), $data.message ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, _toDisplayString($data.message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","style","for","type","_hoisted_1","_createVNode","_component_myPageSide","_hoisted_2","_hoisted_3","_hoisted_4","onSubmit","_cache","_withModifiers","args","$options","updateUserInfo","_hoisted_5","_hoisted_6","id","$data","updatedFields","email","$event","readonly","_hoisted_7","name","_hoisted_8","password","_hoisted_9","_hoisted_10","sex","_hoisted_11","age","_hoisted_12","add1","onClick","openAddressSearch","_hoisted_13","add2","_hoisted_14","zipcode","_hoisted_15","phone_num","cancelUpdate","_hoisted_16","message","_createElementBlock","_hoisted_17","_toDisplayString"],"sources":["C:\\Users\\Lim\\Desktop\\BOOK_0728\\MOONMOON\\vue_front\\src\\views\\mypageUserInfo.vue"],"sourcesContent":["<template>\r\n    <div class=\"mypage_menu\">\r\n        <myPageSide />\r\n    </div>\r\n    <div class=\"right_box\">\r\n        <h2 class=\"userUpdateTitle\">회원정보 관리</h2>\r\n        <hr style=\"margin-top: 30px; margin-bottom: 50px\" />\r\n\r\n        <form @submit.prevent=\"updateUserInfo\">\r\n            <div class=\"input-group\">\r\n                <label for=\"email\">아이디</label>\r\n                <input type=\"text\" id=\"email\" v-model=\"updatedFields.email\" :readonly=\"true\" />\r\n            </div>\r\n            <div>\r\n                <label for=\"name\">이름</label>\r\n                <input type=\"text\" id=\"name\" v-model=\"updatedFields.name\" :readonly=\"true\" />\r\n            </div>\r\n            <div>\r\n                <label for=\"password\">비밀번호</label>\r\n                <input type=\"password\" id=\"password\" v-model=\"updatedFields.password\" />\r\n            </div>\r\n            <div>\r\n                <label for=\"password\">새 비밀번호</label>\r\n                <input type=\"password\" id=\"password\" v-model=\"updatedFields.password\" />\r\n            </div>\r\n            <div>\r\n                <label for=\"sex\">성별</label>\r\n                <input type=\"text\" id=\"sex\" v-model=\"updatedFields.sex\" :readonly=\"true\" />\r\n            </div>\r\n            <div>\r\n                <label for=\"age\">나이</label>\r\n                <input type=\"number\" id=\"age\" v-model=\"updatedFields.age\" :readonly=\"true\" />\r\n            </div>\r\n            <div>\r\n                <label for=\"add1\">주소</label>\r\n                <input type=\"text\" id=\"add1\" v-model=\"updatedFields.add1\" @click=\"openAddressSearch\" />\r\n            </div>\r\n            <div>\r\n                <label for=\"add2\">상세주소</label>\r\n                <input type=\"text\" id=\"add2\" v-model=\"updatedFields.add2\" />\r\n            </div>\r\n            <div>\r\n                <label for=\"zipcode\">우편번호</label>\r\n                <input type=\"text\" id=\"zipcode\" v-model=\"updatedFields.zipcode\" />\r\n            </div>\r\n            <div>\r\n                <label for=\"phone_num\">전화번호</label>\r\n                <input type=\"text\" id=\"phone_num\" v-model=\"updatedFields.phone_num\" />\r\n            </div>\r\n\r\n            <div>\r\n                <button type=\"button\" @click=\"cancelUpdate\">취소</button>\r\n                <button type=\"submit\">수정</button>\r\n            </div>\r\n        </form>\r\n        <div v-if=\"message\">{{ message }}</div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nimport myPageSide from \"../components/myPageSide.vue\";\r\n\r\nexport default {\r\n    components: { myPageSide },\r\n    data() {\r\n        return {\r\n            originalData: {}, // 기존 데이터를 저장할 객체\r\n            updatedFields: {\r\n                email: \"\",\r\n                name: \"\",\r\n                password: \"\",\r\n                sex: \"\",\r\n                age: 0,\r\n                add1: \"\",\r\n                add2: \"\",\r\n                zipcode: \"\",\r\n                phone_num: \"\",\r\n                provider: \"\",\r\n\r\n                password_check: false,\r\n                password_check2: false,\r\n                phone_check: false,\r\n            },\r\n            message: \"\",\r\n        };\r\n    },\r\n    created() {\r\n        const email = localStorage.getItem(\"userID\");\r\n        this.fetchUserInfo(email); // 컴포넌트 생성 시 기존 데이터를 불러오는 메소드 호출\r\n    },\r\n    methods: {\r\n        // 연령대 정보 변환 함수\r\n        convertAgeRange(ageRange) {\r\n            if (ageRange.includes(\"~\")) {\r\n                const ageRangeParts = ageRange.split(\"~\");\r\n                return `${ageRangeParts[0]}대`;\r\n            }\r\n            return ageRange;\r\n        },\r\n        async fetchUserInfo(email) {\r\n            try {\r\n                const response = await axios.get(\"mypage/getUserInfo\", {\r\n                    params: { userEmail: email },\r\n                });\r\n                this.originalData = {\r\n                    ...response.data,\r\n                };\r\n\r\n                this.updatedFields = { ...this.originalData }; // 수정할 정보를 updatedFields에 복사\r\n            } catch (error) {\r\n                console.error(\"기존 회원정보 불러오기 오류:\", error);\r\n            }\r\n        },\r\n        async updateUserInfo() {\r\n            const email = localStorage.getItem(\"userID\");\r\n\r\n            // POST 요청을 보내기 위한 데이터 구성\r\n            const requestData = {\r\n                email: email,\r\n                updatedFields: {\r\n                    add1: this.updatedFields.add1,\r\n                    add2: this.updatedFields.add2,\r\n                    zipcode: this.updatedFields.zipcode,\r\n                    phone_num: this.updatedFields.phone_num,\r\n                    password: this.updatedFields.password,\r\n                },\r\n            };\r\n\r\n            try {\r\n                const response = await axios.post(\"mypage/updateUserInfo\", requestData);\r\n                this.message = response.data.message;\r\n            } catch (error) {\r\n                console.error(\"회원정보 수정 오류:\", error);\r\n                this.message = \"회원정보 수정에 실패했습니다.\";\r\n            }\r\n        },\r\n        openAddressSearch() {\r\n            new daum.Postcode({\r\n                oncomplete: (data) => {\r\n                    if (data.userSelectedType === \"R\" || data.userSelectedType === \"J\") {\r\n                        // 우편번호와 주소 정보를 업데이트\r\n                        this.updatedFields.zipcode = data.zonecode;\r\n                        this.updatedFields.add1 = data.roadAddress || data.jibunAddress;\r\n                        this.updatedFields.add2 = \"\"; // 상세주소 초기화\r\n\r\n                        // 상세주소 필드로 포커스 이동\r\n                        document.getElementById(\"add2\").focus();\r\n                    }\r\n                },\r\n            }).open();\r\n        },\r\n        cancelUpdate() {\r\n            // 수정 취소 시 원래 데이터로 초기화\r\n            this.updatedFields = { ...this.originalData };\r\n            this.message = \"\"; // 메시지 초기화\r\n        },\r\n    },\r\n};\r\n</script>\r\n<style scoped>\r\n.userUpdateTitle {\r\n    font-weight: bold;\r\n    font-size: 30px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}